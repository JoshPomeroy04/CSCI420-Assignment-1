ID,Given String,Predicted Continuation,Full Method
1,"['public', 'void']","[('addVariable', 0.0003869370066553165), ('(', 1.0), ('""', 0.2962962962962963), ('127.0.0.1:', 0.005614796640558649), ('""', 1.0), ('+', 1.0), ('cssSuffix', 0.0009950248756218905), (')', 0.75), (';', 1.0), ('System', 0.0053347765579093865), ('.', 1.0), ('getenv', 0.009533898305084746), ('(', 1.0), ('""', 0.5555555555555556), ('Accept: text/html, image/png, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1', 9.436633009342267e-05), ('\\', 1.0), ('r', 1.0), ('\\', 0.9495798319327731), ('n', 0.8539823008849557), ('""', 0.959409594095941), (')', 0.32232105040237186), (';', 0.6090406958288362), ('page', 0.0045837107071064085), ('=', 0.32867132867132864), ('makePage', 0.0033783783783783786), ('(', 1.0), ('File', 0.05732484076433121), ('oldPropsFile', 0.0058997050147492625), (')', 1.0), (';', 0.5), ('return', 0.02244361483575957), ('new', 0.11330861145447053), ('TOCWidget', 0.008120649651972157), ('(', 1.0), ('new', 0.125), ('CallAndAssignInstruction', 0.001718213058419244), ('(', 1.0), ('""', 0.625), ('abc=def', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (',', 0.08405815503777538), ('summary', 0.0039941902687000725), ('.', 0.6046511627906976), ('get', 0.08), ('(', 1.0), ('Calendar', 0.010899182561307902), ('.', 0.9), ('getInstance', 0.23404255319148937), ('(', 1.0), ('this', 0.0072992700729927005), (',', 0.28046744574290483), ('ConnectionEvent', 0.0045045045045045045), ('.', 1.0), ('CLOSE', 1.0), (')', 1.0), (';', 1.0), ('deserializers', 0.0001988115487419647), ('.', 0.8888888888888888), ('add', 0.2631578947368421), ('(', 0.995049504950495), ('""', 0.08884615384615385), ('/path2', 0.000283098990280268), ('""', 1.0), (',', 0.5454545454545454), ('PropertiesResponder', 0.00014570887367040654), ('.', 1.0), ('SUITES', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void addVariable ( "" 127.0.0.1: "" + cssSuffix ) ; System . getenv ( "" Accept: text/html, image/png, image/jpeg, image/gif, image/x-xbitmap, */*;q=0.1 \ r \ n "" ) ; page = makePage ( File oldPropsFile ) ; return new TOCWidget ( new CallAndAssignInstruction ( "" abc=def "" ) , summary . get ( Calendar . getInstance ( this , ConnectionEvent . CLOSE ) ; deserializers . add ( "" /path2 "" , PropertiesResponder . SUITES ) ) )"
2,"['Future', '<']","[('Boolean', 0.5025295109612141), ('>', 1.0), ('touch', 0.09), ('(', 1.0), ('final', 0.9064748201438849), ('HttpContext', 0.0007168458781362007), ('context', 1.0), (')', 1.0), ('throws', 0.13128491620111732), ('IOException', 0.1847106248200403), (',', 0.17965705378020266), ('GeneralSecurityException', 0.029354207436399216), ('{', 1.0), ('String', 0.10526315789473684), ('pageName', 0.02593192868719611), (',', 0.24719101123595505), ('sourcePage', 0.009708737864077669), ('}', 'Bracket balancing')]","Future < Boolean > touch ( final HttpContext context ) throws IOException , GeneralSecurityException { String pageName , sourcePage )"
3,"['public', 'void']","[('setMinSessionTimeout', 0.005339730691843368), ('(', 1.0), ('int', 1.0), ('max', 0.05427914991384262), (')', 0.9692307692307692), (';', 0.9947368421052631), ('int', 0.01989219996023769), ('getContinuousTimeout', 0.014363546310054482), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('runner', 0.0010051028297510438), ('.', 0.9292929292929293), ('allTestingComplete', 0.010526315789473684), ('(', 1.0), (')', 0.45652173913043476), (';', 0.4777126381547333)]",public void setMinSessionTimeout ( int max ) ; int getContinuousTimeout ( ) ; runner . allTestingComplete ( ) ;
4,"['public', 'void']","[('shouldSendErrorMethodNotAllowed', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('switch', 0.0018242230764219168), ('(', 1.0), ('op', 0.012658227848101266), (')', 0.5492957746478874), (';', 0.875), ('s', 0.0004859837858136915), ('.', 0.673469387755102), ('tickTime', 0.016260162601626018), ('=', 0.3333333333333333), ('Integer', 0.047619047619047616), ('}', 'Bracket balancing')]",public void shouldSendErrorMethodNotAllowed ( ) { switch ( op ) ; s . tickTime = Integer )
5,"['public', 'void']","[('onTxnLoaded', 0.0004643244079863798), ('(', 1.0), ('TxnHeader', 1.0), ('hdr', 0.9411764705882353), (',', 0.7727272727272727), ('txn', 0.42857142857142855), (',', 0.5), ('hdr', 0.16666666666666666), (',', 0.5384615384615384), ('txn', 0.42857142857142855), (',', 0.5), ('TxnDigest', 0.16666666666666666), ('digest', 1.0), (')', 1.0), (';', 0.5384615384615384), ('container', 0.001988115487419647), ('.', 0.9444444444444444), ('instanceFor', 0.23247232472324722), ('(', 1.0), ('RequestInfo', 0.00796812749003984), ('info', 0.037037037037037035), (')', 1.0), (';', 0.4067796610169492), ('boolean', 0.02482935342066315), ('shutdown', 0.16020671834625322), ('(', 1.0), ('long', 0.36135265700483093), ('delayMS', 0.0055193176116407425), (')', 1.0), (';', 1.0), ('if', 0.01729660474055093), ('(', 1.0), ('mv', 0.002299811833577253), ('!', 0.7333333333333333), ('=', 1.0), ('null', 0.7410909090909091), (')', 0.5761475761475762), ('{', 0.37463002114164906), ('for', 0.01687406345690273), ('(', 1.0), ('int', 0.4218381775333857), ('index', 0.002871912693854107), (',', 0.1836734693877551), ('index', 0.045454545454545456), (')', 0.6875), (';', 0.453125), ('WikiPage', 0.00888024917714109), ('page', 0.14145810663764963), ('=', 0.4436741767764298), ('context', 0.08952702702702703), ('.', 0.9058823529411765), ('rootPagePath', 0.0297029702970297), (',', 0.125), ('""', 1.0), ('commit request was not processed', 0.0001080613788631943), ('""', 1.0), (',', 0.5), ('""', 0.38678420515809414), ('statpersisted', 0.0003241841365895829), ('""', 1.0), ('}', 'Bracket balancing')]","public void onTxnLoaded ( TxnHeader hdr , txn , hdr , txn , TxnDigest digest ) ; container . instanceFor ( RequestInfo info ) ; boolean shutdown ( long delayMS ) ; if ( mv ! = null ) { for ( int index , index ) ; WikiPage page = context . rootPagePath , "" commit request was not processed "" , "" statpersisted "" )"
6,"['public', 'void']","[('testBuildClassPath', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('if', 0.022727272727272728), ('(', 1.0), ('constructor', 0.0012544428183148652), ('&', 0.125), ('&', 1.0), ('string', 0.0030441400304414), ('.', 1.0), ('menu_copy_pass', 0.04477611940298507), (')', 1.0), (';', 1.0), ('String', 0.026430890896640084), ('html', 0.03223443223443224), ('=', 0.8), ('d', 0.009615384615384616), ('.', 1.0), ('listFiles', 0.046153846153846156), ('(', 1.0), ('wildcard', 0.08333333333333333), (')', 1.0), (';', 0.7692307692307693), ('}', 0.17806887715655306), ('sendPage', 0.0005320092214931725), ('(', 1.0), ('PageData', 0.2), ('pageData', 0.12149532710280374), (')', 'Paren balancing')]",public void testBuildClassPath ( ) throws Exception { if ( constructor & & string . menu_copy_pass ) ; String html = d . listFiles ( wildcard ) ; } sendPage ( PageData pageData )
7,"['public', 'void']","[('converseWithLeader', 0.0009286488159727596), ('(', 1.0), ('InputArchive', 1.0), ('ia', 0.8064516129032258), (',', 0.65625), ('qp', 0.43333333333333335), ('.', 0.6593406593406593), ('getZxid', 0.24210526315789474), (')', 'Paren balancing')]","public void converseWithLeader ( InputArchive ia , qp . getZxid )"
8,"['public', 'void']","[('kill', 0.001238198421297013), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('configProvider', 3.3135258123660786e-05), ('=', 1.0), ('new', 1.0), ('StringBuilder', 0.016353229762878167), ('(', 1.0), ('""', 0.06944444444444445), ('Shut down memcached client', 0.00023591582523355665), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('info', 8.836068832976209e-05), ('.', 1.0), ('getUser', 0.05405405405405406), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncDecr', 0.4640582347588717), ('(', 1.0), ('String', 0.9883720930232558), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('0', 0.0010796221322537112), (',', 0.5541706615532119), ('waiting', 0.003270645952575634), ('.', 1.0), ('contains', 0.3), ('(', 1.0), ('slimDescriptor', 0.02631578947368421), (')', 1.0), (';', 0.625), ('public', 0.04915063288343016), ('abstract', 0.032124556562869534), ('long', 0.060240963855421686), ('getNumRounds', 0.14754098360655737), ('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('Ids', 0.011437908496732025), ('.', 1.0), ('OPEN_ACL_UNSAFE', 0.9233870967741935), (',', 0.9956331877729258), ('CreateMode', 0.9336283185840708), ('.', 0.9551020408163265), ('PERSISTENT_WITH_TTL', 0.02390438247011952), (',', 0.6666666666666666), ('100', 0.75), (')', 0.7692307692307693), (';', 0.9019607843137255), ('int', 0.01989219996023769), ('getColumnCountInRow', 0.0064388311045071814), ('(', 1.0), ('0', 0.1694915254237288), (')', 0.5217086834733894), ('{', 0.1866977829638273), ('public', 0.012769561534953417), ('SerializerBuilder', 0.003424657534246575), ('answer', 0.3333333333333333), ('(', 1.0), ('InvocationOnMock', 1.0), ('invocation', 0.875), (')', 1.0), ('{', 0.05263157894736842), ('@Override', 0.007948400547266922), ('public', 0.7962962962962963), ('void', 0.8205128205128205), ('check', 0.0008512614146416964), ('(', 1.0), (')', 0.2926829268292683), (';', 0.4777126381547333), ('if', 0.01729660474055093), ('(', 1.0), ('completedTests', 0.000418147606104955), ('!', 1.0), ('=', 1.0), ('0', 0.07272727272727272), (';', 0.6786355475763016), ('}', 0.0921544209215442), ('}', 0.2383401312289413), (')', 0.36363636363636365), (';', 0.7686567164179104), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('cversion =', 4.7183165046711336e-05), ('""', 1.0), ('+', 1.0), ('""', 0.3485074626865672), ('!define paren (!-paren literal-!)', 0.0003061849357011635), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), (')', 0.32232105040237186), (',', 0.08405815503777538), ('new', 0.10003631082062454), ('Parameter', 0.0033396946564885495), ('(', 1.0), ('""', 0.7777777777777778), ('stat', 0.0016514107766348967), ('""', 1.0), (',', 0.868421052631579), ('content', 0.02564476176599155), (')', 0.9495192307692307), (';', 0.808695652173913), ('WikiPagePath', 0.0020212507455433077), ('testPagePath', 0.0945273631840796), ('=', 1.0), ('PathParser', 0.13636363636363635), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('args', 0.011712214166201896), ('[', 0.25339366515837103), ('i', 0.23140495867768596), (']', 0.9539295392953929), (')', 0.1544943820224719), ('null', 0.004830917874396135)]","public void kill ( ) ; configProvider = new StringBuilder ( "" Shut down memcached client "" ) ; info . getUser ( ) ; Future < Long > asyncDecr ( String key , 0 , waiting . contains ( slimDescriptor ) ; public abstract long getNumRounds ( ) , Ids . OPEN_ACL_UNSAFE , CreateMode . PERSISTENT_WITH_TTL , 100 ) ; int getColumnCountInRow ( 0 ) { public SerializerBuilder answer ( InvocationOnMock invocation ) { @Override public void check ( ) ; if ( completedTests ! = 0 ; } } ) ; assertSubString ( "" cversion = "" + "" !define paren (!-paren literal-!) \ n "" ) , new Parameter ( "" stat "" , content ) ; WikiPagePath testPagePath = PathParser . parse ( args [ i ] ) null"
9,"['public', 'CommandRunningFitClient']","[('build', 1.0), ('(', 1.0), (')', 0.9144736842105263), (';', 0.4777126381547333), ('System', 0.0053347765579093865), ('.', 1.0), ('arraycopy', 0.026483050847457626), ('(', 1.0), ('transformedMasterKey', 0.04), (')', 0.3333333333333333), (';', 1.0), ('mockery', 0.007444387991782456), ('.', 0.9985380116959064), ('mock', 0.36538461538461536), ('(', 1.0), ('ResourceRegistry', 0.004324324324324324), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('method', 0.04434447300771208), (',', 0.7155963302752294), ('""', 0.01763668430335097), ('ChildOne', 0.0008644910309055544), ('""', 1.0), (',', 0.18604651162790697), ('html', 0.026956141629025206), (')', 0.9545454545454546), (';', 0.9570405727923628), ('String', 0.026430890896640084), ('colorizedTable', 0.005860805860805861), ('=', 1.0), ('dt', 0.625), ('.', 1.0), ('getTestSummary', 0.18045112781954886), ('(', 1.0), (')', 0.9938650306748467), ('.', 0.0554925516578568), ('getSession', 0.0028100651424192106), ('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('""', 0.23656499636891795), ('help', 0.0004322455154527772), ('""', 1.0), (',', 0.5), ('""', 0.38678420515809414), ('bar', 0.0004322455154527772), ('""', 1.0), (';', 0.23076923076923078), ('String', 0.06547619047619048), ('getSecureClientPort', 0.029304029304029304), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('lines', 0.007415545179895633), ('=', 0.7), ('RecentChangesWikiPage', 0.0625), ('.', 1.0), ('updateRecentChanges', 0.3333333333333333), ('(', 1.0), ('page', 0.1111111111111111), (')', 0.44728079911209767), ('throws', 0.15261044176706828), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('void', 0.42702702702702705), ('setRequestStaleConnectionCheck', 0.01414184701092779), ('(', 1.0), ('boolean', 1.0), (')', 'Paren balancing')]","public CommandRunningFitClient build ( ) ; System . arraycopy ( transformedMasterKey ) ; mockery . mock ( ResourceRegistry . class , method , "" ChildOne "" , html ) ; String colorizedTable = dt . getTestSummary ( ) . getSession ( ) , "" help "" , "" bar "" ; String getSecureClientPort ( ) ; Map < String > lines = RecentChangesWikiPage . updateRecentChanges ( page ) throws IOException ; void setRequestStaleConnectionCheck ( boolean )"
10,"['public', 'InputStream']","[('getInputStream', 0.2727272727272727), ('(', 1.0), (')', 0.6774193548387096), (';', 0.4777126381547333), ('velocityContext', 0.0008173363670502993), ('.', 0.9868421052631579), ('put', 1.0), ('(', 1.0), ('""', 0.5487914055505819), ('Interrupted while waiting for message on queue', 0.00023591582523355665), ('""', 1.0), (',', 1.0), (')', 'Paren balancing')]","public InputStream getInputStream ( ) ; velocityContext . put ( "" Interrupted while waiting for message on queue "" , )"
11,"['private', 'static']","[('String', 0.2157676348547718), ('makeURIString', 0.0041841004184100415), ('(', 1.0), ('String', 0.5), ('dirname', 0.0013265704252828716), (')', 0.043478260869565216), (';', 0.7), ('buildBody', 1.104508604122026e-05), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('final', 0.04940239043824701), ('ZooKeeper', 0.044642857142857144), ('zk1', 0.02564102564102564), ('=', 1.0), ('createClient', 1.0), ('(', 1.0), (')', 0.5511363636363636), (';', 0.4777126381547333), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('(', 0.0036194415718717684), (')', 0.7018800358102059), ('>', 0.0031715521383950023), ('=', 0.10548523206751055), ('0', 0.325), (';', 0.6786355475763016), ('j', 0.0161892901618929), ('<', 0.5), ('29', 0.0625), ('}', 'Bracket balancing')]",private static String makeURIString ( String dirname ) ; buildBody ( ) throws IOException { final ZooKeeper zk1 = createClient ( ) ; < T > ( ) > = 0 ; j < 29 )
12,"['@Test', 'public']","[('void', 1.0), ('registerCustomComparators', 0.0002321622039931899), ('(', 1.0), ('CustomComparatorRegistry', 1.0), ('customComparatorRegistry', 1.0), (')', 0.88), ('throws', 0.5151515151515151), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('<', 0.21625951141369643), ('T', 1.0), ('>', 0.9951795613400819), ('BulkFuture', 0.051913133402275075), ('<', 1.0), ('Map', 1.0), ('<', 0.9933283914010378), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('String', 0.18341388959552277), ('>', 0.22870452528837623), ('keys', 0.42378467453996155), (',', 0.5499677627337202), ('Transcoder', 0.76), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('CASValue', 0.10792580101180438), ('<', 0.993127147766323), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('invokeAndGetResponse', 0.0058309037900874635), ('(', 1.0), (')', 'Paren balancing')]","@Test public void registerCustomComparators ( CustomComparatorRegistry customComparatorRegistry ) throws OperationTimeoutException ; < T > BulkFuture < Map < String , String > keys , Transcoder < T > Future < CASValue < Object > invokeAndGetResponse ( )"
13,"['public', 'void']","[('shouldIgnoreAResourceWithTheWrongWebMethod', 0.0022442346386008357), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('votes', 0.00035344275331904834), ('.', 0.7272727272727273), ('put', 0.8275862068965517), ('(', 1.0), ('descriptor', 0.006266786034019696), (')', 0.5217391304347826), ('throws', 0.1721311475409836), ('OperationException', 0.005326806795277857), (';', 0.9864864864864865), ('Set', 0.2191780821917808), ('<', 0.9829931972789115), ('ObjectName', 0.047109207708779445), ('>', 1.0), ('ensureOnly', 0.07692307692307693), ('(', 1.0), ('String', 1.0), ('.', 0.06539211861100273), ('.', 0.7353474320241692), ('.', 0.5), ('.', 0.5), ('names', 0.00812720848056537), (')', 0.6511627906976745), ('.', 0.07692307692307693), ('get', 0.023502363009324307), ('(', 1.0), ('matchIndex', 0.0009082652134423251), (')', 1.0), ('.', 0.2), ('getExceptions', 0.005364669817345766), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('assertFalse', 0.002840909090909091), ('(', 1.0), ('childTwo', 0.007042253521126761), ('.', 1.0), ('getData', 0.5555555555555556), ('(', 0.9850374064837906), (')', 0.9167616875712656), (',', 0.04123017779913503), ('context', 0.007625272331154684), ('.', 0.5559006211180124), ('getRootPage', 0.06683168316831684), ('(', 1.0), (')', 0.9137931034482759), (')', 0.1723209995194618), (',', 0.011624181959635715), ('DummyPlugin', 0.00036310820624546115), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('DefaultResult', 0.0038560411311053984), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('Converters', 0.005784061696658098), ('.', 1.0), ('class', 1.0), ('.', 0.10480613893376414), ('getMethod', 0.3333333333333333), ('(', 1.0), (')', 0.5968468468468469), (';', 0.4777126381547333), ('testFormatter', 6.627051624732157e-05), ('.', 1.0), ('getTotalSummary', 0.4), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('E', 0.00028793550244745177), ('{', 0.5), ('final', 1.0), ('Sequence', 0.017857142857142856), ('sequence', 0.7692307692307693), ('=', 0.9230769230769231), ('mockery', 0.8), ('.', 1.0), ('mock', 0.36538461538461536), ('(', 1.0), ('ParametersProvider', 0.005405405405405406), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('PageResult', 0.005141388174807198), ('.', 0.9), ('class', 0.9230769230769231), ('.', 0.10480613893376414), ('getName', 0.21001926782273603), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('zk', 0.0025514148755218804), ('=', 0.09195402298850575), ('createClient', 0.44607843137254904), ('(', 1.0), ('int', 0.017045454545454544), ('delay', 0.10913268236645605), (')', 0.9637305699481865), (';', 0.9894894894894894), ('assertThat', 0.010227749674169962), ('(', 1.0), ('with', 0.001774622892635315), ('(', 0.9583333333333334), ('eq', 0.10714285714285714), ('(', 1.0), ('3', 0.07017543859649122), (')', 0.48034934497816595), (')', 0.3672316384180791), ('.', 0.06104983753603954), ('start', 0.008174734959764977), ('(', 1.0), (')', 0.8641509433962264), (';', 0.4777126381547333), ('int', 0.01989219996023769), ('getMinClientResponseSize', 0.04061416542842992), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('void', 0.04505290596213744), ('setCurrentScriptActor', 0.0012856224555388902), ('(', 1.0), ('String', 1.0), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('true', 0.05512679162072767), (';', 1.0), ('makeResponder', 0.00909090909090909), ('(', 1.0), ('Request', 0.05), ('si', 0.17687074829931973), (')', 1.0), (';', 0.6666666666666666), ('public', 0.04915063288343016), ('int', 0.20082774931020891), ('hashCode', 0.027309236947791166), ('(', 0.9), (')', 0.95), (';', 0.4777126381547333), ('PwDatabaseV4', 4.418034416488104e-05), ('db', 1.0), ('=', 1.0), ('new', 0.09090909090909091), ('HashMap', 0.02044153720359771), ('<', 0.9579439252336449), ('Long', 0.18333333333333332), ('>', 0.8967254408060453), ('asyncDecr', 0.4640582347588717), ('(', 1.0), ('String', 0.9883720930232558), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('to', 0.007986960065199673), (')', 0.9074074074074074), (';', 0.9746192893401016), ('}', 0.17806887715655306), ('LOG', 0.006384110657918071), ('.', 1.0), ('info', 0.5220994475138122), ('(', 0.9577777777777777), ('""', 0.9205298013245033), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void shouldIgnoreAResourceWithTheWrongWebMethod ( ) ; votes . put ( descriptor ) throws OperationException ; Set < ObjectName > ensureOnly ( String . . . . names ) . get ( matchIndex ) . getExceptions ( ) throws Exception { assertFalse ( childTwo . getData ( ) , context . getRootPage ( ) ) , DummyPlugin . class , DefaultResult . class , Converters . class . getMethod ( ) ; testFormatter . getTotalSummary ( ) throws E { final Sequence sequence = mockery . mock ( ParametersProvider . class , PageResult . class . getName ( ) ; zk = createClient ( int delay ) ; assertThat ( with ( eq ( 3 ) ) . start ( ) ; int getMinClientResponseSize ( ) ) ; void setCurrentScriptActor ( String key , int by ) ; } return true ; makeResponder ( Request si ) ; public int hashCode ( ) ; PwDatabaseV4 db = new HashMap < Long > asyncDecr ( String key , int to ) ; } LOG . info ( "" ) )"
14,"['public', 'void']","[('testSimpleClosing', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('CASValue', 0.10792580101180438), ('<', 0.993127147766323), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('getAndTouch', 0.030612244897959183), ('(', 1.0), ('String', 1.0), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('def', 0.48320943347859524), (',', 0.4470338983050847), ('int', 0.9791183294663574), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('OperationCallback', 0.020322354590049056), ('cb', 0.9263157894736842), (')', 0.9915966386554622), (';', 0.9366812227074236), ('assertContains', 0.0005522543020610131), ('(', 1.0), ('result', 0.5862068965517241), (')', 0.2691131498470948), ('throws', 0.04743083003952569), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('System', 0.006944444444444444), ('.', 1.0), ('clearProperty', 0.2044491525423729), ('(', 1.0), ('""', 0.2694300518134715), ('$V->[Bob]', 9.436633009342267e-05), ('""', 1.0), (',', 1.0), ('content', 0.02564476176599155), (')', 0.9495192307692307), (';', 0.808695652173913), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('""', 0.013230429988974642), ('GETPROP', 0.0027100271002710027), ('""', 1.0), (';', 1.0), ('WikiPage', 0.047619047619047616), ('greatGrandChildA', 0.001088139281828074), ('=', 1.0), ('grandChildA', 1.0), ('.', 1.0), ('getChildPage', 1.0), ('(', 1.0), ('String', 0.20994475138121546), ('[', 0.014670308232539992), (']', 0.9407114624505929), ('command', 0.0009937065253395165), ('=', 1.0), (')', 'Paren balancing')]","public void testSimpleClosing ( ) ; Future < CASValue < Object > getAndTouch ( String key , int by , long def , int exp , OperationCallback cb ) ; assertContains ( result ) throws Exception { System . clearProperty ( "" $V->[Bob] "" , content ) ; } return "" GETPROP "" ; WikiPage greatGrandChildA = grandChildA . getChildPage ( String [ ] command = )"
15,"['Operation', 'removeCurrentReadOp']","[('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('assertEquals', 0.017045454545454544), ('(', 1.0), ('""', 0.3830213903743315), ('/test', 0.0014626781164480513), ('""', 0.7741935483870968), (',', 0.875), ('self', 7.285443683520327e-05), ('.', 0.9375), ('tick', 0.023255813953488372), ('.', 1.0), ('set', 1.0), ('(', 0.9844559585492227), ('""', 0.1971223021582734), ('Key Rounds unequal', 0.00018873266018684534), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), (""page ''two''"", 0.0006483682731791658), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('%00', 0.000141549495140134), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('}', 0.17806887715655306), ('catch', 0.058698350771413374), ('(', 1.0), ('AdminServerException', 0.002583979328165375), ('e', 1.0), (')', 1.0), ('{', 0.5944055944055944), ('Objects', 0.00026060329663170237), ('.', 1.0), ('requireNonNull', 0.5714285714285714), ('(', 1.0), ('path', 0.125), (')', 0.35194174757281554), (';', 0.5525672371638142), ('mockery', 0.007444387991782456), ('.', 0.9985380116959064), ('mock', 0.36538461538461536), ('(', 1.0), ('ResourceBundle', 0.001081081081081081), ('.', 0.6666666666666666), ('getBundle', 0.9375), ('(', 1.0), ('""', 0.7692307692307693), ('|set name|Marisa|department and title;|QA|Tester|', 4.7183165046711336e-05), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('""', 0.3485074626865672), ('""', 0.02786282914880588), (')', 0.4384805945499587), (';', 0.6090406958288362), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('view', 0.0031023784901758012), (')', 0.8666666666666667), ('{', 0.2972972972972973), ('loadPage', 6.515082415792559e-05), ('(', 1.0), ('String', 0.35714285714285715), ('key', 0.5850175575497464), (')', 0.14608612895550796), (';', 0.710124826629681), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncDecr', 0.4640582347588717), ('(', 1.0), ('String', 0.9883720930232558), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('by', 0.2550628044091259), (',', 0.5537688442211055), ('long', 0.9741735537190083), ('casId', 0.143809279671879), (',', 0.998220640569395), ('T', 0.2992957746478873), ('>', 0.6264626462646264), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('File', 0.0021648368640791713), ('saslConfFile', 0.00881057268722467), ('=', 1.0), ('new', 1.0), ('SuiteHistoryFormatter', 0.00035042635206167504), ('(', 1.0), ('context', 1.0), (',', 0.5644171779141104), ('request', 0.3860103626943005), (')', 0.7686472819216182), (';', 0.5648218347232752), ('}', 0.17806887715655306), ('logger', 0.001241354850150736), ('.', 1.0), ('debug', 0.5374149659863946), ('(', 1.0), ('""', 0.9140271493212669), ('decisionTable_did_0/scriptTable_s_id_0', 0.0007549306407473814), ('""', 1.0), (',', 1.0), ('clientBuilder', 0.0013113798630336587), ('.', 1.0), ('getCommandPattern', 0.3137254901960784), ('(', 1.0), ('PageData', 0.02631578947368421), ('data', 0.40498442367601245), (')', 0.3406113537117904), (';', 0.6805970149253732), ('}', 0.17806887715655306), ('private', 0.005852101436424898), ('String', 0.10606060606060606), ('sha1Hash', 0.002638522427440633), ('(', 1.0), ('input', 0.8), ('.', 0.34), ('substring', 0.04132231404958678), ('(', 1.0), ('1', 0.22340425531914893), (',', 0.4359805510534846), ('""', 0.02823529411764706), ('#!/bin/bash', 0.0002161227577263886), ('\\', 1.0), ('nif [[ -z', 1.0), ('\\""', 1.0), ('$(grep jdeb /etc/passwd )', 0.5), ('\\""', 1.0), (']] ; then', 1.0), ('""', 0.5), (',', 1.0), ('response', 0.012093836514643741), ('.', 0.7636363636363637), ('getStatus', 0.14355828220858896), ('(', 1.0), (')', 0.9723756906077348), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('new', 0.16242380781642166), ('ImportTable', 0.002320185614849188), ('(', 1.0), ('t', 1.0), (',', 0.6436781609195402), ('""', 0.43564356435643564), ('TLSv1.1', 0.0002161227577263886), ('""', 1.0), (')', 0.6666666666666666), (';', 0.6090406958288362), ('WikiPage', 0.00888024917714109), ('root', 0.02720348204570185), (',', 0.3419354838709677), ('PathParser', 0.6455357142857143), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('""', 0.6748466257668712), ('server.%d=127.0.0.1:%d:%d:%s;127.0.0.1:%d', 4.7183165046711336e-05), ('\\', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","Operation removeCurrentReadOp ( ) throws Exception { assertEquals ( "" /test "" , self . tick . set ( "" Key Rounds unequal "" , "" page ''two'' "" ) ; assertEquals ( "" %00 "" ) ; } catch ( AdminServerException e ) { Objects . requireNonNull ( path ) ; mockery . mock ( ResourceBundle . getBundle ( "" |set name|Marisa|department and title;|QA|Tester| \ n "" + "" "" ) ; < T > view ) { loadPage ( String key ) ; Future < Long > asyncDecr ( String key , int by , long by , long casId , T > tc ) ; File saslConfFile = new SuiteHistoryFormatter ( context , request ) ; } logger . debug ( "" decisionTable_did_0/scriptTable_s_id_0 "" , clientBuilder . getCommandPattern ( PageData data ) ; } private String sha1Hash ( input . substring ( 1 , "" #!/bin/bash \ nif [[ -z \"" $(grep jdeb /etc/passwd ) \"" ]] ; then "" , response . getStatus ( ) { return new ImportTable ( t , "" TLSv1.1 "" ) ; WikiPage root , PathParser . parse ( "" server.%d=127.0.0.1:%d:%d:%s;127.0.0.1:%d \ ) ) ) ) ) )"
16,"['public', 'void']","[('tearDown', 0.010215136975700355), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('recursiveDelete', 0.0005863574174213304), ('(', 1.0), ('File', 0.3), ('logFile', 0.011799410029498525), ('=', 0.3333333333333333), ('new', 0.8333333333333334), ('WhalinTranscoder', 0.0002336175680411167), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('StreamMode', 0.002005347593582888), ('.', 0.7333333333333333), ('SNAPPY', 0.21428571428571427), ('.', 0.6666666666666666), ('getName', 0.5), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('}', 0.17806887715655306), ('public', 0.0813974108884554), ('void', 0.7639198218262806), ('testDump', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('def', 0.48320943347859524), (',', 0.4470338983050847), ('int', 0.9791183294663574), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('cas', 0.02794155344783389), (',', 0.7270194986072424), ('String', 0.9157509157509157), ('hostname', 0.00022182786157941438), (',', 0.5), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void tearDown ( ) { recursiveDelete ( File logFile = new WhalinTranscoder ( ) ; assertEquals ( StreamMode . SNAPPY . getName ( ) ) ; } public void testDump ( ) ; long decr ( String key , int by , long def , int by , long cas , String hostname , ) )"
17,"['boolean', 'getRequestStaleLatencyCheck']","[('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('allowing', 0.0018334842828425634), ('(', 1.0), ('session', 0.08173076923076923), (')', 0.6902654867256637), ('.', 0.36082474226804123), ('start', 0.008174734959764977), ('(', 1.0), (')', 0.8641509433962264), (';', 0.4777126381547333), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('expected1', 0.0016625103906899418), (',', 1.0), ('scriptTag', 1.0), ('.', 1.0), ('html', 0.7692307692307693), ('(', 1.0), (')', 0.8951612903225806), (',', 0.04123017779913503), ('stat', 0.00980392156862745), ('.', 0.8), ('getMzxid', 0.11574074074074074), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('BulkFuture', 0.051913133402275075), ('<', 1.0), ('Map', 1.0), ('<', 0.9933283914010378), ('SocketAddress', 0.18384518300378627), (',', 0.9722530521642619), ('Map', 0.6484018264840182), ('<', 0.9927536231884058), ('SocketAddress', 0.18384518300378627), (',', 0.9722530521642619), ('Map', 0.6484018264840182), ('<', 0.9927536231884058), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('getVersions', 0.08294424608624004), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('makeResponse', 0.008557925661003959), ('(', 1.0), ('new', 0.1383399209486166), ('IllegalStateException', 0.0013745704467353953), ('(', 1.0), ('""', 0.7272727272727273), ('|$value=|update no param|', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (')', 0.23592152879182274), (';', 0.6920507070614618), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncIncr', 0.445859872611465), ('(', 1.0), ('String', 0.9979633401221996), ('key', 0.5850175575497464), (')', 0.14608612895550796), (';', 0.710124826629681), ('CASValue', 0.0018887097130486647), ('<', 1.0), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('tc', 0.0029154518950437317), (')', 0.8272900763358778), (';', 0.7985474006116208), ('Date', 0.0006958404205968764), ('oneHour', 0.029850746268656716), ('=', 1.0), ('new', 1.0), ('Mockery', 0.01062959934587081), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('if', 0.01729660474055093), ('(', 1.0), ('hasCachedSubpage', 0.0006272214091574326), ('(', 1.0), ('name', 1.0), (',', 0.2849604221635884), ('Stat', 0.03051643192488263), ('stat', 0.9365079365079365), (')', 0.6511627906976745), (';', 0.632183908045977), ('this', 0.009366232962954782), ('.', 1.0), ('root', 0.021925133689839574), ('.', 0.3128834355828221), ('getPageCrawler', 0.34823091247672255), ('(', 1.0), (')', 0.9908256880733946), ('.', 0.0554925516578568), ('render', 0.006003320986077404), ('(', 1.0), (')', 0.5896739130434783), (';', 0.4777126381547333), ('Table', 0.000762110936844198), ('t1', 0.013157894736842105), ('=', 1.0), ('new', 0.4444444444444444), ('DefaultResourceMethod', 0.007709379745356851), ('(', 1.0), ('resourceClass', 0.7605633802816901), (',', 1.0), ('DogController', 0.8703703703703703), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('public', 0.04915063288343016), ('long', 0.15648403626330312), ('getLogDirSize', 0.12709030100334448), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('getAttribute', 0.01251756290714012), ('(', 1.0), ('""', 0.44919786096256686), ('no change', 0.00033028215532697935), ('""', 1.0), (')', 0.875), (';', 0.6090406958288362), ('ResourceMethod', 0.0010603282599571451), ('match', 0.061224489795918366), ('=', 1.0), ('parameterPattern', 0.02), ('.', 1.0), ('matcher', 1.0), ('(', 1.0), ('format', 0.010416666666666666), ('.', 0.15384615384615385), ('length', 0.05), (';', 0.2125), ('i', 0.7029702970297029), ('+', 0.4702517162471396), ('+', 0.8926315789473684), (')', 0.6942482341069627), ('indent', 0.002911208151382824), ('+', 0.5), ('""', 0.6666666666666666), ('TEST1', 0.0021432945499081446), ('\\', 1.0), ('nTEST2', 0.07142857142857142), ('\\', 1.0), ('nTEST3', 1.0), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('HtmlUtil', 0.0004975124378109452), ('.', 1.0), ('HR', 0.018115942028985508), (')', 0.8), (';', 1.0), ('SelectionKey', 0.0006295699043495548)]","boolean getRequestStaleLatencyCheck ( ) ; allowing ( session ) . start ( ) ; assertSubString ( expected1 , scriptTag . html ( ) , stat . getMzxid ( ) ; < T > BulkFuture < Map < SocketAddress , Map < SocketAddress , Map < String > getVersions ( ) . makeResponse ( new IllegalStateException ( "" |$value=|update no param| "" ) ) ; Future < Long > asyncIncr ( String key ) ; CASValue < Object > tc ) ; Date oneHour = new Mockery ( ) ; if ( hasCachedSubpage ( name , Stat stat ) ; this . root . getPageCrawler ( ) . render ( ) ; Table t1 = new DefaultResourceMethod ( resourceClass , DogController . class ) ; public long getLogDirSize ( ) . getAttribute ( "" no change "" ) ; ResourceMethod match = parameterPattern . matcher ( format . length ; i + + ) indent + "" TEST1 \ nTEST2 \ nTEST3 \ n "" + HtmlUtil . HR ) ; SelectionKey"
18,"['boolean', 'hasChildPage']","[('(', 1.0), ('RECENT_CHANGES', 0.014492753623188406), (')', 1.0), (';', 0.7777777777777778), ('PageData', 0.0035344275331904837), ('data', 0.6677018633540373), ('=', 0.6331877729257642), ('root', 0.07692307692307693), ('.', 0.9424242424242424), ('getPageCrawler', 0.34823091247672255), ('(', 1.0), (')', 0.9908256880733946), (';', 0.4777126381547333), ('view', 0.0001988115487419647), ('.', 1.0), ('isAssignableFrom', 0.0851063829787234), ('(', 1.0), ('o', 0.05555555555555555), ('instanceof', 0.48672566371681414), ('Delete', 0.017857142857142856), (')', 1.0), ('o', 0.5), (';', 0.8157894736842105), ('return', 0.46774193548387094), ('new', 0.11330861145447053), ('PrintWriter', 0.002320185614849188), ('(', 1.0), ('sw', 0.1), (')', 1.0), (';', 1.0), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncDecr', 0.4640582347588717), ('(', 1.0), ('String', 0.9883720930232558), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('testPages', 0.0006406149903907751), ('.', 0.9137931034482759), ('get', 0.34782608695652173), ('(', 1.0), ('String', 0.22434150772025432), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('def', 0.48320943347859524), (',', 0.4470338983050847), ('int', 0.9791183294663574), ('offset', 0.010105949470252649), (',', 0.2028985507246377), ('nRecentCount', 0.2), (',', 1.0), ('testWithPrecedingLogFile', 0.3333333333333333), (',', 1.0), ('version2', 1.0), (',', 0.6818181818181818), ('""', 0.34782608695652173), ('suite tear down', 0.002485411713853469), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('removeResultsDirectory', 9.940577437098235e-05), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('bv', 0.0001954524724737768), ('.', 1.0), ('putShort', 0.6666666666666666), ('(', 1.0), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","boolean hasChildPage ( RECENT_CHANGES ) ; PageData data = root . getPageCrawler ( ) ; view . isAssignableFrom ( o instanceof Delete ) o ; return new PrintWriter ( sw ) ; Future < Long > asyncDecr ( String key , int by ) ; testPages . get ( String key , int by , long def , int offset , nRecentCount , testWithPrecedingLogFile , version2 , "" suite tear down "" ) ; removeResultsDirectory ( ) { bv . putShort ( ) )"
19,"['public', 'boolean']","[('render', 0.002403846153846154), ('(', 1.0), ('fullPath', 0.07336956521739131), (')', 0.9069767441860465), (';', 0.75), ('PageData', 0.0035344275331904837), ('oldData', 0.009316770186335404), ('=', 1.0), ('movee', 1.0), ('.', 1.0), ('getName', 0.4), ('(', 1.0), (')', 1.0)]",public boolean render ( fullPath ) ; PageData oldData = movee . getName ( )
20,"['private', 'void']","[('becomeLeader', 0.0007513148009015778), ('(', 1.0), (')', 'Paren balancing')]",private void becomeLeader ( )
21,"['public', 'void']","[('testComplete', 0.010602073982355673), ('(', 1.0), ('TestPage', 0.17582417582417584), ('page', 0.020689655172413793), (':', 0.16666666666666666), ('pageList', 0.3333333333333333), (')', 1.0), ('{', 0.4117647058823529), ('return', 0.14763176754185942), ('Integer', 0.002509860164933668), ('.', 1.0), ('parseInt', 0.4421768707482993), ('(', 1.0), ('split', 0.015384615384615385), ('[', 1.0), ('0', 0.4), (']', 1.0), (')', 0.21828358208955223), (';', 0.5917874396135265), ('}', 'Bracket balancing')]",public void testComplete ( TestPage page : pageList ) { return Integer . parseInt ( split [ 0 ] ) ; )
22,"['void', 'set']","[('(', 1.0), ('String', 0.4244604316546763), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('Transcoder', 0.0672740014015417), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncDecr', 0.4640582347588717), ('(', 1.0), ('String', 0.9883720930232558), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('hold', 0.004400977995110024), (')', 1.0), (';', 1.0), ('super', 0.0008283814530915196), ('.', 1.0), ('removeChildPage', 0.00954653937947494), ('(', 1.0), ('String', 0.7833333333333333), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (')', 'Paren balancing'), (')', 'Paren balancing')]","void set ( String key , int exp , Transcoder < T > Future < Long > asyncDecr ( String key , int hold ) ; super . removeChildPage ( String key , int exp ) )"
23,"['public', 'void']","[('sameSymbolTwiceReplacement', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('NodeList', 0.00017672137665952417), ('emptyNodeList', 0.15789473684210525), ('=', 1.0), ('mock', 1.0), ('(', 1.0), ('FitNesseContext', 0.012972972972972972), ('context', 0.8857142857142857), (')', 0.22442244224422442), ('{', 0.2122905027932961), ('insertSetUpForThisGroup', 6.515082415792559e-05), ('(', 1.0), ('String', 0.75), ('.', 0.06539211861100273), ('.', 0.7353474320241692), ('keys', 0.3872791519434629), (')', 0.997270245677889), ('.', 0.0016638935108153079), ('loadTrustStore', 0.00025546046749265553), ('(', 1.0), (')', 0.75), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('setConnectionFreezeTime', 0.0032502708559046588), ('(', 1.0), ('int', 1.0), ('requests', 0.027283170591614014), (')', 1.0), (';', 1.0), ('WikiPage', 0.00888024917714109), ('slimPage', 0.017410228509249184), ('=', 1.0), ('addTestPage', 0.8928571428571429), ('(', 1.0), ('suite', 0.7536231884057971), (',', 0.9666666666666667), ('""', 0.6153846153846154), ('string method!', 0.0001080613788631943), ('""', 1.0), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void sameSymbolTwiceReplacement ( ) ; NodeList emptyNodeList = mock ( FitNesseContext context ) { insertSetUpForThisGroup ( String . . keys ) . loadTrustStore ( ) ; public void setConnectionFreezeTime ( int requests ) ; WikiPage slimPage = addTestPage ( suite , "" string method! "" ) )"
24,"['private', 'static']","[('String', 0.2157676348547718), ('decapitalize', 0.0041841004184100415), ('(', 1.0), ('String', 1.0), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (')', 0.44536817102137766), (';', 0.7537379067722075), ('public', 0.04915063288343016), ('String', 0.06996452502956248), ('toString', 0.15497737556561086), ('(', 1.0), (')', 0.8720666161998486), ('{', 0.09111004324843826), ('int', 0.01570134862206007), ('tt', 0.008174386920980926), ('=', 0.6666666666666666), ('=', 0.3333333333333333), ('-', 0.032073310423825885), ('1', 0.9936708860759493), (',', 0.13916500994035785), ('CLIENT_PORT_QP1', 0.018823529411764704), (',', 0.9473684210526315), ('ClientBase', 0.2702702702702703), ('.', 1.0), ('CONNECTION_TIMEOUT', 0.2585227272727273), ('/', 0.0297029702970297), ('1000', 0.3333333333333333), (';', 0.6), ('i', 0.36363636363636365), ('+', 0.4702517162471396), ('+', 0.8926315789473684), (';', 0.14833501513622604), ('statementExecutor', 0.036231884057971016), ('.', 1.0), ('call', 0.546875), ('(', 1.0), ('INSTANCE_NAME', 0.0967741935483871), (',', 1.0), ('echoMethodName', 0.14285714285714285), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('char', 0.0018242230764219168), ('ch', 0.21875), ('=', 0.875), ('=', 0.5), ('OperationState', 0.001718213058419244), ('.', 1.0), ('COMPLETE', 0.4666666666666667), (';', 0.11764705882352941), ('return', 0.5), ('factory', 0.002472187886279357), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","private static String decapitalize ( String key , int exp ) ; public String toString ( ) { int tt = = - 1 , CLIENT_PORT_QP1 , ClientBase . CONNECTION_TIMEOUT / 1000 ; i + + ; statementExecutor . call ( INSTANCE_NAME , echoMethodName ( ) { char ch = = OperationState . COMPLETE ; return factory ) ) )"
25,"['int', 'getMaxSessionTimeout']","[('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('will', 0.006627051624732157), ('(', 1.0), ('returnValue', 0.972176759410802), ('(', 0.9983193277310924), ('CommonComponent', 0.009950248756218905), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('ServerCnxnFactory', 0.00018776646270074444), ('f', 0.5555555555555556), ('=', 1.0), ('new', 0.28846153846153844), ('ArrayList', 0.041934353463380446), ('<', 0.9570405727923628), ('Symbol', 0.004166666666666667), ('>', 1.0), ('peek', 0.02097902097902098), ('(', 1.0), (')', 0.7692307692307693), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (')', 0.44536817102137766), (';', 0.7537379067722075), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('qp', 0.0011140819964349377), (',', 0.5660377358490566), ('LearnerHandler', 0.22727272727272727), ('learnerHandler', 1.0), (',', 0.4936708860759494), ('Socket', 0.5384615384615384), ('socket', 0.9285714285714286), (')', 0.6326530612244898), ('throws', 0.11594202898550725), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('uri', 0.008427623878267655), (')', 0.5074626865671642), (',', 0.04), ('""', 0.23656499636891795), ('x-11', 0.0004322455154527772), ('""', 1.0), (',', 0.8333333333333334), ('new', 0.049249599300597406), ('MyDvdsSteps', 0.00047709923664122136), ('(', 1.0), ('pageFactory', 1.0), ('.', 0.2), ('newPage', 0.704225352112676), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('instructions', 0.00035344275331904834), ('=', 0.30303030303030304), ('createInstructions', 0.13157894736842105), ('(', 1.0), ('tables', 0.375), (')', 0.625), (';', 0.6666666666666666), ('if', 0.01729660474055093), ('(', 1.0), ('txnLogToClose', 0.0002090738030524775), ('!', 1.0), ('=', 1.0), ('0', 0.07272727272727272), (';', 0.6786355475763016), ('i', 0.47447073474470736), ('<', 0.4816933638443936), (')', 'Paren balancing'), (')', 'Paren balancing')]","int getMaxSessionTimeout ( ) ; will ( returnValue ( CommonComponent . class ) ; ServerCnxnFactory f = new ArrayList < Symbol > peek ( ) throws OperationTimeoutException ; long incr ( String key , int exp ) ; assertEquals ( qp , LearnerHandler learnerHandler , Socket socket ) throws OperationTimeoutException ; long decr ( String uri ) , "" x-11 "" , new MyDvdsSteps ( pageFactory . newPage ( ) ) ; instructions = createInstructions ( tables ) ; if ( txnLogToClose ! = 0 ; i < ) )"
26,"['public', 'void']","[('withValidation', 0.00030954960532425323), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('outjecter', 0.0007968127490039841), ('.', 1.0), ('include', 1.0), ('(', 1.0), ('extractor', 0.008333333333333333), (')', 0.2727272727272727), ('.', 0.2857142857142857), ('hasAttribute', 0.0020436837399412443), ('(', 1.0), ('""', 0.6103896103896104), ('Using older form of compile', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('}', 0.17806887715655306), ('public', 0.0813974108884554), ('void', 0.7639198218262806), ('DirectoryWithoutHtmlFilesIsFileSystemPage', 0.0002321622039931899), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('final', 0.007223486270958051), ('ParameterNameProvider', 0.0012422360248447205), ('delegate', 1.0), ('=', 1.0), ('new', 0.375), ('ACL', 0.0004672351360822334)]","public void withValidation ( ) throws IOException { outjecter . include ( extractor ) . hasAttribute ( "" Using older form of compile "" ) ; } public void DirectoryWithoutHtmlFilesIsFileSystemPage ( ) ; final ParameterNameProvider delegate = new ACL"
27,"['public', 'void']","[('start', 0.004952793685188052), ('(', 1.0), (')', 0.8641509433962264), (';', 0.4777126381547333), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('T', 0.0531540847983454), ('onErrorForwardTo', 0.029197080291970802), ('(', 1.0), ('T', 0.5294117647058824), ('controller', 0.519774011299435), (')', 1.0), (';', 0.9563318777292577), ('public', 0.04915063288343016), ('Index', 0.0015766653527788726), ('startMap', 0.5882352941176471), ('(', 1.0), ('TreeMap', 0.74), ('v', 0.4166666666666667), (',', 1.0), (')', 'Paren balancing')]","public void start ( ) ; < T > T onErrorForwardTo ( T controller ) ; public Index startMap ( TreeMap v , )"
28,"['protected', 'Object']","[('convertNestedWikiHashes', 0.1), ('(', 1.0), ('Converter', 1.0), (')', 0.6), ('new', 1.0), ('GregorianCalendar', 0.11627906976744186), ('(', 1.0), ('2013', 0.24489795918367346), (',', 1.0), ('Calendar', 0.16666666666666666), ('cal', 0.23076923076923078), ('=', 0.7692307692307693), ('Calendar', 0.625), ('.', 1.0), ('getInstance', 0.23404255319148937), ('(', 1.0), ('""', 0.1897810218978102), ('server.3', 9.436633009342267e-05), ('""', 1.0), (',', 1.0), ('html', 0.026956141629025206), (')', 0.9545454545454546), (';', 0.9570405727923628), ('Object', 0.0023526033267799156), ('object', 0.021621621621621623), (',', 0.38095238095238093), ('String', 0.6129032258064516), ('>', 0.22870452528837623), (')', 'Paren balancing')]","protected Object convertNestedWikiHashes ( Converter ) new GregorianCalendar ( 2013 , Calendar cal = Calendar . getInstance ( "" server.3 "" , html ) ; Object object , String > )"
29,"['public', 'void']","[('setRequestThrottleStallTime', 0.0030181086519114686), ('(', 1.0), ('int', 1.0), ('delay', 0.10913268236645605), (')', 0.9637305699481865), (';', 0.9894894894894894), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('0x{} buf {}', 9.436633009342267e-05), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('/', 0.004322455154527772), ('""', 0.9895287958115183), ('+', 0.40625), ('""', 0.3485074626865672), (', Entry:', 0.0009185548071034905), ('""', 1.0), ('+', 1.0), ('variable', 0.0004975124378109452), (')', 1.0), (';', 0.6666666666666666), ('void', 0.04505290596213744), ('conflict', 0.004928219412899079), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), (';', 0.07471926288511374), ('public', 0.5869565217391305), ('long', 0.15648403626330312), ('getFsyncThresholdExceedCount', 0.026755852842809364), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('try', 0.003976230974839294), ('{', 0.9706896551724138), ('return', 0.09035087719298246), ('new', 0.16242380781642166), ('JavaSlimFactory', 0.0034802784222737818), ('(', 1.0), (')', 0.5714285714285714), (';', 0.4777126381547333), ('verify', 0.004959243632507897), ('(', 1.0), ('resultsListener', 0.015810276679841896), (')', 1.0), (';', 0.6), ('File', 0.0021648368640791713), ('semaphore', 0.00881057268722467), ('=', 1.0), ('new', 1.0), ('File', 0.03807966359070202), ('(', 0.9505962521294719), ('dirPath', 0.007168458781362007), (')', 0.8333333333333334), ('throws', 0.14285714285714285), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('String', 0.07275883838383838), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void setRequestThrottleStallTime ( int delay ) ; assertSubString ( "" 0x{} buf {} "" , "" / "" + "" , Entry: "" + variable ) ; void conflict ( ) throws Exception ; public long getFsyncThresholdExceedCount ( ) ; try { return new JavaSlimFactory ( ) ; verify ( resultsListener ) ; File semaphore = new File ( dirPath ) throws Exception { String ) )"
30,"['public', 'void']","[('stop', 0.001547748026621266), ('(', 1.0), (')', 0.9672131147540983), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('double', 0.029365392195506504), ('getConnectionDecreaseRatio', 0.3105590062111801), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('void', 0.04505290596213744), ('add', 0.004499678594386115), ('(', 1.0), ('callUnreportedFunction', 0.003076923076923077), ('(', 1.0), ('""', 0.7142857142857143), ('TearDown', 0.002406341417382278), ('""', 1.0), (')', 0.7058823529411765), (')', 0.23592152879182274), (';', 0.6920507070614618), ('void', 0.04505290596213744), ('setRequestStaleConnectionCheck', 0.01414184701092779), ('(', 1.0), ('boolean', 1.0), ('check', 0.3712784588441331), (')', 1.0), (';', 1.0), ('htmlPage', 0.0012370496366166692), ('.', 1.0), ('main', 0.008771929824561403), ('.', 0.7142857142857143), ('start', 0.14414414414414414), ('(', 1.0), (')', 0.8641509433962264), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('File', 0.01672979797979798), ('[', 0.0825242718446602), ('5', 0.05128205128205128), (']', 1.0), (';', 0.6923076923076923), ('builder', 0.011320754716981131), ('.', 0.9855072463768116), ('append', 0.056666666666666664), ('(', 0.9965635738831615), ('wrapperCodeFor', 0.0023112480739599386), ('(', 1.0), ('type', 0.6666666666666666), (')', 0.5611510791366906), (';', 0.4223300970873786), ('assertDoesntHaveRegexp', 0.0006958404205968764), ('(', 1.0), ('""', 0.84375), ('\\\\', 0.003821836368783618), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void stop ( ) ; public double getConnectionDecreaseRatio ( ) ; void add ( callUnreportedFunction ( "" TearDown "" ) ) ; void setRequestStaleConnectionCheck ( boolean check ) ; htmlPage . main . start ( ) throws Exception { File [ 5 ] ; builder . append ( wrapperCodeFor ( type ) ; assertDoesntHaveRegexp ( "" \\ ) ) )"
31,"['public', 'Object']","[('next', 0.014778325123152709), ('(', 1.0), (')', 0.5888501742160279), (';', 0.4777126381547333), ('NodeLocator', 0.000717930592679317), ('getReadonlyCopy', 0.1076923076923077), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('SuiteContentsFinder', 0.0002650820649892863), ('finder', 0.5416666666666666), ('=', 1.0), ('new', 1.0), ('TarEntry', 0.001985749328349492), ('(', 1.0), ('""', 0.3), ('Error processing', 9.436633009342267e-05), ('""', 1.0), ('+', 1.0), ('""', 0.3485074626865672), ('Cache-Control: max-age=0', 0.0003061849357011635), ('""', 0.8), (',', 1.0), (')', 'Paren balancing')]","public Object next ( ) ; NodeLocator getReadonlyCopy ( ) ; SuiteContentsFinder finder = new TarEntry ( "" Error processing "" + "" Cache-Control: max-age=0 "" , )"
32,"['public', 'Double']","[('convert', 0.7777777777777778), ('(', 1.0), ('String', 0.32342007434944237), ('k', 0.002497073741708935), (',', 0.5405405405405406), ('1', 0.06521739130434782), (',', 0.5058275058275058), ('maskGenAlgorithm', 0.001176470588235294), (')', 1.0)]","public Double convert ( String k , 1 , maskGenAlgorithm )"
33,"['public', 'void']","[('startMap', 0.001779910230614456), ('(', 1.0), ('String', 0.26), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (')', 0.44536817102137766), ('throws', 0.24010554089709762), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('final', 0.02683080808080808), ('int', 0.07678571428571429), ('exp', 0.48699763593380613), (',', 0.5522565320665083), ('final', 0.14996496145760335), ('String', 0.1994069681245367), ('pathRoot', 0.004191114836546521), (',', 0.8), ('VoidCallback', 0.4), ('cb', 1.0), (',', 1.0), ('ctx', 0.21311475409836064), (',', 0.3333333333333333), ('List', 0.23170731707317074), ('<', 0.875886524822695), ('Object', 0.1110576923076923), ('>', 0.9740680713128039), ('getAndTouch', 0.030612244897959183), ('(', 1.0), ('String', 1.0), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('}', 0.17806887715655306), ('public', 0.0813974108884554), ('void', 0.7639198218262806), ('unregisterGauge', 0.00015477480266212662), ('(', 1.0), ('""', 0.8620689655172413), ('${= ${ONE} + ${TWO} =}', 0.000141549495140134), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('HtmlTag', 0.0011155536901632465), ('insertScript', 0.03225806451612903), ('=', 1.0), ('HtmlUtil', 1.0), ('.', 1.0), ('makeBreadCrumbsWithPageType', 0.057971014492753624), ('(', 1.0), (')', 'Paren balancing')]","public void startMap ( String key , int exp ) throws Exception { final int exp , final String pathRoot , VoidCallback cb , ctx , List < Object > getAndTouch ( String key , int by ) ; } public void unregisterGauge ( "" ${= ${ONE} + ${TWO} =} "" ) ; HtmlTag insertScript = HtmlUtil . makeBreadCrumbsWithPageType ( )"
34,"['private', 'void']","[('assertEvent', 0.0015026296018031556), ('(', 1.0), ('childrenEvents', 0.03125), (',', 1.0), ('EventType', 1.0), ('type', 0.6274509803921569), (',', 0.7435897435897436), ('true', 0.006802721088435374), (',', 0.28874734607218683), ('root', 0.024), (')', 0.4845360824742268), (',', 0.3110539845758355), ('new', 0.10003631082062454), ('byte', 0.06631679389312978), ('[', 1.0), (']', 0.7630057803468208), ('table', 0.001987413050679033), ('=', 0.8333333333333334), ('new', 0.6571428571428571), ('LineBreakWidget', 0.00011680878402055835), ('(', 1.0), ('new', 1.0), ('Expectations', 0.10893470790378007), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('when', 0.005964346462258941), ('(', 1.0), ('context', 0.04341534008683068), (')', 'Paren balancing'), (')', 'Paren balancing')]","private void assertEvent ( childrenEvents , EventType type , true , root ) , new byte [ ] table = new LineBreakWidget ( new Expectations ( ) ; when ( context ) )"
35,"['public', 'void']","[('testTestReferencesToSubWiki_2', 0.0002321622039931899), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('Description', 0.0017927572606669057), ('.', 1.0), ('class', 0.14285714285714285), ('.', 0.10480613893376414), ('getDeclaredMethod', 0.2697495183044316), ('(', 1.0), ('""', 0.9808917197452229), ('Merge', 0.000283098990280268), ('""', 1.0), ('+', 0.6666666666666666), ('contents', 0.0007462686567164179), ('+', 0.6666666666666666), ('""', 1.0), ('!|DT:EchoGiving|', 0.004592774035517453), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('""', 0.3485074626865672), ('was not found/readable.', 0.001837109614206981), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('writeObject', 0.0005522543020610131), ('(', 1.0), ('ElemLastSelectedGroup', 0.022727272727272728), (',', 1.0), ('mPM', 1.0), ('.', 1.0), ('masterKey', 0.031578947368421054), (',', 1.0), ('kdfP', 0.1), (')', 1.0), ('throws', 0.5), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('<', 0.21625951141369643), ('}', 'Bracket balancing')]","public void testTestReferencesToSubWiki_2 ( ) { return Description . class . getDeclaredMethod ( "" Merge "" + contents + "" !|DT:EchoGiving| \ n "" + "" was not found/readable. "" ) ; writeObject ( ElemLastSelectedGroup , mPM . masterKey , kdfP ) throws OperationTimeoutException ; < )"
36,"['Object', 'next']","[('(', 1.0), (')', 'Paren balancing')]",Object next ( )
37,"['public', 'static']","[('Collection', 0.012448132780082987), ('<', 0.8333333333333334), ('String', 0.7289890377588307)]",public static Collection < String
38,"['public', 'void']","[('testClientRenegotiationFails', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('final', 0.007223486270958051), ('String', 0.16149068322981366), ('key', 0.38055322715842416), (',', 0.8474898881751131), ('long', 0.21889338731443994), ('def', 0.48320943347859524), (',', 0.4470338983050847), ('int', 0.9791183294663574), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('Transcoder', 0.0672740014015417), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('T', 0.0531540847983454), ('instanceFor', 0.029197080291970802), ('(', 1.0), ('type', 0.035856573705179286), (')', 0.5611510791366906), ('{', 0.33737864077669905), ('av', 0.0001954524724737768), ('.', 1.0), ('getText', 0.125), ('(', 1.0), (')', 0.96875), (';', 0.4777126381547333), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('touch', 0.09), ('(', 1.0), ('final', 0.9064748201438849), ('Operation', 0.002150537634408602), ('op', 0.6428571428571429), ('=', 0.30952380952380953), ('opFact', 0.21212121212121213), ('.', 1.0), ('mutate', 0.037037037037037035), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void testClientRenegotiationFails ( ) ; final String key , long def , int exp , Transcoder < T > T instanceFor ( type ) { av . getText ( ) ; < T > Future < Boolean > touch ( final Operation op = opFact . mutate ) )"
39,"['public', 'void']","[('testComplete', 0.010602073982355673), ('(', 1.0), ('WikiPage', 0.10622710622710622), ('currentPage', 0.017857142857142856), ('=', 0.52), ('pageCrawler', 0.041666666666666664), ('.', 1.0), ('getPage', 0.4883720930232558), ('(', 1.0), ('context', 0.1318181818181818), (',', 0.5644171779141104), ('WikiPagePath', 0.054404145077720206), ('pathRelativeToSibling', 0.2871287128712871), (')', 1.0), ('throws', 0.25), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('for', 0.008049242424242424), ('(', 1.0), ('InetSocketAddress', 0.002356637863315004), (')', 0.05263157894736842), ('ss', 1.0), ('.', 1.0), ('close', 0.6875), ('(', 0.9977220956719818), (')', 0.9647266313932981), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('option', 0.00015782828282828284), ('=', 0.3333333333333333), ('=', 0.18181818181818182), ('null', 0.518327605956472), (')', 0.5761475761475762), (';', 0.3289640591966173), ('actions', 0.0001435861185358634), ('.', 0.9230769230769231), ('add', 0.7872340425531915), ('(', 0.995049504950495), ('new', 0.11653846153846154), ('RejectActionExpectation', 0.0006872852233676976), ('(', 1.0), ('getInstructionTag', 0.3333333333333333), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Calendar', 0.00027612715103050655), ('modificationTime', 0.1111111111111111), ('=', 1.0), ('Calendar', 1.0), ('.', 1.0), ('MINUTE', 0.02127659574468085), (')', 0.6666666666666666), (')', 1.0), ('{', 0.07189602306530593), ('ParserTestHelper', 0.003909049449475536), ('.', 1.0), ('assertTranslatesTo', 0.5441696113074205), ('(', 1.0), ('pageOne', 0.060498220640569395), (',', 0.7254901960784313), ('PathParser', 0.24), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('suitePageName', 0.006692693809258227), (')', 1.0), (',', 0.5217391304347826), ('new', 0.10003631082062454), ('DelimiterBasedFrameDecoder', 0.00047709923664122136), ('(', 1.0), ('80', 1.0), (',', 0.6666666666666666), ('args', 0.2), ('.', 0.390625), ('getDaysTillVersionsExpire', 0.03571428571428571), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('Object', 0.05566680016019223), ('get', 0.6), ('(', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void testComplete ( WikiPage currentPage = pageCrawler . getPage ( context , WikiPagePath pathRelativeToSibling ) throws Exception { for ( InetSocketAddress ) ss . close ( ) throws Exception { option = = null ) ; actions . add ( new RejectActionExpectation ( getInstructionTag ( ) ; Calendar modificationTime = Calendar . MINUTE ) ) { ParserTestHelper . assertTranslatesTo ( pageOne , PathParser . parse ( suitePageName ) , new DelimiterBasedFrameDecoder ( 80 , args . getDaysTillVersionsExpire ( ) throws OperationTimeoutException ; Object get ( ) ) ) ) ) )"
40,"['public', 'void']","[('endVector', 0.0021668472372697724), ('(', 1.0), ('List', 0.5217391304347826), ('<', 0.8803418803418803), ('PageResult', 0.0014423076923076924), ('>', 1.0), ('results', 1.0), ('=', 0.6976744186046512), ('runSuite', 0.16129032258064516), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), ('{', 0.07189602306530593), ('this', 0.022672486806958107), ('.', 0.9914893617021276), ('bundle', 0.014973262032085561), ('=', 1.0), ('ResourceBundle', 0.9090909090909091), ('.', 1.0), ('getBundle', 0.9375), ('(', 1.0), ('""', 0.7692307692307693), ('check', 0.0003774653203736907), ('""', 1.0), (',', 0.625), ('properties', 0.004006994025936179), ('.', 0.726027397260274), ('getProperty', 0.2840466926070039), ('(', 1.0), ('""', 0.509090909090909), ('TestSuite', 0.000990846465980938), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('boolean', 0.02482935342066315), ('isDaemon', 0.021963824289405683), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('assertHasRegexp', 0.0033245708984072984), ('(', 1.0), ('""', 0.9006410256410257), ('SomePage', 0.004907049164857979), ('""', 1.0), (')', 0.8035714285714286), (';', 0.6090406958288362), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('emptyEnumeration', 0.0005492996429552321), ('=', 1.0), ('enumeration', 0.5), ('(', 1.0), ('asList', 0.16666666666666666), ('(', 1.0), ('STATIC', 0.0038910505836575876), (')', 0.4), (',', 0.25), ('null', 0.015432098765432098), (')', 0.5957095709570958), ('{', 0.37463002114164906), ('ParserTest', 0.0043651052185810155), ('.', 1.0), ('newLineRendered', 0.007547169811320755), ('+', 0.8), ('ParserTestHelper', 0.3333333333333333), ('.', 1.0), ('assertTranslatesTo', 0.5441696113074205), ('(', 1.0), ('""', 0.7580071174377224), (""'''Exit code: '''"", 0.00023591582523355665), ('""', 1.0), (',', 1.0), ('html', 0.026956141629025206), (')', 0.9545454545454546), ('.', 0.00477326968973747), ('forward', 0.0066419721548090435), ('(', 1.0), (')', 0.27358490566037735), (';', 0.4777126381547333), ('InputStream', 0.00037553292540148887), ('getInputStream', 0.18604651162790697), ('(', 1.0), (')', 0.6774193548387096), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('Joe', 0.000141549495140134), ('""', 1.0), (';', 0.125), ('case', 0.10515873015873016), ('SUB', 0.0034129692832764505), (':', 1.0), ('return', 1.0), ('""', 0.8895027624309392), ('KeePass Database', 0.0027100271002710027), ('""', 1.0), (';', 1.0), ('decorator', 0.0033068783068783067), ('.', 1.0), ('summary', 0.15), ('.', 0.8181818181818182), ('keySet', 0.02666666666666667), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('assertTrue', 0.013176787647175772), ('(', 1.0), ('descriptors', 0.011968085106382979), ('.', 1.0), ('contains', 1.0), ('(', 1.0), ('""', 0.4502923976608187), ('/path1/path2/path3/path4/path5/path6', 0.000283098990280268), ('""', 1.0), ('+', 0.5), ('readReq', 0.0004975124378109452), ('+', 1.0), ('""', 1.0), (':', 0.046846295162278014), ('""', 0.8411552346570397), ('+', 0.45110410094637227), ('PortAssignment', 0.015422885572139304), ('.', 1.0), ('unique', 0.9925373134328358), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('return', 0.032512626262626264), ('test', 0.00035855145213338117), ('.', 1.0), ('getSourcePage', 0.425), ('(', 1.0), (')', 0.9918032786885246), (';', 0.4777126381547333), ('MethodVisitor', 6.627051624732157e-05), ('mv', 0.3333333333333333), ('=', 0.75), ('=', 0.14285714285714285), ('10', 0.002290950744558992), (';', 0.8), ('i', 0.5555555555555556), ('+', 0.4702517162471396), ('+', 0.8926315789473684), (')', 0.6942482341069627), ('{', 0.5647743813682679), ('List', 0.011727148348426607), ('<', 0.9626168224299065), ('String', 0.20192307692307693), (',', 0.6009784436630484), ('String', 0.18341388959552277), ('.', 0.15150842945874002), ('.', 0.7353474320241692), ('keys', 0.3872791519434629), (')', 0.997270245677889), (';', 0.6894065446478093), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('WikiImportSource', 0.00018873266018684534), ('""', 1.0), (',', 0.25), ('result', 0.006629753752003497), (')', 0.6062176165803109), ('throws', 0.04743083003952569), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('getDataDirSize', 0.021714922048997772), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('mockery', 0.007444387991782456), ('.', 0.9985380116959064), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void endVector ( List < PageResult > results = runSuite ( ) ) { this . bundle = ResourceBundle . getBundle ( "" check "" , properties . getProperty ( "" TestSuite "" ) ; boolean isDaemon ( ) ) ; assertHasRegexp ( "" SomePage "" ) ; Map < String > emptyEnumeration = enumeration ( asList ( STATIC ) , null ) { ParserTest . newLineRendered + ParserTestHelper . assertTranslatesTo ( "" '''Exit code: ''' "" , html ) . forward ( ) ; InputStream getInputStream ( ) ; assertEquals ( "" Joe "" ; case SUB : return "" KeePass Database "" ; decorator . summary . keySet ( ) ) ; assertTrue ( descriptors . contains ( "" /path1/path2/path3/path4/path5/path6 "" + readReq + "" : "" + PortAssignment . unique ( ) throws Exception { return test . getSourcePage ( ) ; MethodVisitor mv = = 10 ; i + + ) { List < String , String . . keys ) ; assertSubString ( "" WikiImportSource "" , result ) throws OperationTimeoutException ; long getDataDirSize ( ) ; mockery . ) ) ) )"
41,"['public', 'void']","[('shouldNotDeserializeIfHasNoContentType', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), (';', 0.07471926288511374), ('public', 0.5869565217391305), ('void', 0.38510051241623966), ('setStats', 0.0002321622039931899), ('(', 1.0), ('long', 1.0), ('timeout', 0.388861013547416), (',', 0.9872122762148338), ('TimeUnit', 0.9625468164794008), ('unit', 0.897196261682243), (')', 1.0), (';', 0.9728682170542635), ('public', 0.04915063288343016), ('String', 0.06996452502956248), ('getElectionAddress', 0.014705882352941176)]","public void shouldNotDeserializeIfHasNoContentType ( ) throws Exception ; public void setStats ( long timeout , TimeUnit unit ) ; public String getElectionAddress"
42,"['void', 'testOutputChunk']","[('(', 1.0), ('output', 0.05970149253731343), (')', 0.7570093457943925), ('throws', 0.31230283911671924), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('getFlushDelay', 0.023106904231625834), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('slimRunner', 0.0003156565656565657), ('=', 0.5), ('new', 1.0), ('ListTree', 0.0002336175680411167), ('(', 0.8461538461538461), ('""', 1.0), ('SuiteSetUp', 0.002595074077569123), ('""', 1.0), (')', 0.8909090909090909), (';', 0.6090406958288362), ('zk', 0.0025514148755218804), ('.', 0.896551724137931), ('registerJMX', 0.013824884792626729), ('(', 1.0), (')', 0.25), ('throws', 0.13210956271023547), ('InterruptedException', 0.014036855744313273), ('{', 0.558974358974359), ('RequestPathMetricsCollector', 0.019801980198019802), ('requestPathMetricsCollector', 1.0), ('=', 1.0), ('new', 1.0), ('File', 0.03807966359070202), ('(', 0.9505962521294719), ('testDir', 0.010752688172043012), (',', 0.5), ('rootName', 0.2), (')', 0.8), (';', 0.75), ('formatter', 0.003678013651726347), ('=', 0.03582089552238806), ('new', 0.7777777777777778), ('InProcessSlimClientBuilder', 0.0008176614881439084), ('(', 1.0), ('descriptor', 1.0), (')', 0.5217391304347826), (';', 0.5), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('o', 0.000283098990280268), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","void testOutputChunk ( output ) throws OperationTimeoutException ; long getFlushDelay ( ) throws Exception { slimRunner = new ListTree ( "" SuiteSetUp "" ) ; zk . registerJMX ( ) throws InterruptedException { RequestPathMetricsCollector requestPathMetricsCollector = new File ( testDir , rootName ) ; formatter = new InProcessSlimClientBuilder ( descriptor ) ; assertEquals ( "" o ) ) )"
43,"['WikiPage', 'addChildPage']","[('(', 1.0), ('suite', 0.05303030303030303), (',', 0.9666666666666667), ('null', 0.17582417582417584), (')', 0.5957095709570958), ('{', 0.37463002114164906), ('List', 0.011727148348426607), ('<', 0.9626168224299065), ('File', 0.03028846153846154), ('>', 0.9819819819819819), ('(', 0.3333333333333333), (')', 0.7018800358102059), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('name', 0.03573936792820913), (')', 0.5829903978052127), ('.', 0.021917808219178082), ('hasAllQuorums', 0.0007663814024779665), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('else', 0.0523142401134953), ('{', 0.7423312883435583), ('path', 0.004016064257028112), ('.', 0.17647058823529413), ('isAbsolute', 0.017699115044247787), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('if', 0.01729660474055093), ('(', 1.0), ('mPM', 0.0012544428183148652), (',', 0.5), ('fos', 0.2222222222222222), (')', 1.0), (';', 1.0), ('qu', 0.0005522543020610131), ('.', 0.98), ('getPeer', 0.3020833333333333), ('(', 1.0), ('followerId', 0.06451612903225806), (')', 1.0), ('.', 1.0), ('toString', 0.0404904840975859), ('(', 1.0), (')', 0.8720666161998486), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('>', 0.12719751809720786), ('getStats', 0.17270788912579957), ('(', 1.0), ('String', 0.4444444444444444), ('errorMessage', 0.002184939523995318), ('=', 0.15151515151515152), ('""', 0.42857142857142855), ('http://localhost:', 0.002559726962457338), ('""', 1.0), ('+', 1.0), ('entry', 0.006467661691542288), ('.', 0.8846153846153846), ('getMode', 0.02824858757062147), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('TestCase', 0.00017733640716439085), ('.', 1.0), ('assertEquals', 1.0), ('(', 1.0), ('1', 0.06305704099821748), (')', 0.5583468395461912), (')', 0.2644194756554307), (';', 0.6920507070614618), ('serializers', 0.00011045086041220261), ('.', 1.0), ('get', 0.23076923076923078), ('(', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing')]","WikiPage addChildPage ( suite , null ) { List < File > ( ) ; long incr ( String name ) . hasAllQuorums ( ) ; } else { path . isAbsolute ( ) ; if ( mPM , fos ) ; qu . getPeer ( followerId ) . toString ( ) ; long incr ( String key , Transcoder < T > > getStats ( String errorMessage = "" http://localhost: "" + entry . getMode ( ) ; } TestCase . assertEquals ( 1 ) ) ; serializers . get ( ) )"
44,"['private', 'String']","[('getOutputForResultWithCount', 0.0079155672823219), ('(', 1.0), ('""', 0.3076923076923077), ('a route that can handle class', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('Assert', 0.006052707150588703), ('.', 1.0), ('assertEquals', 0.5963581183611533), ('(', 1.0), ('list', 0.0035650623885918), ('(', 0.7837837837837838), ('list', 0.20048602673147023), ('(', 0.7837837837837838), ('""', 0.528554070473876), ('MAINTAINER', 0.00018873266018684534), ('""', 1.0), (',', 1.0), ('charset', 0.00014570887367040654), (')', 1.0), (';', 1.0), ('CASOperation', 0.000463893613731251), ('cas', 0.9761904761904762), ('(', 1.0), ('String', 0.8793650793650793), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","private String getOutputForResultWithCount ( "" a route that can handle class "" ) ; Assert . assertEquals ( list ( list ( "" MAINTAINER "" , charset ) ; CASOperation cas ( String ) ) )"
45,"['public', 'synchronized']","[('String', 0.04938271604938271), ('toString', 0.5), ('(', 1.0), (')', 0.8720666161998486), ('{', 0.09111004324843826), ('final', 0.014528633787217408), ('Thread', 0.007142857142857143), ('t', 1.0), ('=', 0.5833333333333334), ('new', 0.1917808219178082), ('ParsingPage', 0.0015185141922672584), ('(', 0.8703703703703703), ('page', 0.3617021276595745), ('=', 0.05327413984461709), ('root', 0.07432432432432433), ('.', 0.9424242424242424), ('getChildPage', 0.08379888268156424), ('(', 1.0), ('""', 0.6464088397790055), ('id1', 0.0014626781164480513), ('""', 1.0), (',', 0.96875), ('Character', 0.0002914177473408131), ('.', 1.0), ('isUpperCase', 0.08771929824561403), ('(', 1.0), ('c', 0.8), ('=', 0.22900763358778625), ('new', 0.25742574257425743), ('byte', 0.016002803410816495), ('[', 1.0), (']', 0.7630057803468208), ('dogs', 0.004968532626697582), (')', 1.0), (';', 0.26666666666666666), ('output', 0.0003092624091541673), ('.', 0.8235294117647058), ('getBytes', 0.05063291139240506), ('(', 1.0), (')', 0.7661016949152543), ('=', 0.004555502162421912), ('=', 1.0), ('o', 0.01718213058419244), (')', 0.6444444444444445), (';', 0.7678300455235205), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('touch', 0.09), ('(', 1.0), ('final', 0.9064748201438849), ('AbstractInsnNode', 0.0035842293906810036), ('insn', 0.8333333333333334), (',', 0.625), ('Value', 0.5833333333333334), ('value', 0.2), (')', 0.8333333333333334), (';', 0.5893958076448829), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('allTestingComplete', 0.002089459835938709), ('(', 1.0), (')', 0.45652173913043476), ('{', 0.09111004324843826), ('Set', 0.001954524724737768), ('groups', 0.020833333333333332), ('=', 1.0), ('pageSetUpTearDownGroups', 1.0), ('.', 1.0), ('keySet', 1.0), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('responder', 0.0021317016059555103), ('.', 0.5128205128205128), ('makeResponse', 0.6511111111111111), ('(', 1.0), ('context', 0.4743083003952569), (',', 0.5644171779141104), ('httpRequest', 0.009067357512953367), (',', 0.3), ('response', 1.0), ('.', 0.7636363636363637), ('closeTrailer', 0.007361963190184049), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('variables', 0.0005412092160197928), ('.', 1.0), ('get', 0.0625), ('(', 1.0), ('""', 0.1298819255222525), ('Processed without waiting for commit', 9.436633009342267e-05), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('PageOne', 0.006267559974065269), ('""', 1.0), (')', 0.7220447284345048), (',', 0.08405815503777538), ('Matchers', 0.004720406681190995), ('.', 1.0), ('is', 0.3137254901960784), ('(', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public synchronized String toString ( ) { final Thread t = new ParsingPage ( page = root . getChildPage ( "" id1 "" , Character . isUpperCase ( c = new byte [ ] dogs ) ; output . getBytes ( ) = = o ) ; Future < Boolean > touch ( final AbstractInsnNode insn , Value value ) ; public void allTestingComplete ( ) { Set groups = pageSetUpTearDownGroups . keySet ( ) ; responder . makeResponse ( context , httpRequest , response . closeTrailer ( ) ) ; variables . get ( "" Processed without waiting for commit "" , "" PageOne "" ) , Matchers . is ( ) ) ) )"
46,"['public', 'void']","[('setConnectionDropIncrease', 0.003637207862559975), ('(', 1.0), ('double', 1.0), ('val', 0.8662613981762918), (')', 1.0), (';', 0.969309462915601), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('decisionTable_did_0/scriptTable_s_id_0', 0.0007549306407473814), ('""', 1.0), (',', 1.0), ('Pattern', 0.0026956141629025207), ('.', 1.0), ('matches', 0.5929203539823009), ('(', 1.0), (')', 0.24380165289256198), (';', 0.4777126381547333), ('willSetCurrentUserTo', 2.209017208244052e-05), ('(', 1.0), ('user', 0.5), (')', 0.625), (';', 0.6086956521739131), ('Collection', 0.002661865735934083), ('<', 0.9877551020408163), ('String', 0.7289890377588307), ('>', 0.39886867451460023), ('keys', 0.42378467453996155), (')', 0.4397163120567376), (';', 0.6894065446478093), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('long', 0.21889338731443994), (')', 'Paren balancing')]","public void setConnectionDropIncrease ( double val ) ; assertSubString ( "" decisionTable_did_0/scriptTable_s_id_0 "" , Pattern . matches ( ) ; willSetCurrentUserTo ( user ) ; Collection < String > keys ) ; long decr ( String key , long )"
47,"['public', 'void']","[('testIndexOfIgnoreCase1', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('contents', 0.015527950310559006), ('=', 0.1), ('table', 0.3076923076923077), ('.', 1.0), ('columnNumberContainingText', 0.01444043321299639), ('(', 1.0), ('""', 0.6666666666666666), ('|function;|arg0|', 0.00023591582523355665), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('""', 0.3485074626865672), ('\\""', 0.03827311696264544), ('""', 0.45695364238410596), ('+', 0.30114942528735633), ('""', 0.3485074626865672), (""' is not supported"", 0.0009185548071034905), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('m', 0.0003092624091541673), ('.', 0.9285714285714286), ('matches', 0.05454545454545454), ('(', 1.0), (')', 'Paren balancing')]","public void testIndexOfIgnoreCase1 ( ) ; < T > tc , String contents = table . columnNumberContainingText ( "" |function;|arg0| \ n "" + "" \"" "" + "" ' is not supported "" ) ; m . matches ( )"
48,"['public', 'static']","[('Properties', 0.0031120331950207467), ('asProperties', 0.4), ('(', 1.0), ('null', 0.16666666666666666), (',', 0.5461538461538461), ('Ids', 0.06264775413711583), ('.', 1.0), ('OPEN_ACL_UNSAFE', 0.9233870967741935), (',', 0.9956331877729258), ('CreateMode', 0.9336283185840708), ('.', 0.9551020408163265), ('PERSISTENT', 0.7370517928286853), (')', 0.9322916666666666), (';', 0.8491620111731844), ('SelectionKey', 0.0006295699043495548), ('getSk', 0.9473684210526315), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('WatchesPathReport', 9.940577437098235e-05), ('getWatchesByPath', 1.0), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('body', 0.010622710622710623), ('=', 0.8867924528301887), ('Parser', 0.0547945205479452)]","public static Properties asProperties ( null , Ids . OPEN_ACL_UNSAFE , CreateMode . PERSISTENT ) ; SelectionKey getSk ( ) ; WatchesPathReport getWatchesByPath ( ) ; String body = Parser"
49,"['private', 'void']","[('logTraceTouchSession', 0.0007513148009015778), ('(', 1.0), ('sessionId', 0.6666666666666666), (')', 0.7473684210526316), (';', 0.6055045871559633), ('writeKeystore', 4.418034416488104e-05), ('(', 1.0), ('badHostCert', 0.4), (',', 1.0), ('defaultKeyPair', 1.0), (',', 1.0), ('rootCertificate', 0.5), (',', 1.0), ('rootKeyPair', 1.0), ('.', 0.75), ('getPrivate', 1.0), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('counterSets', 1.104508604122026e-05), ('.', 1.0), ('values', 1.0), ('(', 0.9903846153846154), (')', 1.0), (';', 0.4777126381547333), ('factory', 0.0008946519693388412), ('.', 0.9259259259259259), ('getRepository', 0.012578616352201259), ('(', 1.0), (')', 0.5), (';', 0.4777126381547333), ('will', 0.006627051624732157), ('(', 1.0), ('returnValue', 0.972176759410802), ('(', 0.9983193277310924), ('execution', 0.004975124378109453), (')', 1.0), (')', 0.2), (';', 0.6920507070614618), ('summaries', 2.209017208244052e-05), ('.', 1.0), ('values', 1.0), ('(', 0.9903846153846154), (')', 1.0), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('[', 0.030036630036630037), (']', 0.9407114624505929), ('config', 0.000662471016893011), ('=', 1.0), ('mockery', 0.21153846153846154), ('.', 1.0), ('assertIsSatisfied', 0.2932692307692308), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('toString', 0.0404904840975859), ('(', 1.0), (')', 0.8720666161998486), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), (';', 0.07471926288511374), ('public', 0.5869565217391305), ('void', 0.38510051241623966), ('resetStatistics', 0.009518650363720786), (')', 'Paren balancing')]","private void logTraceTouchSession ( sessionId ) ; writeKeystore ( badHostCert , defaultKeyPair , rootCertificate , rootKeyPair . getPrivate ( ) ; counterSets . values ( ) ; factory . getRepository ( ) ; will ( returnValue ( execution ) ) ; summaries . values ( ) ; String [ ] config = mockery . assertIsSatisfied ( ) . toString ( ) throws Exception ; public void resetStatistics )"
50,"['public', 'void']","[('shouldSerializeCollectionWithPrefixTagAndNamespace', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('pluginsLoader', 0.00022090172082440523), ('.', 1.0), ('loadResponders', 0.1111111111111111), ('(', 1.0), ('context', 0.5454545454545454), (',', 0.5644171779141104), ('int', 0.0025906735751295338), ('value', 0.0016299918500407497), (')', 0.8), ('{', 0.17632552404438964), ('addedPaths', 0.0001954524724737768), ('.', 1.0), ('contains', 0.5714285714285714), ('(', 1.0), ('""', 0.4502923976608187), ('<div>less < more</div>', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('int', 0.01989219996023769), ('getRequestThrottleLimit', 0.02773650321941555), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('double', 0.029365392195506504), ('getConnectionDropIncrease', 0.2795031055900621), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('translateToHtml', 0.0005109209349853111), ('(', 1.0), ('WikiPage', 0.3684210526315789), ('test', 0.11011904761904762), ('=', 0.08641975308641975), ('""', 0.08333333333333333), ('!define COMMAND_PATTERN {java -specialParam -cp %p %m}', 0.005119453924914676), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('ignores', 0.0009950248756218905), ('+', 1.0), ('=', 0.5), ('.1', 0.004048582995951417), ('*', 1.0), ('(', 1.0), ('hc', 0.25), ('+', 1.0), ('buf', 1.0), ('[', 1.0), ('0', 0.1320754716981132), (']', 1.0), (',', 0.4085820895522388), ('port', 0.018518518518518517), (')', 0.5733333333333334), (';', 0.6065573770491803), ('public', 0.04915063288343016), ('abstract', 0.032124556562869534), ('int', 0.03614457831325301), ('syncTimeout', 0.1794871794871795), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void shouldSerializeCollectionWithPrefixTagAndNamespace ( ) ; pluginsLoader . loadResponders ( context , int value ) { addedPaths . contains ( "" <div>less < more</div> "" ) ; int getRequestThrottleLimit ( ) ; public double getConnectionDropIncrease ( ) . translateToHtml ( WikiPage test = "" !define COMMAND_PATTERN {java -specialParam -cp %p %m} \ n "" + ignores + = .1 * ( hc + buf [ 0 ] , port ) ; public abstract int syncTimeout ) )"
51,"['public', 'void']","[('checkSession', 0.0010834236186348862), ('(', 1.0), ('long', 0.975), ('timeout', 0.388861013547416), (',', 0.9872122762148338), ('TimeUnit', 0.9625468164794008), ('unit', 0.897196261682243), (')', 1.0), (';', 0.9728682170542635), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('0', 0.07330659536541889), (')', 0.5217086834733894), ('{', 0.1866977829638273), ('log', 0.0013681673073164375), ('.', 0.42424242424242425), ('publish', 0.20454545454545456), ('(', 1.0), (')', 0.7333333333333333), (';', 0.4777126381547333), ('assertNotSubString', 0.0011155536901632465), ('(', 1.0), ('""', 0.8317757009345794), ('V', 0.0009436633009342266), ('""', 1.0), (',', 0.9), ('""', 0.38678420515809414), ('decisionTable_id', 0.019234925437648584), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('whereUsed', 0.0003241841365895829), ('""', 1.0), (',', 1.0), ('new', 0.049249599300597406), ('ReplyHeader', 0.0033396946564885495), ('(', 1.0), (')', 0.6875), (';', 0.4777126381547333), ('PageCrawler', 0.0012591398086991097), ('getPageCrawler', 0.6), ('(', 1.0), (')', 0.9908256880733946), (';', 0.4777126381547333), ('return', 0.02244361483575957), ('buildFitClient', 0.00288421920065925), ('(', 1.0), ('runningStrategy', 0.875), (')', 1.0), (';', 0.9090909090909091), ('response', 0.003678013651726347), ('.', 0.7337278106508875), ('getContent', 0.294478527607362), ('(', 1.0), (')', 0.9714795008912656), ('{', 0.09111004324843826), ('parser', 6.515082415792559e-05), ('.', 1.0), ('atEnd', 0.06666666666666667), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('}', 0.17806887715655306), ('}', 0.2383401312289413), ('return', 0.12196969696969696)]","public void checkSession ( long timeout , TimeUnit unit ) ; assertEquals ( 0 ) { log . publish ( ) ; assertNotSubString ( "" V "" , "" decisionTable_id "" , "" whereUsed "" , new ReplyHeader ( ) ; PageCrawler getPageCrawler ( ) ; return buildFitClient ( runningStrategy ) ; response . getContent ( ) { parser . atEnd ( ) ) ; } } return"
52,"['public', 'void']","[('setMaxBatchSize', 0.004798018882525925), ('(', 1.0), ('int', 1.0), ('i', 0.1341183228029868), ('=', 0.9117647058823529), ('1', 0.07344632768361582), (')', 0.2057142857142857), (';', 0.450187265917603), ('public', 0.04915063288343016), ('abstract', 0.032124556562869534), ('void', 0.40562248995983935)]",public void setMaxBatchSize ( int i = 1 ) ; public abstract void
53,"['private', 'HtmlPage']","[('makeHtml', 0.9090909090909091), ('(', 1.0), ('fullPathName', 0.20512820512820512), (')', 0.5666666666666667), (';', 0.7333333333333333), ('assertTrue', 0.013176787647175772), ('(', 1.0), ('request', 0.011303191489361703), (')', 0.5072639225181598), (';', 0.5648218347232752), ('CASValue', 0.0018887097130486647), ('<', 1.0), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('>', 0.32798833819241985), ('asyncGetBulk', 0.4069448674992385), ('(', 0.999251497005988), ('String', 0.19746646795827125), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('final', 0.056950067476383266), ('int', 0.3832468495181616), ('dims', 0.008274231678486997), (')', 1.0), (';', 0.38461538461538464), ('Set', 0.0029711281450882504), ('<', 0.9829931972789115), ('String', 0.5802997858672377), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('>', 0.6264626462646264), ('>', 0.12719751809720786), ('asyncGetAndTouch', 0.0487359122753579), ('(', 1.0), ('final', 0.9937888198757764), ('String', 0.4845878136200717), ('key', 0.38055322715842416), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('to', 0.007986960065199673), (')', 0.9074074074074074), (';', 0.9746192893401016), ('this', 0.009366232962954782), ('.', 1.0), ('run', 0.0005347593582887701), ('(', 0.9607843137254902), (')', 0.8265682656826568), (';', 0.4777126381547333), ('return', 0.02244361483575957), ('null', 0.02018953440461475), (';', 1.0), ('HttpSessionMock', 0.004418262150220913), ('session', 1.0), ('=', 1.0), ('cfg', 0.07407407407407407), ('.', 1.0), ('buildSessionFactory', 0.12121212121212122), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('def', 0.48320943347859524), (',', 0.4470338983050847), ('int', 0.9791183294663574), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('by', 0.2550628044091259), (',', 0.5537688442211055), ('long', 0.9741735537190083), ('by', 0.2550628044091259), (')', 0.4462311557788945), (';', 0.7569158328428487), ('rootContext', 0.000596434646225894), ('.', 1.0), ('registerGauge', 0.5555555555555556), ('(', 1.0), ('""', 0.8648648648648649), ('!img-r name', 9.436633009342267e-05), ('""', 1.0), (',', 1.0), ('pageTwoChild', 7.285443683520327e-05), ('.', 1.0), ('getName', 0.5), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('RequestProcessor', 0.0010424131865268095), ('finalProcessor', 1.0), ('=', 1.0), ('new', 1.0), ('File', 0.03807966359070202), ('(', 0.9505962521294719), ('filename', 0.026881720430107527), (')', 0.7083333333333334), (')', 0.17857142857142858), (';', 0.6920507070614618), ('builder', 0.0011265987762044667), ('.', 0.9855072463768116), ('is', 0.06), ('(', 1.0), ('""', 0.07964601769911504), ('is_leader', 0.000141549495140134), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('verbose', 0.0004322455154527772), ('""', 1.0), (',', 0.6), ('new', 0.049249599300597406), ('Runnable', 0.003816793893129771), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('void', 0.04505290596213744), ('registerSlimTables', 0.0010713520462824085), ('(', 1.0), ('slimTableFactory', 0.06666666666666667), (')', 0.625), ('throws', 0.6363636363636364), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('arg', 0.006008583690987125), (',', 0.5125), ('StatsOperation', 0.8837209302325582), ('.', 1.0), ('Callback', 1.0), ('(', 0.07857142857142857), (')', 1.0), (';', 0.4777126381547333), ('op1', 3.3135258123660786e-05), ('.', 1.0), ('setPath', 0.3333333333333333), ('(', 1.0), ('""', 0.375), ('1', 0.0016514107766348967), ('""', 0.9333333333333333), (';', 0.03571428571428571), ('}', 0.1302910052910053), ('public', 0.0813974108884554), ('<', 0.008908685968819599), ('T', 1.0), ('>', 0.9951795613400819), ('Map', 0.06587383660806619), ('<', 1.0), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('referentPath', 0.0005492996429552321), ('=', 1.0), ('renamedPathToReferent', 1.0), ('.', 1.0), ('getNames', 1.0), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('op', 0.0003313525812366078), ('.', 1.0), ('getState', 0.06), ('(', 1.0), (')', 0.9436619718309859), (')', 0.1723209995194618), ('{', 0.07189602306530593), ('assertTrue', 0.002736334614632875), ('(', 1.0), ('""', 0.20545212765957446), ('defaultResult', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('one', 0.005169100267291082), ('(', 1.0), ('result', 0.02894356005788712), (',', 0.3363914373088685), ('key', 0.045454545454545456), (',', 0.8113207547169812), ('5', 0.0004048582995951417), (')', 0.26495726495726496), (';', 0.5128205128205128), ('if', 0.01729660474055093), ('(', 1.0), ('listener', 0.004390549864102028), (')', 0.5454545454545454), (';', 0.6493506493506493), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('keys', 0.42378467453996155), (')', 0.4397163120567376), ('throws', 0.3000554631170272), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('File', 0.01672979797979798), ('pageDirectory', 0.0825242718446602), ('=', 0.8518518518518519), ('addPageDirectory', 1.0), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","private HtmlPage makeHtml ( fullPathName ) ; assertTrue ( request ) ; CASValue < Object > > asyncGetBulk ( String key , final int dims ) ; Set < String , T > > asyncGetAndTouch ( final String key , int to ) ; this . run ( ) ; return null ; HttpSessionMock session = cfg . buildSessionFactory ( ) ; long decr ( String key , int by , long def , int by , long by , long by ) ; rootContext . registerGauge ( "" !img-r name "" , pageTwoChild . getName ( ) { RequestProcessor finalProcessor = new File ( filename ) ) ; builder . is ( "" is_leader "" , "" verbose "" , new Runnable ( ) ; void registerSlimTables ( slimTableFactory ) throws OperationTimeoutException ; long decr ( String arg , StatsOperation . Callback ( ) ; op1 . setPath ( "" 1 "" ; } public < T > Map < String > referentPath = renamedPathToReferent . getNames ( ) ) ; op . getState ( ) ) { assertTrue ( "" defaultResult "" ) ; one ( result , key , 5 ) ; if ( listener ) ; Map < String > keys ) throws Exception { File pageDirectory = addPageDirectory ) )"
54,"['public', 'void']","[('visitTryCatchBlock', 0.0003869370066553165), ('(', 1.0), ('final', 0.7142857142857143), ('ByteString', 0.004301075268817204), ('topic', 0.6), (',', 0.84), ('Long', 0.0547945205479452), ('.', 0.6610169491525424), ('class', 0.2542372881355932), (')', 0.5668416801292407), (';', 0.683291770573566), ('DisconnectableZooKeeper', 2.209017208244052e-05), ('client', 0.6666666666666666), ('=', 1.0), ('new', 0.6515151515151515), ('StatsTrack', 0.0009344702721644668), ('(', 1.0), (')', 0.875), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985)]","public void visitTryCatchBlock ( final ByteString topic , Long . class ) ; DisconnectableZooKeeper client = new StatsTrack ( ) ; assertEquals"
55,"['public', 'void']","[('receivedStatus', 0.004643244079863798), ('(', 1.0), ('String', 0.22988505747126436), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('name', 0.03573936792820913), (',', 0.32647462277091904), (')', 'Paren balancing')]","public void receivedStatus ( String key , Transcoder < T > tc ) ; long decr ( String name , )"
56,"['protected', 'String']","[('createEvaluationMessage', 0.2608695652173913), ('(', 1.0), ('String', 0.7878787878787878), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('byte', 0.060266292922214436), ('[', 0.9400630914826499), (']', 0.7630057803468208), ('deserialized', 0.008280887711162636), ('=', 1.0), ('deserializer', 0.9615384615384616), ('.', 1.0), ('deserialize', 0.9655172413793104), ('(', 1.0), ('stream', 0.3333333333333333), (')', 'Paren balancing'), (')', 'Paren balancing')]","protected String createEvaluationMessage ( String key , int exp , byte [ ] deserialized = deserializer . deserialize ( stream ) )"
57,"['public', 'void']","[('testDeadWatcherMetrics', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('qb', 0.00022090172082440523), ('.', 1.0), ('s1', 0.13414634146341464), ('.', 0.7272727272727273), ('getTxnFactory', 0.5454545454545454), ('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('""', 0.23656499636891795), ('foo', 0.0011886751674951373), ('""', 1.0), (',', 0.5769230769230769), ('""', 0.38678420515809414), ('!define x {y}', 0.0008644910309055544), ('""', 0.6), (',', 0.7777777777777778), ('0', 0.007868279178201952), (',', 0.5541706615532119), ('0', 0.285363859362224), (',', 0.5541706615532119), ('0', 0.285363859362224), (',', 0.5541706615532119), ('0', 0.285363859362224), (',', 0.5541706615532119), ('1', 0.0580539656582175)]","public void testDeadWatcherMetrics ( ) ; qb . s1 . getTxnFactory ( ) , "" foo "" , "" !define x {y} "" , 0 , 0 , 0 , 0 , 1"
58,"['public', 'Collection']","[('<', 0.9523809523809523), ('String', 0.7289890377588307), ('>', 0.39886867451460023), ('>', 0.17165613842351002), ('asyncGetBulk', 0.4069448674992385), ('(', 0.999251497005988), ('String', 0.19746646795827125), ('contextPath', 7.803355442840422e-05), (',', 1.0), ('session', 0.75), (',', 0.42857142857142855), ('dataTree', 0.07407407407407407), (',', 0.6666666666666666), ('count', 0.3076923076923077), ('.', 0.08333333333333333), ('get', 0.08333333333333333), ('(', 1.0), ('String', 0.22434150772025432), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('String', 0.006612685560053981), ('filename', 0.006211180124223602), (',', 0.5211267605633803), ('context', 0.14925373134328357), ('.', 0.5559006211180124), ('htmlPageFactory', 0.08292079207920793), ('.', 0.8656716417910447), ('newPage', 0.8620689655172413), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('Future', 0.03465947999734918), ('<', 1.0), ('CASValue', 0.10792580101180438), ('<', 0.993127147766323), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('gets', 0.07762390670553936), ('(', 1.0), ('String', 0.977924944812362), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('uid', 0.006519967400162999), (';', 0.09090909090909091), ('private', 0.5), ('ExpirationPolicy', 0.16129032258064516), ('<', 1.0), ('K', 0.9696969696969697), (',', 1.0), ('V', 0.8456375838926175), ('>', 0.7551020408163265), ('>', 0.22826086956521738), ('asyncGetBulk', 0.4069448674992385), (')', 'Paren balancing'), (')', 'Paren balancing')]","public Collection < String > > asyncGetBulk ( String contextPath , session , dataTree , count . get ( String key , String filename , context . htmlPageFactory . newPage ( ) ; < T > tc ) ; Future < CASValue < Object > gets ( String key , int uid ; private ExpirationPolicy < K , V > > asyncGetBulk ) )"
59,"['void', 'movedPermanentlyTo']","[('(', 1.0), ('String', 0.43820224719101125), ('output', 0.012095200936402654), (')', 0.8333333333333334), ('{', 0.22082018927444794), ('return', 0.14763176754185942), ('scope', 0.0010756543564001434), (';', 1.0), ('}', 1.0), ('public', 0.0813974108884554), ('void', 0.7639198218262806), ('resetFsyncThresholdExceedCount', 0.006423154310478254), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('this', 0.009366232962954782), ('.', 1.0), ('getString', 0.0016042780748663102)]",void movedPermanentlyTo ( String output ) { return scope ; } public void resetFsyncThresholdExceedCount ( ) ; this . getString
60,"['protected', 'void']","[('beforeOperation', 0.0016260162601626016), ('(', 1.0), ('page', 0.5), (')', 0.44728079911209767), (';', 0.3467202141900937), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819)]",protected void beforeOperation ( page ) ; < T >
61,"['public', 'String']","[('error', 0.0011312217194570137), ('=', 0.058823529411764705), ('method', 0.05555555555555555), ('.', 0.425), ('getMethod', 0.5051546391752577), ('(', 1.0), (')', 0.5968468468468469), (';', 0.4777126381547333), ('sb', 0.0016125825620181581), ('.', 0.9867549668874173), ('length', 0.019553072625698324), (';', 0.2125), ('i', 0.7029702970297029), ('+', 0.4702517162471396), ('+', 0.8926315789473684), (';', 0.14833501513622604), ('statementExecutor', 0.036231884057971016), ('.', 1.0), ('getInstance', 0.140625), ('(', 1.0), ('mAct', 0.029197080291970802), (',', 1.0), ('App', 0.1111111111111111), ('.', 1.0), ('getDB', 0.6666666666666666), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('WikiPage', 0.00888024917714109), ('includingPage', 0.003264417845484222), (',', 0.25), ('String', 0.3333333333333333), (')', 'Paren balancing')]","public String error = method . getMethod ( ) ; sb . length ; i + + ; statementExecutor . getInstance ( mAct , App . getDB ( ) ; WikiPage includingPage , String )"
62,"['public', 'void']","[('run', 0.014935768456895218), ('(', 1.0), (')', 0.8265682656826568), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('html', 0.03223443223443224), ('=', 0.8), ('page', 0.04807692307692308), ('.', 0.9814814814814815), ('getData', 0.2673913043478261), ('(', 0.9850374064837906), (')', 0.9167616875712656), (',', 0.04123017779913503), ('list', 0.0332244008714597), ('(', 0.9139784946236559), ('""', 0.528554070473876), ('readonlymode.enabled', 0.000141549495140134), ('""', 1.0), (',', 0.6666666666666666), ('""', 0.38678420515809414), ('SymbolList[Alias[SymbolList[Text], SymbolList[Text]]]', 0.0001080613788631943), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('htmlPage', 0.0012370496366166692), ('.', 1.0), ('put', 0.5526315789473685), ('(', 1.0), ('inputs', 0.005371530886302597), ('.', 0.8), ('isEmpty', 0.03125), ('(', 1.0), ('includeScopes', 0.029411764705882353), (')', 1.0), (')', 1.0), (';', 0.6920507070614618), ('assertNull', 0.0009830126576686033), ('(', 1.0), ('fixture', 0.008403361344537815), ('.', 0.37037037037037035), ('counts', 0.16666666666666666), ('.', 0.22580645161290322), ('get', 0.11607142857142858), ('(', 1.0), ('name', 0.006357856494096276), (',', 0.2849604221635884), ('final', 0.19248826291079812), ('int', 0.3832468495181616), ('exp', 0.48699763593380613), (')', 0.44536817102137766), ('throws', 0.24010554089709762), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('abstract', 0.02702702702702703), ('void', 0.6059602649006622), ('touch', 0.034482758620689655), ('(', 1.0), ('final', 0.9064748201438849), ('LearnerHandler', 0.01935483870967742), ('learnerHandler', 1.0), (',', 0.4936708860759494), ('Socket', 0.5384615384615384), ('socket', 0.9285714285714286), (')', 0.6326530612244898), (')', 0.028985507246376812), (';', 0.6920507070614618), ('for', 0.006207338355165787), ('(', 1.0), ('int', 0.4218381775333857), ('rc', 0.06059735784032166), (',', 0.9457013574660633), ('String', 0.6094420600858369), ('version', 0.0022182786157941437), ('=', 0.2), ('matcher', 0.09375), ('.', 1.0), ('group', 0.5454545454545454), ('(', 0.9256198347107438), ('1', 0.4107142857142857), (',', 0.4359805510534846), ('-', 0.012941176470588235), ('1', 0.8714285714285714), (')', 0.588469184890656), ('{', 0.051685393258426963), ('return', 0.14763176754185942), ('new', 0.16242380781642166), ('ExecutionLog', 0.004640371229698376), ('(', 1.0), ('page', 0.3888888888888889), ('.', 0.14761376248612654), ('html', 0.05652173913043478), ('(', 1.0), (')', 0.8951612903225806), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), (';', 0.07471926288511374), ('public', 0.5869565217391305), ('double', 0.029365392195506504), ('getConnectionDecreaseRatio', 0.3105590062111801), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('for', 0.008049242424242424), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void run ( ) ; String html = page . getData ( ) , list ( "" readonlymode.enabled "" , "" SymbolList[Alias[SymbolList[Text], SymbolList[Text]]] "" ) ; htmlPage . put ( inputs . isEmpty ( includeScopes ) ) ; assertNull ( fixture . counts . get ( name , final int exp ) throws IOException ; abstract void touch ( final LearnerHandler learnerHandler , Socket socket ) ) ; for ( int rc , String version = matcher . group ( 1 , - 1 ) { return new ExecutionLog ( page . html ( ) throws Exception ; public double getConnectionDecreaseRatio ( ) throws Exception { for ) ) ) )"
63,"['boolean', 'resolve']",[],boolean resolve
64,"['public', 'void']","[('start', 0.004952793685188052), ('(', 1.0), (')', 0.8641509433962264), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('CASResponse', 0.026031237484981977), ('cas', 0.9925925925925926)]",public void start ( ) throws OperationTimeoutException ; CASResponse cas
65,"['protected', 'void']","[('initConfig', 0.0016260162601626016), ('(', 1.0), ('String', 1.0), ('basePackage', 7.803355442840422e-05), (':', 1.0), ('basePackages', 1.0), (')', 1.0), ('{', 0.2857142857142857), ('LOG', 0.017134666753534433), ('.', 1.0), ('info', 0.5220994475138122), ('(', 0.9577777777777777), ('""', 0.9205298013245033), ('build/classes/test/Resources/FitNesseRoot/files/BestFile', 4.7183165046711336e-05), ('""', 1.0), (',', 1.0), ('0', 0.007868279178201952), (',', 0.5541706615532119), ('MENU_COPY_USER', 0.0024529844644317253), (',', 1.0), ('0', 1.0), ('L', 0.04985618408437201), (',', 0.7213114754098361), ('values', 0.6590909090909091), ('.', 0.9380530973451328), ('get', 0.9007633587786259), ('(', 1.0), ('targetType', 0.00045413260672116256), (')', 1.0), (';', 1.0), ('String', 0.026430890896640084), ('status', 0.0007326007326007326), ('=', 0.5), ('HtmlUtil', 0.045454545454545456), ('.', 1.0), ('makeInputTag', 0.19202898550724637), ('(', 1.0), ('""', 0.9298245614035088), ('\\', 0.009483816174388978), ('n', 0.5279503105590062), ('""', 0.959409594095941), (',', 0.14061838204150784), ('(', 0.0034241585312545534), ('byte', 0.11969111969111969), ('[', 0.529126213592233), (']', 0.7630057803468208), ('=', 0.03146737330241802), ('matcher', 0.0026666666666666666), ('.', 1.0), ('group', 0.5454545454545454), ('(', 0.9256198347107438), ('2', 0.1875), (')', 0.5414847161572053), ('.', 0.11194029850746269), ('getTime', 0.0037041767786435047), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (')', 0.1159214681250286), (')', 0.1159214681250286), (';', 0.6920507070614618), ('InputStream', 0.00037553292540148887), ('bis', 0.023255813953488372), ('=', 1.0), ('new', 1.0), ('UserInfo', 0.0002336175680411167), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('return', 0.032512626262626264), ('""', 0.05019720329867336), ('THROW', 0.0027100271002710027), ('""', 1.0), (';', 1.0), ('final', 0.041666666666666664), ('Operation', 0.002484472049689441), ('o', 0.21428571428571427), ('=', 0.029411764705882353), ('=', 0.6578947368421053), ('other', 0.022336769759450172), ('.', 0.9629629629629629), ('children', 0.011494252873563218), (';', 0.2), ('}', 0.6666666666666666), ('return', 0.1317609505231424), ('true', 0.05512679162072767), (';', 1.0), ('mockedComparer', 0.006818181818181818), ('.', 0.75), ('secondTableResults', 0.20689655172413793), ('.', 0.8214285714285714), ('add', 0.75), ('(', 0.995049504950495), ('readReq', 0.007692307692307693), (')', 1.0), (';', 0.9090909090909091), ('}', 0.17806887715655306), ('touchSession', 0.00017733640716439085), ('(', 1.0), ('long', 0.8222222222222222), ('delay', 0.14701455092824886), (')', 0.9898648648648649), (';', 0.9894894894894894), ('deserializers', 0.0001988115487419647), ('.', 0.8888888888888888), ('register', 0.21052631578947367), ('(', 1.0), ('resource', 0.0518018018018018), (')', 0.7811320754716982), (',', 0.03115264797507788), ('getClassPath', 0.0016339869281045752), ('(', 1.0), ('specifiedPage', 0.3717948717948718), (')', 0.3625)]","protected void initConfig ( String basePackage : basePackages ) { LOG . info ( "" build/classes/test/Resources/FitNesseRoot/files/BestFile "" , 0 , MENU_COPY_USER , 0 L , values . get ( targetType ) ; String status = HtmlUtil . makeInputTag ( "" \ n "" , ( byte [ ] = matcher . group ( 2 ) . getTime ( ) ) ) ) ; InputStream bis = new UserInfo ( ) throws Exception { return "" THROW "" ; final Operation o = = other . children ; } return true ; mockedComparer . secondTableResults . add ( readReq ) ; } touchSession ( long delay ) ; deserializers . register ( resource ) , getClassPath ( specifiedPage )"
66,"['public', 'void']","[('setConnectionDecreaseRatio', 0.004101532270546355), ('(', 1.0), ('double', 1.0), (')', 0.02735562310030395), ('0.00001', 0.1111111111111111)]",public void setConnectionDecreaseRatio ( double ) 0.00001
67,"['private', 'void']","[('insertSetUpForThisGroup', 0.002253944402704733), ('(', 1.0), ('String', 0.75), ('name', 0.03573936792820913), (')', 0.5829903978052127), (';', 0.5493150684931507), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('flush', 0.2646428571428571), ('(', 1.0), ('int', 0.4567307692307692), ('row', 0.07840321654221712), (',', 0.6459854014598541), ('new', 0.022277227722772276), ('byte', 0.06631679389312978), ('[', 1.0), (']', 0.7630057803468208), ('getQuorumVerifierBytes', 0.006624710168930109), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('double', 0.029365392195506504), ('getConnectionDropIncrease', 0.2795031055900621), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618)]","private void insertSetUpForThisGroup ( String name ) ; Future < Boolean > flush ( int row , new byte [ ] getQuorumVerifierBytes ( ) ; public double getConnectionDropIncrease ( ) ) ;"
68,"['public', 'void']","[('handleNullSymbols', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('return', 0.02244361483575957), ('runner', 0.007004532344458179), (';', 1.0)]",public void handleNullSymbols ( ) ; return runner ;
69,"['WikiPage', 'getSiblingPage']","[('(', 1.0), ('WikiPagePath', 0.2682926829268293), ('path', 0.2777777777777778), ('=', 0.5046728971962616), ('path', 0.02631578947368421), (';', 0.34375), ('PathUtils', 0.14285714285714285), ('.', 1.0), ('validatePath', 0.96), ('(', 1.0), ('pathRoot', 0.15384615384615385), (')', 1.0), (';', 0.8888888888888888), ('static', 0.00011045086041220261), ('MarkUpSystem', 0.6363636363636364), ('make', 1.0), ('(', 1.0), ('new', 0.2898550724637681), ('String', 0.07216494845360824), ('[', 0.7513089005235603), (']', 0.9407114624505929), ('data', 0.07817157999337529), ('=', 0.15254237288135594), ('page', 0.3076923076923077), ('.', 0.9814814814814815), ('put', 0.0641304347826087), (')', 'Paren balancing'), (')', 'Paren balancing')]",WikiPage getSiblingPage ( WikiPagePath path = path ; PathUtils . validatePath ( pathRoot ) ; static MarkUpSystem make ( new String [ ] data = page . put ) )
70,"['public', 'void']","[('testRunnerCSharp', 0.00030954960532425323), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('request', 0.007267666615122932), ('=', 0.13363363363363365), ('setupRequest', 0.0221606648199446), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('newPage', 0.00025546046749265553), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('scan', 0.0005109209349853111), ('(', 1.0), ('""', 0.16666666666666666), ('/any/url', 0.0006133811456072474), ('""', 1.0), (')', 0.8461538461538461), (';', 0.6090406958288362), ('return', 0.02244361483575957), ('getFunc', 0.0008240626287597857), ('+', 1.0), ('=', 0.6666666666666666), ('includeUncleLibraries', 0.008097165991902834), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('x509Util', 8.836068832976209e-05), ('.', 0.7777777777777778), ('getSslOcspEnabledProperty', 0.06930693069306931), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('VersionInfo', 0.011891891891891892), ('commit', 0.45714285714285713), ('(', 1.0), ('data', 0.5738498789346247), (')', 0.6501901140684411), (';', 0.6805970149253732), ('group', 0.00038657801144270914), ('.', 1.0), ('add', 0.6444444444444445), ('(', 0.995049504950495), ('new', 0.11653846153846154), ('Descriptor', 0.0010309278350515464), ('(', 1.0), ('pageWithSlimPortDefined', 0.125), (',', 0.2222222222222222), ('false', 0.5), (',', 0.41156462585034015), ('1', 0.029508196721311476), (')', 0.49184149184149184), (')', 0.2644194756554307), (';', 0.6920507070614618), ('List', 0.007079900152422188), ('<', 0.9456681350954479), ('?', 0.06153846153846154), ('>', 0.5993756503642039), ('clazz', 0.013062409288824383), ('=', 0.35294117647058826), ('StringBuffer', 0.16666666666666666), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('authenticator', 0.002570694087403599), ('.', 0.5), ('negotiateCredentials', 0.058823529411764705)]","public void testRunnerCSharp ( ) ; request = setupRequest ( ) . newPage ( ) . scan ( "" /any/url "" ) ; return getFunc + = includeUncleLibraries ( ) ; x509Util . getSslOcspEnabledProperty ( ) throws IOException ; VersionInfo commit ( data ) ; group . add ( new Descriptor ( pageWithSlimPortDefined , false , 1 ) ) ; List < ? > clazz = StringBuffer . class , authenticator . negotiateCredentials"
71,"['private', 'String']","[('group', 0.010554089709762533), (';', 0.08695652173913043), ('if', 0.047619047619047616), ('(', 1.0), ('isRegracing', 0.0002090738030524775), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('assertHasRegexp', 0.0033245708984072984), ('(', 1.0), ('""', 0.9006410256410257), ('SomePropertyName', 9.436633009342267e-05), ('""', 1.0), (',', 1.0), ('content', 0.02564476176599155), (')', 0.9495192307692307), ('-', 0.0017391304347826088), ('1', 0.4232558139534884), (';', 0.1848906560636183), ('int', 0.028225806451612902), ('getReconnectCount', 0.023278850916295196), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('long', 0.21889338731443994), ('casId', 0.143809279671879), (',', 0.998220640569395), ('int', 0.2482394366197183), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('super', 0.0008283814530915196)]","private String group ; if ( isRegracing ( ) ) ; assertHasRegexp ( "" SomePropertyName "" , content ) - 1 ; int getReconnectCount ( ) throws OperationTimeoutException ; long incr ( String key , long casId , int by ) ; super"
72,"['public', 'void']","[('sendAdd', 7.738740133106331e-05), ('(', 1.0), ('LedgerHandle', 1.0), ('lh', 0.8333333333333334), (',', 0.975609756097561), ('entryId', 0.061224489795918366), (',', 0.625), ('ctx', 0.125), (')', 0.625), ('{', 0.33497536945812806), ('return', 0.14763176754185942), ('it', 0.0007171029042667623), ('.', 1.0), ('next', 0.6833333333333333), ('(', 0.9180327868852459), (')', 0.5888501742160279), (',', 0.04123017779913503), ('""', 0.23656499636891795), ('pass(8>5.9)', 0.0001080613788631943), ('""', 1.0), ('}', 'Bracket balancing')]","public void sendAdd ( LedgerHandle lh , entryId , ctx ) { return it . next ( ) , "" pass(8>5.9) "" )"
73,"['public', 'void']","[('shouldIgnoreAResourceWithTheWrongWebMethod', 0.0022442346386008357), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('String', 0.03909049449475536), ('statusLine', 0.0016207455429497568), ('=', 1.0), ('input', 0.6666666666666666), ('.', 0.8378378378378378), ('whitespaceLength', 0.09090909090909091), ('(', 1.0), ('offset', 0.5833333333333334), ('<', 0.08928571428571429), ('candidate', 0.4), (')', 'Paren balancing'), ('}', 'Bracket balancing')]",public void shouldIgnoreAResourceWithTheWrongWebMethod ( ) { String statusLine = input . whitespaceLength ( offset < candidate ) )
74,"['public', 'void']","[('setMinSessionTimeout', 0.005339730691843368), ('(', 1.0), ('int', 1.0), ('i', 0.1341183228029868), ('=', 0.9117647058823529), ('0', 0.7551789077212806), (')', 0.2639138240574506), ('.', 0.10151691948658109), ('getContent', 0.024651935113041257), ('(', 1.0), (')', 0.9714795008912656), ('{', 0.09111004324843826), ('Assert', 0.003127239559580429), ('.', 1.0), ('assertEquals', 0.5963581183611533), ('(', 1.0), ('-', 0.004010695187165776), ('1', 0.7049180327868853), (')', 0.588469184890656), ('}', 'Bracket balancing')]",public void setMinSessionTimeout ( int i = 0 ) . getContent ( ) { Assert . assertEquals ( - 1 ) )
75,"['public', 'void']","[('setup', 0.018650363720786257), ('(', 1.0), (')', 0.9959349593495935), (';', 0.4777126381547333), ('runner', 0.0010051028297510438), ('.', 0.9292929292929293), ('getExitCode', 0.03684210526315789), ('(', 1.0), (')', 0.9090909090909091), ('throws', 0.13210956271023547), ('PluginException', 0.010365678088108263), (';', 0.5555555555555556), ('void', 0.425), ('resetLatency', 0.015641739875723162), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertFalse', 0.005390001988115487), ('(', 1.0), ('testFile', 0.0017605633802816902), (')', 0.5714285714285714), (';', 0.5), ('if', 0.01729660474055093), ('(', 1.0), ('DigestCalculator', 0.0002090738030524775), ('.', 1.0), ('setDigestEnabled', 0.5), ('(', 1.0), ('true', 0.4), (')', 0.76875), (';', 0.7053824362606232), ('log', 0.00027612715103050655), ('.', 0.6153846153846154), ('getExitCode', 0.022727272727272728), ('(', 1.0), ('ResponseParser', 0.09090909090909091), ('response', 1.0), (')', 0.4), (';', 0.6324786324786325), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('8174', 0.0002228163992869875), (',', 1.0), ('7175', 0.5), (',', 1.0), ('testData', 0.5), (',', 0.23809523809523808), ('genericCallback', 0.21428571428571427), (')', 1.0), (';', 1.0), ('linker', 2.209017208244052e-05), ('=', 1.0), ('crawler', 1.0), ('.', 1.0), ('getPage', 0.10144927536231885), ('(', 1.0), ('root', 0.16818181818181818), (')', 0.22), (',', 0.3110539845758355), ('""', 0.23656499636891795), ('""', 0.06040631078452561), (')', 0.4384805945499587), (';', 0.6090406958288362), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('SocketAddress', 0.18384518300378627), (',', 0.9722530521642619), ('Map', 0.6484018264840182), ('<', 0.9927536231884058), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('o', 0.14516129032258066), (':', 0.0056179775280898875), ('NULL_VALUE', 0.25), (';', 1.0), ('int', 0.14285714285714285), ('clientport2', 0.0009905894006934125), ('=', 1.0), ('PortAssignment', 1.0), ('.', 1.0), ('unique', 0.9925373134328358), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('getSession', 0.0028100651424192106), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('}', 0.031092171717171716), ('private', 0.004728132387706856), ('List', 0.015151515151515152), ('<', 0.975609756097561), ('OpResult', 0.014903846153846155)]","public void setup ( ) ; runner . getExitCode ( ) throws PluginException ; void resetLatency ( ) ; assertFalse ( testFile ) ; if ( DigestCalculator . setDigestEnabled ( true ) ; log . getExitCode ( ResponseParser response ) ; assertEquals ( 8174 , 7175 , testData , genericCallback ) ; linker = crawler . getPage ( root ) , "" "" ) ; Map < SocketAddress , Map < String , Object o : NULL_VALUE ; int clientport2 = PortAssignment . unique ( ) . getSession ( ) throws Exception { } private List < OpResult"
76,"['private', 'Map']","[('<', 0.9642857142857143), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('keys', 0.42378467453996155), (',', 0.5499677627337202), ('Transcoder', 0.76), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('>', 0.22870452528837623), ('>', 0.17165613842351002), ('asyncGetBulk', 0.4069448674992385), ('(', 0.999251497005988), ('Collection', 0.44485842026825634), ('<', 0.9910858995137763), ('String', 0.7289890377588307), ('>', 0.39886867451460023), ('keys', 0.42378467453996155), (')', 0.4397163120567376), ('throws', 0.3000554631170272), ('KeeperException', 0.010005758710048948), (',', 0.41007194244604317), ('InterruptedException', 0.8666666666666667), ('{', 0.6835016835016835), ('final', 0.0462046204620462), ('String', 0.1982142857142857), ('key', 0.38055322715842416), (',', 0.8474898881751131), ('final', 0.056950067476383266), ('int', 0.3832468495181616), ('exp', 0.48699763593380613), (',', 0.5522565320665083), ('Object', 0.3482831114225648), ('value', 0.09483870967741935), ('=', 0.03625377643504532), ('""', 0.08), ('me', 0.0008532423208191126), ('""', 1.0), (';', 0.2), ('}', 0.1302910052910053), ('@Test', 0.035999290654371345), ('public', 0.952054794520548), ('void', 1.0), ('writeBuffer', 0.0006190992106485065), ('(', 1.0), ('byte', 0.8), ('[', 0.529126213592233), (']', 0.7630057803468208), ('joptions', 0.0003312355084465055), ('=', 1.0), ('javacOptions', 1.0), ('.', 1.0), ('toArray', 0.5), ('(', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing')]","private Map < String > keys , Transcoder < T > tc , String > > asyncGetBulk ( Collection < String > keys ) throws KeeperException , InterruptedException { final String key , final int exp , Object value = "" me "" ; } @Test public void writeBuffer ( byte [ ] joptions = javacOptions . toArray ( ) )"
77,"['public', 'static']","[('FitNesseContext', 0.015560165975103735), ('initContext', 0.125), ('(', 1.0), ('File', 0.3333333333333333), ('file', 0.3687315634218289), (')', 0.375), (';', 0.5056179775280899), ('expect', 0.0002650820649892863), ('(', 1.0), ('revisionController', 1.0), ('.', 0.5176470588235295), ('checkState', 0.1044776119402985), ('(', 1.0), (')', 0.34285714285714286), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('File', 0.01672979797979798), ('[', 0.0825242718446602), (']', 0.6923076923076923), ('nsa', 0.0009937065253395165), ('=', 1.0), ('ConfigUtils', 1.0), (')', 'Paren balancing'), ('}', 'Bracket balancing')]",public static FitNesseContext initContext ( File file ) ; expect ( revisionController . checkState ( ) throws Exception { File [ ] nsa = ConfigUtils ) )
78,"['public', 'void']","[('testExceptionOccurred', 0.005494505494505495), ('(', 1.0), ('Assertion', 0.9468085106382979), ('assertion', 0.9704142011834319), (';', 0.006060606060606061), ('if', 0.3333333333333333), ('(', 1.0), ('ComponentFactory', 0.0006272214091574326), ('factory', 0.023255813953488372), (')', 1.0), (';', 0.8), ('this', 0.009366232962954782), ('.', 1.0), ('mockery', 0.06631016042780749), ('=', 1.0), ('new', 1.0), ('ArrayList', 0.041934353463380446), ('<', 0.9570405727923628), ('SymbolType', 0.008333333333333333), ('>', 1.0), ('makeEndList', 0.0625), ('(', 1.0), ('new', 0.5), ('Symbol', 0.012027491408934709), ('(', 1.0), ('type', 0.09615384615384616), ('.', 0.1223021582733813), ('isInterface', 0.010526315789473684), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), (',', 0.17965705378020266), ('InterruptedException', 0.42857142857142855), ('{', 0.6835016835016835), ('addWatch', 0.0033003300330033004), ('(', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void testExceptionOccurred ( Assertion assertion ; if ( ComponentFactory factory ) ; this . mockery = new ArrayList < SymbolType > makeEndList ( new Symbol ( type . isInterface ( ) throws IOException , InterruptedException { addWatch ( ) ) ) ) )"
79,"['public', 'void']","[('stop', 0.001547748026621266), ('(', 1.0), (')', 0.9672131147540983), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('prefix', 0.02091299258681233), ('=', 0.0410958904109589), ('""', 0.6666666666666666), ('|Suite|', 0.0034129692832764505), ('\\', 1.0), ('n|Title|Test|', 1.0), ('\\', 1.0), ('n|Content|.|', 1.0), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('name', 0.013930348258706468), (';', 0.046875), ('fileSystem', 0.25), ('.', 1.0), ('makeFile', 0.6301369863013698), (')', 'Paren balancing')]","public void stop ( ) ; long decr ( String prefix = "" |Suite| \ n|Title|Test| \ n|Content|.| \ n "" + name ; fileSystem . makeFile )"
80,"['private', 'SimpleFixture']",[],private SimpleFixture
81,"['public', 'void']","[('shouldUseTheProvidedParameters', 0.00030954960532425323), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('boolean', 0.047891210090658255), ('isXmlFormat', 0.001201923076923077), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('File', 0.01672979797979798), ('tmpDir', 0.1796116504854369), ('=', 0.7419354838709677), ('ClientBase', 0.532258064516129), ('.', 1.0), ('createTmpDir', 0.13352272727272727), ('(', 1.0), (')', 0.9), (';', 0.4777126381547333), ('root', 0.001137643862245687), ('=', 0.4214876033057851), ('InMemoryPage', 0.5859154929577465), ('.', 1.0), ('makeRoot', 0.9741379310344828), ('(', 1.0), ('""', 0.9047619047619048), ('Can not start Fit client', 4.7183165046711336e-05), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('----', 0.0006483682731791658), ('""', 1.0), (',', 0.2), ('""', 0.38678420515809414), ('PROPERTY_TOC', 0.0001080613788631943), ('""', 1.0), (',', 1.0), ('0', 0.007868279178201952), (')', 0.3883029721955896), (';', 0.2893815635939323), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('PageOne.SomePage', 0.000141549495140134), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('tag', 0.007257120561841592), (')', 0.9582366589327146), (';', 0.12525252525252525), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('>', 0.22870452528837623), ('keys', 0.42378467453996155), (',', 0.5499677627337202), ('Transcoder', 0.76), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('delete', 0.17464285714285716), ('(', 1.0), ('String', 0.739568345323741), ('nonCopyableFile', 7.803355442840422e-05), (':', 1.0), ('updateDoNotCopyOver', 1.0), (')', 1.0), ('{', 1.0), ('CommandLine', 0.0007166590657371816), ('cli', 0.13333333333333333), ('=', 1.0), ('parser', 1.0), ('.', 1.0), ('rulesFor', 0.13333333333333333), ('(', 1.0), ('new', 0.3793103448275862), ('Expectations', 0.10893470790378007), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('boolean', 0.02482935342066315), ('shutdown', 0.16020671834625322), ('(', 1.0), (')', 0.5700483091787439), (';', 0.4777126381547333), ('assertFalse', 0.005390001988115487), ('(', 1.0), ('exceptionOccurred', 0.014084507042253521), (')', 1.0), (';', 1.0), ('assertThat', 0.010227749674169962), ('(', 1.0), ('abc', 0.009760425909494233), (')', 0.2), (';', 0.6), ('String', 0.026430890896640084), ('relativeName', 0.002564102564102564), ('=', 0.5), ('pageCrawler', 0.5833333333333334), ('.', 1.0), ('getPage', 0.4883720930232558), ('(', 1.0), (')', 0.35909090909090907), (')', 0.1723209995194618), (';', 0.6920507070614618), ('boolean', 0.02482935342066315), ('shutdown', 0.16020671834625322), ('(', 1.0), ('long', 0.36135265700483093), ('delay', 0.14701455092824886), (')', 0.9898648648648649), (';', 0.9894894894894894), ('Response', 0.001358545583070092), ('response', 0.9761904761904762), ('=', 0.8470588235294118), ('(', 0.24493243243243243), ('DERObjectIdentifier', 0.0018570102135561746), (')', 0.45454545454545453), ('ordering', 0.4), ('.', 1.0), ('elementAt', 0.5), ('(', 1.0), ('rowIndex', 0.029411764705882353), (')', 1.0), (';', 0.9615384615384616), ('Field', 9.940577437098235e-05), ('addrField', 0.2222222222222222), ('=', 1.0), ('peer', 1.0), ('.', 1.0), ('getLeaderAddress', 0.009900990099009901), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('}', 0.2383401312289413), (')', 0.36363636363636365), (';', 0.7686567164179104), ('boolean', 0.02482935342066315), ('waitForQueues', 0.16106804478897502), ('(', 1.0), ('long', 1.0), ('timeout', 0.388861013547416), (',', 0.9872122762148338), ('TimeUnit', 0.9625468164794008), ('unit', 0.897196261682243), (')', 1.0), (';', 0.9728682170542635), ('inSequence', 0.0012812299807815502), ('(', 1.0), ('sequence', 0.9224137931034483), (')', 0.9907407407407407), (';', 1.0), ('boolean', 0.02482935342066315), ('shutdown', 0.16020671834625322), ('(', 1.0), (')', 0.5700483091787439), ('.', 0.0554925516578568), ('instanceFor', 0.004726018648614127), ('(', 1.0), ('StaticContentHandler', 0.01593625498007968), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('bundle', 0.06298200514138817), (')', 1.0), (';', 0.24888888888888888), ('assertThat', 0.010227749674169962), ('(', 1.0), ('myCat', 0.008873114463176575), ('.', 0.6666666666666666), ('legLength', 0.16666666666666666), (';', 0.6666666666666666), ('assertThat', 1.0), ('(', 1.0), ('errors', 0.013309671694764862), ('.', 0.46875), ('get', 0.40540540540540543), ('(', 1.0), ('name', 0.006357856494096276), (',', 0.2849604221635884), ('value', 0.03755868544600939), (')', 0.8014184397163121), (';', 0.5893958076448829), ('dataDirVersion2', 4.418034416488104e-05), ('.', 1.0), ('mkdirs', 1.0), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('verify', 0.004959243632507897), ('(', 1.0), ('""', 0.3241106719367589), ('should not call this Method interceptor', 0.00018873266018684534), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('long', 0.030583843248138905), ('getOperationTimeout', 0.013363028953229399), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('takeXref', 0.0010985992859104642), (')', 1.0), (';', 1.0), ('public', 0.04915063288343016), ('int', 0.20082774931020891), ('getEphemeralCount', 0.0024096385542168677), ('(', 1.0), (')', 1.0), ('-', 0.003075444497837578), ('>', 0.4418604651162791), ('{', 0.6524822695035462), ('return', 0.016666666666666666), ('requestedName', 0.0007171029042667623), ('.', 1.0), ('equals', 1.0), ('(', 1.0), ('o', 0.014749262536873156), ('instanceof', 0.48672566371681414), ('MySource', 0.017857142857142856), (')', 1.0), ('o', 0.6666666666666666), (')', 0.18421052631578946), (';', 0.7678300455235205), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('BLOCK_SIZE', 0.002205071664829107), (';', 1.0), (')', 'Paren balancing')]","public void shouldUseTheProvidedParameters ( ) ; public boolean isXmlFormat ( ) throws Exception { File tmpDir = ClientBase . createTmpDir ( ) ; root = InMemoryPage . makeRoot ( "" Can not start Fit client "" , "" ---- "" , "" PROPERTY_TOC "" , 0 ) ; assertSubString ( "" PageOne.SomePage "" ) ; long decr ( String tag ) ; < T > tc , String > keys , Transcoder < T > Future < Boolean > delete ( String nonCopyableFile : updateDoNotCopyOver ) { CommandLine cli = parser . rulesFor ( new Expectations ( ) ; boolean shutdown ( ) ; assertFalse ( exceptionOccurred ) ; assertThat ( abc ) ; String relativeName = pageCrawler . getPage ( ) ) ; boolean shutdown ( long delay ) ; Response response = ( DERObjectIdentifier ) ordering . elementAt ( rowIndex ) ; Field addrField = peer . getLeaderAddress ( ) ; } } ) ; boolean waitForQueues ( long timeout , TimeUnit unit ) ; inSequence ( sequence ) ; boolean shutdown ( ) . instanceFor ( StaticContentHandler . class , bundle ) ; assertThat ( myCat . legLength ; assertThat ( errors . get ( name , value ) ; dataDirVersion2 . mkdirs ( ) ; verify ( "" should not call this Method interceptor "" ) ; long getOperationTimeout ( ) ; Map < String > takeXref ) ; public int getEphemeralCount ( ) - > { return requestedName . equals ( o instanceof MySource ) o ) ; } return BLOCK_SIZE ; )"
82,"['public', 'Index']","[('startVector', 0.4117647058823529), ('(', 1.0), ('String', 0.2222222222222222), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('final', 0.14996496145760335), ('String', 0.1994069681245367), ('key', 0.38055322715842416), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('Object', 0.3482831114225648), ('value', 0.09483870967741935), (')', 0.9516616314199395), (':', 0.0036991368680641184), ('m', 0.005235602094240838), ('.', 1.0), ('from', 0.00909090909090909), ('=', 0.01), ('expectedOutputStr', 0.7142857142857143), ('.', 1.0), ('indexOf', 0.7), ('(', 1.0), (""'/'"", 0.006024096385542169), (',', 0.6363636363636364), ('File', 0.7142857142857143), ('diry2', 0.008849557522123894), (')', 1.0), ('throws', 0.3333333333333333), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('simpleKdc', 0.0003156565656565657), ('.', 1.0), ('getKadmin', 0.5), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('cal', 0.0005320092214931725), ('.', 1.0), ('getTime', 0.6721311475409836), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('listener', 0.0002650820649892863), ('=', 0.037037037037037035), ('new', 0.23529411764705882), ('StringBuilder', 0.016353229762878167), ('(', 1.0), (')', 0.8680555555555556), ('.', 0.0554925516578568), ('getAttribute', 0.01251756290714012), ('(', 1.0), ('with', 0.0481283422459893), ('(', 0.9583333333333334), ('any', 0.5), ('(', 1.0), ('Stoppable', 0.02702702702702703), ('process', 0.25), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","public Index startVector ( String key , int exp , final String key , int exp , Object value ) : m . from = expectedOutputStr . indexOf ( '/' , File diry2 ) throws Exception { simpleKdc . getKadmin ( ) ; } cal . getTime ( ) ; listener = new StringBuilder ( ) . getAttribute ( with ( any ( Stoppable process ) ) )"
83,"['@Test', 'public']","[('void', 1.0), ('shouldAcceptAResultWithASpecificWebMethod', 0.002476396842594026), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('response', 0.003678013651726347), ('=', 0.26627218934911245), ('(', 0.24493243243243243), ('VersionNumber', 0.0009285051067780873), (')', 0.14285714285714285), ('o', 1.0), (';', 0.8157894736842105), ('if', 0.3387096774193548), ('(', 1.0), ('actual', 0.0035542546518921177), (',', 0.3230769230769231), ('String', 0.515625), ('fileSuffix', 0.0008873114463176575), (',', 0.75), ('boolean', 1.0), (')', 'Paren balancing')]","@Test public void shouldAcceptAResultWithASpecificWebMethod ( ) ; response = ( VersionNumber ) o ; if ( actual , String fileSuffix , boolean )"
84,"['private', 'Request']","[('createRequest', 0.4), ('(', 1.0), (')', 0.4375), (';', 0.4777126381547333), ('return', 0.02244361483575957), ('token', 0.0008240626287597857), (';', 1.0), ('int', 0.15384615384615385), ('getReadBufSize', 0.02526002971768202), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('FileTxnSnapLog', 0.00024299189290684576), ('snapLog', 0.09090909090909091), ('=', 1.0), ('null', 0.3333333333333333), (';', 0.19305019305019305), ('mFilename', 0.008836524300441826), ('=', 1.0), ('null', 0.5454545454545454), (';', 0.19305019305019305), ('do', 0.0014727540500736377), ('{', 1.0), ('if', 0.6153846153846154), ('(', 1.0), (')', 'Paren balancing'), ('}', 'Bracket balancing')]",private Request createRequest ( ) ; return token ; int getReadBufSize ( ) ; FileTxnSnapLog snapLog = null ; mFilename = null ; do { if ( ) )
85,"['void', 'addExpectation']","[('(', 1.0), ('new', 0.48), ('Integer', 0.0027491408934707906), ('[', 0.4375), ('actualBits', 0.25), ('.', 1.0), ('toArray', 0.3), ('(', 1.0), ('T', 0.016129032258064516), ('object', 0.1694915254237288), (',', 0.23333333333333334), ('""', 0.12903225806451613), ('Output of TearDown', 0.0012967365463583316), ('""', 1.0), (')', 0.631578947368421), (';', 0.6090406958288362), (')', 'Paren balancing')]","void addExpectation ( new Integer [ actualBits . toArray ( T object , "" Output of TearDown "" ) ; )"
86,"['public', 'SortedSet']",[],public SortedSet
87,"['public', 'ParseSpecification']","[('priority', 0.25), ('(', 1.0), ('priority', 0.5), (')', 1.0), (';', 0.5833333333333334), ('representation', 5.522543020610131e-05), ('.', 0.8), ('from', 1.0), ('(', 0.98), ('T', 0.1925925925925926), ('controller', 0.519774011299435), (')', 1.0), (';', 0.9563318777292577), ('void', 0.04505290596213744), ('testAssertionVerified', 0.0032140561388472252)]",public ParseSpecification priority ( priority ) ; representation . from ( T controller ) ; void testAssertionVerified
88,"['public', 'void']","[('setUp', 0.02832378888716917), ('(', 1.0), (')', 0.9781746031746031), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('visitLineNumber', 0.0006190992106485065), ('(', 1.0), ('final', 0.7272727272727273), ('LearnerHandler', 0.01935483870967742), ('learnerHandler', 1.0), (',', 0.4936708860759494), ('long', 0.46153846153846156), ('by', 0.2550628044091259), (')', 'Paren balancing')]","public void setUp ( ) ; public void visitLineNumber ( final LearnerHandler learnerHandler , long by )"
89,"['long', 'createSession']","[('(', 1.0), ('ServerCnxn', 0.08), ('sc', 0.07692307692307693), (')', 1.0), ('throws', 0.5), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('Map', 0.20824989987985582), ('<', 0.9966386554621849), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('value', 0.09483870967741935), ('=', 0.03625377643504532), ('=', 0.372), ('null', 0.518327605956472), ('|', 0.08193908193908193), ('|', 1.0), ('changesSave', 0.013972055888223553), ('!', 1.0), ('=', 1.0), ('null', 0.7410909090909091), (';', 0.19305019305019305), ('ConversableFollower', 0.0029455081001472753), ('follower', 1.0), ('=', 1.0), ('new', 0.1111111111111111), ('RequestPathMetricsCollector', 0.0007008527041233501), ('(', 1.0), (')', 0.6666666666666666), ('.', 0.0554925516578568), ('append', 0.049687060927321496), ('(', 0.9965635738831615), ('match', 0.0007704160246533128), ('.', 0.6), ('getLength', 0.06593406593406594), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('new', 0.0032575412078962797), ('Object', 0.06306306306306306), ('[', 0.8880597014925373), (']', 0.9389830508474576), ('>', 0.006955945677376615), ('asList', 0.047619047619047616), ('(', 1.0), ('asList', 0.07782101167315175), ('(', 1.0), ('""', 0.3560311284046693), ('UTF-8', 0.0027366235727092573), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('}', 0.17806887715655306), ('else', 0.0523142401134953), ('{', 0.7423312883435583), ('sb', 0.0321285140562249), ('.', 1.0), ('append', 0.7374301675977654), ('(', 0.9965635738831615), ('headers', 0.0015408320493066256), ('.', 0.6666666666666666), ('keySet', 0.3333333333333333), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('v', 0.0028666362629487263), ('.', 0.9777777777777777), ('equals', 0.01282051282051282), ('(', 1.0), ('fullPath', 0.0058997050147492625), (')', 0.9069767441860465), (';', 0.75), ('assertNotNull', 0.0024299189290684572), ('(', 1.0), ('rest', 0.0040650406504065045), ('.', 0.3333333333333333), ('more', 0.42857142857142855), ('=', 0.22580645161290322), ('nextRow', 0.05), (';', 1.0), ('}', 1.0), ('if', 0.08051072885263344), ('(', 1.0), ('parser', 0.003136107045787163), ('.', 0.7777777777777778), ('parseToWithSymbols', 0.016666666666666666), ('(', 1.0), ('terminators', 0.14285714285714285), (')', 0.375), ('{', 0.35294117647058826), ('}', 0.05062219037070819), ('@Override', 0.19858156028368795), ('public', 0.927710843373494), ('void', 0.8205128205128205), ('testSimpleRequest', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('boolean', 0.02482935342066315), ('isDefaultExecutorService', 0.004306632213608958), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('else', 0.0523142401134953), ('buffer', 0.009202453987730062), ('.', 1.0), ('append', 0.576530612244898), ('(', 0.9965635738831615), ('""', 0.43297380585516176), ('MyPage', 0.0006605643106539587), ('""', 1.0), (')', 0.875), (';', 0.6090406958288362), ('if', 0.01729660474055093), ('(', 1.0), ('certReq', 0.0002090738030524775), ('!', 0.5), ('=', 1.0), ('null', 0.7410909090909091), ('|', 0.08193908193908193), ('|', 1.0), ('(', 0.17365269461077845), ('value', 0.1487603305785124), (',', 0.14657210401891252), ('String', 0.09430255402750491), ('methodsName', 0.0011091393078970719), (',', 1.0), ('Object', 0.7142857142857143), ('o', 0.14516129032258066), (')', 0.9812734082397003), (';', 0.7678300455235205), ('one', 0.005169100267291082), ('(', 1.0), ('info', 0.030390738060781478), ('.', 0.2727272727272727), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","long createSession ( ServerCnxn sc ) throws OperationTimeoutException ; Map < String , Object value = = null | | changesSave ! = null ; ConversableFollower follower = new RequestPathMetricsCollector ( ) . append ( match . getLength ( ) { new Object [ ] > asList ( asList ( "" UTF-8 "" ) ; } else { sb . append ( headers . keySet ( ) { v . equals ( fullPath ) ; assertNotNull ( rest . more = nextRow ; } if ( parser . parseToWithSymbols ( terminators ) { } @Override public void testSimpleRequest ( ) ; boolean isDefaultExecutorService ( ) ; } else buffer . append ( "" MyPage "" ) ; if ( certReq ! = null | | ( value , String methodsName , Object o ) ; one ( info . ) ) ) ) ) ) )"
90,"['public', 'void']","[('setTickTime', 0.004178919671877418), ('(', 1.0), ('int', 0.9367088607594937), ('rc', 0.06059735784032166), (',', 0.9457013574660633), ('LedgerHandle', 0.17167381974248927), ('lh', 0.8780487804878049), (',', 0.975609756097561), ('Object', 0.3469387755102041), ('>', 0.49548387096774194), ('pseudoResults', 0.03899416909620991), ('=', 1.0), ('SlimClient', 0.5981308411214953), ('.', 1.0), ('resultToMap', 0.9863013698630136), ('(', 1.0), ('list', 0.6311475409836066), ('(', 0.7837837837837838), ('list', 0.20048602673147023), ('.', 0.056511056511056514), ('contains', 0.08333333333333333), ('(', 1.0), ('""', 0.4502923976608187), ('testDir/ExternalRoot', 0.0005190148155138247), ('""', 1.0), (')', 0.8181818181818182), (';', 0.6090406958288362), ('File', 0.0021648368640791713), ('imagesDir', 0.013215859030837005), ('=', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void setTickTime ( int rc , LedgerHandle lh , Object > pseudoResults = SlimClient . resultToMap ( list ( list . contains ( "" testDir/ExternalRoot "" ) ; File imagesDir = ) ) )"
91,"['private', 'Map']","[('<', 0.9642857142857143), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('val', 0.0819081908190819), (',', 0.994535519125683), ('Transcoder', 0.9333333333333333), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('content', 0.019520851818988466), ('=', 0.5749128919860628), ('factory', 0.004807692307692308), ('.', 1.0), ('instanceFor', 0.18238993710691823), ('(', 1.0), ('type', 0.035856573705179286), (')', 0.5611510791366906), (';', 0.4223300970873786), ('CountDownLatch', 0.0013475004970288718), ('broadcastOp', 0.9508196721311475), ('(', 1.0), ('final', 0.8863636363636364), ('ConnectionObserver', 0.0014336917562724014), ('obs', 1.0), (')', 0.9982847341337907), (';', 0.9864406779661017), ('arguments', 0.00022090172082440523), ('.', 0.9), ('add', 0.01818181818181818), ('(', 0.995049504950495), ('scriptTable', 0.0003846153846153846), ('.', 1.0), ('getTestSummary', 0.3333333333333333), ('(', 1.0), (')', 0.9938650306748467), (';', 0.4777126381547333), ('root', 0.001137643862245687), ('.', 0.5785123966942148), ('addVariable', 0.01303538175046555), ('(', 1.0), ('name', 0.1111111111111111), (')', 0.58311345646438), (';', 0.5493150684931507), ('addFile', 0.0002650820649892863), ('(', 1.0), ('File', 0.061224489795918366), ('dir', 0.05014749262536873), (':', 0.02857142857142857), ('ledgerDirectories', 1.0), (')', 1.0), (')', 'Paren balancing')]","private Map < String , T val , Transcoder < T > tc , String content = factory . instanceFor ( type ) ; CountDownLatch broadcastOp ( final ConnectionObserver obs ) ; arguments . add ( scriptTable . getTestSummary ( ) ; root . addVariable ( name ) ; addFile ( File dir : ledgerDirectories ) )"
92,"['public', 'void']","[('testFormatting', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('int', 0.20082774931020891), ('getMaxSessionTimeout', 0.0642570281124498), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('getFullPath', 0.0029304029304029304), ('(', 1.0), (')', 0.4583333333333333), (';', 0.4777126381547333), ('Map', 0.013497095142371159), ('.', 0.0011204481792717086), ('Entry', 0.8727272727272727), ('<', 0.84), ('String', 0.546875), ('>', 0.39886867451460023), ('keys', 0.42378467453996155), (',', 0.5499677627337202), ('Iterator', 0.20114285714285715), ('<', 1.0), ('Transcoder', 0.284329563812601), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('key', 0.09316770186335403), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('casId', 0.143809279671879), (',', 0.998220640569395), ('String', 0.06338028169014084), ('.', 0.15150842945874002), ('format', 0.14682779456193354), ('(', 0.9970238095238095), ('""', 0.6512968299711815), ('Content-Length', 0.00018873266018684534), ('""', 1.0), (')', 0.3333333333333333), (';', 0.6090406958288362), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncIncr', 0.445859872611465), ('(', 1.0), ('String', 0.9979633401221996), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('Object', 0.3482831114225648), ('>', 0.49548387096774194), ('>', 0.32798833819241985), ('getSessionExpiryMap', 0.006396588486140725), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), (')', 'Paren balancing')]","public void testFormatting ( ) ; public int getMaxSessionTimeout ( ) ; String getFullPath ( ) ; Map . Entry < String > keys , Iterator < Transcoder < T > tc , String key , int by , long casId , String . format ( "" Content-Length "" ) ; Future < Long > asyncIncr ( String key , int exp , Object > > getSessionExpiryMap ( ) ; )"
93,"['public', 'void']","[('writeFloat', 0.0006190992106485065), ('(', 1.0), ('float', 0.8235294117647058), ('f', 0.5769230769230769), (',', 0.875), ('f', 0.3055555555555556), ('.', 0.94), ('getArgsForTable', 0.017045454545454544), ('(', 1.0), ('table', 0.75), (')', 0.27388535031847133), (';', 0.6459627329192547), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('T', 0.0531540847983454), ('forwardTo', 0.05474452554744526), ('(', 1.0), ('T', 0.22857142857142856), ('controller', 0.519774011299435), (')', 1.0), (';', 0.9563318777292577), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('Locale', 0.000445632798573975), ('.', 1.0), ('US', 0.1746031746031746), (')', 0.9090909090909091), (';', 1.0), ('Responder', 0.0005853895601846739), ('responder', 0.9811320754716981), ('=', 1.0), ('new', 0.8082901554404145), ('OutputStreamWriter', 0.0005840439201027917), ('(', 1.0), ('new', 0.3076923076923077), ('String', 0.07216494845360824), ('[', 0.7513089005235603), (']', 0.9407114624505929), ('bytes', 0.017555481947664788), ('=', 0.5849056603773585), ('value', 0.05555555555555555), (')', 0.125), (';', 0.5893958076448829), ('CountDownLatch', 0.0013475004970288718), ('broadcastOp', 0.9508196721311475), ('(', 1.0), ('final', 0.8863636363636364), ('SignatureVisitor', 0.0007168458781362007), ('v', 1.0), (')', 0.3333333333333333), (';', 0.5604395604395604), ('List', 0.007079900152422188), ('<', 0.9456681350954479), ('String', 0.20192307692307693), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('o', 0.14516129032258066), (')', 0.9812734082397003), (';', 0.7678300455235205), ('pwriter', 0.0003313525812366078), ('.', 1.0), ('println', 0.4117647058823529), ('(', 1.0), ('scs', 0.002849002849002849), ('.', 1.0), ('sendRequestStop', 0.25), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('>', 0.17165613842351002), ('asyncGetBulk', 0.4069448674992385), ('(', 0.999251497005988), ('Iterator', 0.1602086438152012), ('<', 0.9372093023255814), ('String', 0.6381260096930533), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('>', 0.49548387096774194), ('asyncGet', 0.0652332361516035), ('(', 1.0), ('String', 0.9551820728291317), ('tableName', 0.0028092079594225516), (')', 1.0), (';', 1.0), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncIncr', 0.445859872611465), ('(', 1.0), ('String', 0.9979633401221996), ('scenarioName', 0.0030433086227077645), (',', 0.48717948717948717), ('ScenarioTable', 0.95), ('scenarioTable', 0.9047619047619048), (')', 1.0), (';', 0.95), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncDecr', 0.4640582347588717), ('(', 1.0), ('String', 0.9883720930232558), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('v', 0.00032599837000814997), (',', 1.0), ('String', 0.8838709677419355), ('>', 0.22870452528837623), ('keys', 0.42378467453996155), (')', 0.4397163120567376), (';', 0.6894065446478093), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('StreamMode', 0.002005347593582888), ('.', 0.7333333333333333), ('SNAPPY', 0.21428571428571427), ('.', 0.6666666666666666), ('getFileExtension', 0.5), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('addAll', 0.0011495721037169497), ('(', 1.0), ('Collection', 0.0718232044198895), ('<', 0.9910858995137763), ('String', 0.7289890377588307), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('>', 0.49548387096774194), ('baseType', 0.0007288629737609329), ('=', 1.0), ('instance', 0.3333333333333333), ('.', 1.0), ('systemUnderTest', 0.06896551724137931), ('.', 1.0), ('called', 0.5), (')', 1.0), (';', 1.0), ('context', 0.0022090172082440524), ('=', 0.3991031390134529), ('FitNesseUtil', 0.43727598566308246), ('.', 1.0), ('makeTestContext', 0.7180451127819549), ('(', 1.0), (')', 0.1509433962264151), (';', 0.4777126381547333), ('formatter', 0.003678013651726347), ('.', 0.9641791044776119), ('tail', 0.009070294784580499), ('=', 0.4), ('""', 0.2), ('!define TEST_SYSTEM {slim}', 0.011092150170648464), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('methodSpecifiers', 0.0002487562189054726), ('[', 1.0), ('i', 1.0), (']', 0.9539295392953929), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void writeFloat ( float f , f . getArgsForTable ( table ) ; < T > T forwardTo ( T controller ) ; assertEquals ( Locale . US ) ; Responder responder = new OutputStreamWriter ( new String [ ] bytes = value ) ; CountDownLatch broadcastOp ( final SignatureVisitor v ) ; List < String , Object o ) ; pwriter . println ( scs . sendRequestStop ( ) ; Map < String > > asyncGetBulk ( Iterator < String , Object > asyncGet ( String tableName ) ; Future < Long > asyncIncr ( String scenarioName , ScenarioTable scenarioTable ) ; Future < Long > asyncDecr ( String key , int v , String > keys ) ; assertEquals ( StreamMode . SNAPPY . getFileExtension ( ) . addAll ( Collection < String , Object > baseType = instance . systemUnderTest . called ) ; context = FitNesseUtil . makeTestContext ( ) ; formatter . tail = "" !define TEST_SYSTEM {slim} \ n "" + methodSpecifiers [ i ] ) ) )"
94,"['public', 'Object']","[('invoke', 0.029556650246305417), ('(', 1.0), ('actor', 0.06349206349206349), (')', 0.4), (';', 1.0), ('arguments', 0.00022090172082440523), ('.', 0.9), ('getPort', 0.045454545454545456), ('(', 1.0), (')', 0.9473684210526315), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('p', 0.00031213421771361687), (':', 0.6666666666666666), ('paths', 0.8), (')', 1.0), (';', 0.41935483870967744), ('html', 0.00296008305904703)]",public Object invoke ( actor ) ; arguments . getPort ( ) ; long incr ( String p : paths ) ; html
95,"['public', 'void']","[('write', 0.0038693700665531653), ('(', 1.0), ('(', 0.05214723926380368), ('WikiTestPage', 0.02983425414364641), ('test', 0.5555555555555556), (',', 0.7333333333333333), ('TestSummary', 0.6171428571428571), ('testSummary', 0.9246575342465754), (')', 0.6804979253112033), ('throws', 0.3333333333333333), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('FitClient', 0.0011047979797979798), ('client', 1.0), ('=', 0.6111111111111112), ('new', 0.6515151515151515), ('MockRequest', 0.01763812638710431), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('getResourceAsStream', 0.0010218418699706221), ('(', 1.0), ('""', 1.0), ('sessionId:', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('when', 0.005964346462258941), ('(', 1.0), ('converters', 0.04775687409551375), ('.', 0.5735294117647058), ('existsFor', 0.11864406779661017), ('(', 1.0), ('target', 0.09523809523809523), ('.', 0.21153846153846154), ('getName', 0.09523809523809523), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('getSecureClientPort', 0.029304029304029304), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('List', 0.007079900152422188), ('<', 0.9456681350954479), ('Object', 0.1110576923076923), ('>', 0.9740680713128039), ('value', 0.00036443148688046647), (',', 0.6666666666666666), ('Class', 0.17092337917485265), ('<', 0.7022222222222222), ('?', 0.6746987951807228), ('>', 0.5993756503642039), ('type', 0.19013062409288825), (')', 0.45660377358490567), ('{', 0.33737864077669905), ('Set', 0.001954524724737768), ('<', 0.9166666666666666), ('String', 0.5802997858672377), ('>', 0.39886867451460023), ('getVersions', 0.08294424608624004), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('final', 0.014528633787217408), ('String', 0.1982142857142857), ('pathSeparator', 0.0008382229673093043), ('=', 1.0), ('getPathSeparator', 0.5), ('(', 1.0), ('WikiPage', 0.3333333333333333), ('subjectPage', 0.00744047619047619), (')', 0.4), ('throws', 1.0), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('assertSubString', 0.005839646464646465), ('(', 1.0), ('""', 0.9659185369908562), ('asdf', 0.00018873266018684534), ('""', 1.0), (',', 0.8), ('client', 0.0014570887367040652), ('.', 0.7636363636363637), ('delete', 0.008928571428571428), ('(', 0.9652777777777778), ('String', 0.739568345323741), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Map', 0.09331084879145587), ('<', 0.9933283914010378), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('>', 0.6264626462646264), ('tc', 0.32430196483971047), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void write ( ( WikiTestPage test , TestSummary testSummary ) throws Exception { FitClient client = new MockRequest ( ) . getResourceAsStream ( "" sessionId: "" ) ; when ( converters . existsFor ( target . getName ( ) ; String getSecureClientPort ( ) ; List < Object > value , Class < ? > type ) { Set < String > getVersions ( ) { final String pathSeparator = getPathSeparator ( WikiPage subjectPage ) throws Exception { assertSubString ( "" asdf "" , client . delete ( String key , Transcoder < T > Future < Map < String , T > tc ) ) ) ) ) ) ) )"
96,"['public', 'void']","[('shouldJoinChunk', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('process', 5.522543020610131e-05), ('(', 0.8), ('event', 0.018691588785046728), ('.', 0.2), ('getState', 0.21621621621621623), ('(', 1.0), (')', 0.9436619718309859), (')', 0.1723209995194618), ('fullPathOfChild', 4.576449590407762e-05), ('=', 1.0), ('absolutePathOfParent', 0.5), ('.', 1.0), ('append', 1.0), ('(', 0.9965635738831615), ('""', 0.43297380585516176), ('dontCreatePage', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('setup', 0.018650363720786257), ('(', 1.0), (')', 0.9959349593495935), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('addPage', 0.0004734848484848485), ('(', 1.0), ('subWiki', 0.00611353711790393), (',', 1.0), ('PathParser', 0.7), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('resource', 0.03290574456218628), (')', 0.7811320754716982), (';', 0.6448598130841121), ('page', 0.0045837107071064085), ('.', 0.668997668997669), ('getPageCrawler', 0.057608695652173914), ('(', 1.0), (')', 0.9908256880733946), (';', 0.4777126381547333), ('assertHasRegexp', 0.0033245708984072984), ('(', 1.0), ('""', 0.9006410256410257), ('Ignoring exception', 4.7183165046711336e-05), ('""', 1.0), (',', 1.0), ('runner', 0.0009471076788576424), (',', 0.08571428571428572), ('context', 1.0), (')', 0.22981366459627328), ('{', 0.2122905027932961), ('}', 0.05062219037070819), (',', 0.005516154452324665), ('actualBits', 0.02857142857142857), ('.', 1.0), ('toArray', 0.3), ('(', 1.0), ('new', 0.7096774193548387), ('FileInputStream', 0.00584192439862543), ('(', 1.0), ('args', 0.01639344262295082), (')', 0.4253393665158371), (',', 0.014534883720930232), ('new', 0.10003631082062454), ('SymbolProvider', 0.0033396946564885495), ('(', 1.0), ('new', 0.3333333333333333), ('HtmlTag', 0.010309278350515464), ('(', 0.9879518072289156), ('""', 0.9878048780487805), ('add', 0.002076059262055299), ('""', 1.0), (')', 0.72), (';', 0.6090406958288362), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('visitSource', 0.0004643244079863798), ('(', 1.0), ('final', 0.6666666666666666), ('FitNesseContext', 0.002150537634408602), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void shouldJoinChunk ( ) ; process ( event . getState ( ) ) fullPathOfChild = absolutePathOfParent . append ( "" dontCreatePage "" ) ; public void setup ( ) throws Exception { addPage ( subWiki , PathParser . parse ( resource ) ; page . getPageCrawler ( ) ; assertHasRegexp ( "" Ignoring exception "" , runner , context ) { } , actualBits . toArray ( new FileInputStream ( args ) , new SymbolProvider ( new HtmlTag ( "" add "" ) ; public void visitSource ( final FitNesseContext ) ) ) ) )"
97,"['public', 'static']","[('interface', 0.00933609958506224), ('SessionExpirer', 0.7272727272727273), ('{', 1.0), ('void', 1.0), ('closeComplete', 0.023255813953488372), ('(', 1.0), ('int', 1.0), ('row', 0.07840321654221712), (',', 0.6459854014598541), ('String', 0.30445544554455445), ('>', 0.22870452528837623), ('>', 0.17165613842351002), ('asyncGetBulk', 0.4069448674992385), ('(', 0.999251497005988), ('Transcoder', 0.19225037257824143), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('T', 0.0531540847983454), ('of', 0.07481751824817519), ('(', 1.0), ('UsersController', 0.017857142857142856), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('will', 0.006627051624732157), ('(', 1.0), ('returnValue', 0.972176759410802), ('(', 0.9983193277310924), ('""', 0.21227197346600332), ('/protectMe', 0.0010380296310276494), ('""', 1.0), (')', 0.9130434782608695), (';', 0.6090406958288362), ('writePacket', 3.3135258123660786e-05), ('(', 1.0), ('null', 0.2222222222222222), (')', 0.45076923076923076), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public static interface SessionExpirer { void closeComplete ( int row , String > > asyncGetBulk ( Transcoder < T > T of ( UsersController . class ) ; will ( returnValue ( "" /protectMe "" ) ; writePacket ( null ) ) ) ) )"
98,"['public', 'TargetResult']",[],public TargetResult
99,"['private', 'String']","[('replaceSymbolsInString', 0.002638522427440633), ('(', 1.0), ('String', 0.16666666666666666), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('asyncGet', 0.017269906928645294), ('(', 1.0), ('String', 0.9551820728291317), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('to', 0.007986960065199673), (')', 0.9074074074074074), (';', 0.9746192893401016), ('List', 0.007079900152422188), ('<', 0.9456681350954479), ('String', 0.20192307692307693), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('>', 0.49548387096774194), ('pseudoResults', 0.03899416909620991), ('=', 1.0), ('SlimClient', 0.5981308411214953), ('.', 1.0), ('resultToMap', 0.9863013698630136), ('(', 1.0), ('list', 0.6311475409836066), ('(', 0.7837837837837838), ('list', 0.20048602673147023), ('(', 0.7837837837837838), ('""', 0.528554070473876), (""This is the dead address I'm trying:"", 0.000141549495140134), ('""', 1.0), ('+', 1.0), ('i', 0.01791044776119403), (')', 0.616), (';', 0.4370629370629371), ('los', 0.0001435861185358634), ('.', 1.0), ('write', 0.42105263157894735), ('(', 1.0), ('expectedOutput', 0.003067484662576687), (')', 0.5333333333333333), (',', 0.875), ('""', 0.23656499636891795), ('notEnoughArguments', 0.0002161227577263886), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('if', 0.01729660474055093), ('(', 1.0), ('!', 0.1421701860756847), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","private String replaceSymbolsInString ( String key , Transcoder < T > asyncGet ( String key , int to ) ; List < String , Object > pseudoResults = SlimClient . resultToMap ( list ( list ( "" This is the dead address I'm trying: "" + i ) ; los . write ( expectedOutput ) , "" notEnoughArguments "" ) ; if ( ! ) ) )"
100,"['void', 'add']","[('(', 1.0), ('testPage', 0.007307692307692308), (',', 0.3944954128440367), ('String', 0.072), ('tag', 0.07320319432120674), (')', 0.9582366589327146), ('throws', 0.806060606060606), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('System', 0.006944444444444444), ('.', 1.0), ('out', 0.2277542372881356), ('.', 0.9348837209302325), ('println', 0.6353383458646616), ('(', 1.0), ('System', 0.005698005698005698), ('.', 1.0), ('out', 0.2277542372881356), ('.', 0.9348837209302325), ('print', 0.11654135338345864), ('(', 1.0), ('""', 0.686046511627907), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","void add ( testPage , String tag ) throws Exception { System . out . println ( System . out . print ( "" ) ) )"
