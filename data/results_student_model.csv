ID,Given String,Predicted Continuation,Full Method
1,"['public', 'void']","[('intercept', 0.002553784243925089), ('(', 1.0), ('stack', 0.46190476190476193), (',', 0.375), ('method', 0.5510204081632653), (')', 0.14220183486238533), ('{', 0.1942675159235669), ('X', 0.00026060329663170237), ('[', 1.0), ('i', 0.6666666666666666), (']', 0.9539295392953929), ('+', 0.02247191011235955), ('""', 0.5277777777777778), ('|input|', 0.0015309246785058174), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), (';', 0.08979246082168572), ('String', 0.06547619047619048), ('baseZnode', 0.0003663003663003663), ('=', 1.0), ('Base', 0.8), ('.', 1.0), ('createBaseZNode', 1.0), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('List', 0.007079900152422188), ('<', 0.9456681350954479), ('WikiPage', 0.12451923076923077), ('>', 0.9846153846153847), ('children', 0.0273972602739726), ('(', 0.0625), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('@Test', 0.035999290654371345), ('public', 0.952054794520548), ('void', 1.0), ('setConnectionDropIncrease', 0.003637207862559975), ('(', 1.0), ('double', 1.0), ('val', 0.8662613981762918), (')', 1.0), (';', 0.969309462915601), ('int', 0.01989219996023769), ('getMaxSessionTimeout', 0.01188707280832095), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('if', 0.01729660474055093), ('(', 1.0), ('string', 0.0010453690152623877), (')', 0.55), ('throws', 0.05263157894736842), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('ClientBase', 0.007575757575757576), ('.', 1.0), ('createTmpDir', 0.13352272727272727), ('(', 1.0), ('File', 0.03333333333333333), ('publicKeyFile', 0.0029498525073746312), (')', 1.0), ('throws', 1.0), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('int', 0.00726010101010101), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void intercept ( stack , method ) { X [ i ] + "" |input| \ n "" ; String baseZnode = Base . createBaseZNode ( ) ; List < WikiPage > children ( ) ; } @Test public void setConnectionDropIncrease ( double val ) ; int getMaxSessionTimeout ( ) ; if ( string ) throws Exception { ClientBase . createTmpDir ( File publicKeyFile ) throws Exception { int ) )"
2,"['Future', '<']","[('CASResponse', 0.03859846355630504), ('>', 1.0), ('asyncCAS', 0.9907834101382489), ('(', 1.0), ('String', 0.9772727272727273), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Object', 0.022672064777327937), ('val', 0.04774193548387097), (')', 0.925), (';', 0.969309462915601), ('group', 0.00038657801144270914), ('.', 1.0), ('add', 0.6444444444444445), ('(', 0.995049504950495), ('body', 0.01), (')', 0.717391304347826), (';', 0.8653846153846154), ('assertTrue', 0.013176787647175772), ('(', 1.0), ('outputs', 0.0013297872340425532), ('.', 1.0), ('add', 0.16666666666666666), ('(', 0.995049504950495), ('Interceptor', 0.001153846153846154), ('.', 0.6666666666666666), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('List', 0.007079900152422188), ('<', 0.9456681350954479), ('String', 0.20192307692307693), ('>', 0.39886867451460023), ('classpath', 0.0032957978577313925), ('=', 0.46153846153846156), ('new', 0.4230769230769231), ('QuorumServer', 0.0011680878402055834), ('(', 1.0), ('0', 0.2807017543859649), (',', 0.4376750700280112), ('0', 0.285363859362224), (',', 0.5541706615532119), ('ofbOutV', 0.0008176614881439084), (',', 1.0), ('0', 1.0), (',', 0.5541706615532119), ('0', 0.285363859362224), (',', 0.5541706615532119), ('stat', 0.0482420278004906), ('.', 0.8), ('getNumChildren', 0.0787037037037037), ('(', 1.0), (')', 0.85), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('s', 0.01740148263753414), (')', 0.7631578947368421), ('{', 0.25806451612903225), ('List', 0.011727148348426607), ('<', 0.9626168224299065), ('String', 0.20192307692307693), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('o', 0.18946894689468946), (',', 0.9929411764705882), ('Transcoder', 0.967816091954023), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Map', 0.06587383660806619), ('<', 1.0), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('readArgFile', 0.00027464982147761604), ('(', 1.0), ('ClassLoader', 0.5), ('cl', 1.0), ('=', 0.75), ('new', 0.42857142857142855), ('Intent', 0.003037028384534517), ('(', 1.0), ('act', 0.4375), (',', 1.0), ('EntryActivity', 0.11538461538461539), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('""', 0.12532133676092544), ('method', 0.0020531661984006916), ('""', 1.0), (')', 0.4782608695652174), (';', 0.6090406958288362), ('Assert', 0.006052707150588703), ('.', 1.0), ('assertTrue', 0.2306525037936267), ('(', 1.0), ('qualifiesAsHtml', 0.003324468085106383), ('(', 1.0), ('""', 0.8571428571428571), (',', 0.0028781730678493914), ('""', 0.38678420515809414), ('-f', 0.0004322455154527772), ('""', 1.0), (',', 1.0), ('-', 0.001384234299868862), ('1', 0.8714285714285714), (')', 0.588469184890656), (')', 0.2644194756554307), (';', 0.6920507070614618), ('original', 0.00040866818352514967), ('.', 0.9347826086956522), ('toXml', 0.14583333333333334), ('(', 1.0), ('childProperty', 0.2), (',', 1.0), ('key', 1.0), (',', 0.8113207547169812), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('}', 0.17806887715655306), ('SessionImpl', 0.0003546728143287817), ('s', 1.0), (':', 0.2857142857142857), ('authenticationProviders', 0.07142857142857142), ('.', 1.0), ('keySet', 1.0), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), ('.', 0.06104983753603954), ('format', 0.005875590752331077), ('(', 0.9970238095238095), ('""', 0.6512968299711815), ('windows path separator found', 0.00033028215532697935), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('true', 0.014480224767668035), ('""', 1.0), (')', 0.8197674418604651), (';', 0.6090406958288362), ('addFile', 0.0002650820649892863), ('(', 1.0), ('codeMirrorDir', 0.14285714285714285), ('+', 1.0), ('""', 1.0), ('\\""', 0.03827311696264544), (');', 0.07947019867549669), ('\\', 0.9230769230769231), ('n', 1.0), ('""', 0.959409594095941), (')', 0.32232105040237186), (';', 0.6090406958288362), ('statementExecutor', 0.00012149594645342288), ('.', 1.0), ('getInstance', 0.140625), ('(', 1.0), ('mAct', 0.029197080291970802), (',', 1.0), ('filteredEntries', 0.1111111111111111), ('.', 1.0), ('elementAt', 1.0), ('(', 1.0), ('i', 0.35294117647058826), (')', 0.5278810408921933), (',', 0.06293706293706294), ('cal', 0.00036310820624546115), ('.', 0.9347826086956522), ('get', 0.16393442622950818), ('(', 1.0), ('0', 0.14486830154405086), (',', 0.4376750700280112), ('1', 0.0580539656582175), (')', 0.49184149184149184), ('{', 0.051685393258426963), ('return', 0.14763176754185942), ('false', 0.04732879168160631), (';', 1.0), ('}', 0.5553319919517102), ('catch', 0.058698350771413374), ('(', 1.0), ('IOException', 0.1731266149870801), ('e', 0.7792207792207793), (')', 0.9841269841269841), (';', 0.34545454545454546), ('runner', 0.0010051028297510438), ('.', 0.9292929292929293), ('handler', 0.02631578947368421), ('.', 0.6875), ('requestingStaticFile', 0.013888888888888888), ('(', 1.0), ('request', 0.5882352941176471), (')', 0.5072639225181598), ('throws', 0.09476876421531463), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('ServerSocket', 0.006374501992031873), ('serverSocket', 0.16666666666666666), ('=', 0.8), ('null', 0.125), ('|', 0.08193908193908193), ('|', 1.0), ('firstCell', 0.007984031936127744), ('.', 1.0), ('equalsIgnoreCase', 0.7073170731707317), ('(', 1.0), ('Descriptor', 0.01904761904761905), ('descriptor', 0.7446808510638298), (',', 0.22988505747126436), ('List', 0.14), ('.', 0.07801418439716312), ('class', 0.98), (')', 0.5668416801292407), (';', 0.683291770573566), ('}', 0.17806887715655306), ('interface', 0.009576165986877105), ('Create2Callback', 0.1111111111111111), ('extends', 1.0), ('AsyncCallback', 1.0), ('{', 1.0), ('public', 0.8059701492537313), ('void', 0.6027397260273972), ('canTranslateAnnotatedMethod', 0.0005417118093174431), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('void', 0.04505290596213744), ('shutdown', 0.08827940861367045), ('(', 1.0), ('long', 0.36135265700483093), ('ttlMillis', 0.01806322127446061), (')', 1.0), (';', 0.8611111111111112), ('public', 0.04915063288343016), ('int', 0.20082774931020891), ('getTick', 0.010441767068273093), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('return', 0.02244361483575957), ('peer', 0.002472187886279357), (';', 0.8571428571428571), ('}', 0.8333333333333334), ('return', 0.1317609505231424), ('output', 0.002205071664829107), (';', 0.7222222222222222), (')', 'Paren balancing'), (')', 'Paren balancing')]","Future < CASResponse > asyncCAS ( String key , Object val ) ; group . add ( body ) ; assertTrue ( outputs . add ( Interceptor . class ) ; List < String > classpath = new QuorumServer ( 0 , 0 , ofbOutV , 0 , 0 , stat . getNumChildren ( ) ; long decr ( String s ) { List < String , T o , Transcoder < T > Map < String > readArgFile ( ClassLoader cl = new Intent ( act , EntryActivity . class , "" method "" ) ; Assert . assertTrue ( qualifiesAsHtml ( "" , "" -f "" , - 1 ) ) ; original . toXml ( childProperty , key , Transcoder < T > tc ) ; } SessionImpl s : authenticationProviders . keySet ( ) ) . format ( "" windows path separator found "" , "" true "" ) ; addFile ( codeMirrorDir + "" \"" ); \ n "" ) ; statementExecutor . getInstance ( mAct , filteredEntries . elementAt ( i ) , cal . get ( 0 , 1 ) { return false ; } catch ( IOException e ) ; runner . handler . requestingStaticFile ( request ) throws IOException { ServerSocket serverSocket = null | | firstCell . equalsIgnoreCase ( Descriptor descriptor , List . class ) ; } interface Create2Callback extends AsyncCallback { public void canTranslateAnnotatedMethod ( ) ; void shutdown ( long ttlMillis ) ; public int getTick ( ) ) ; return peer ; } return output ; ) )"
3,"['public', 'void']","[('setConnectionDropIncrease', 0.003637207862559975), ('(', 1.0), ('double', 1.0), ('val', 0.8662613981762918), (')', 1.0), (';', 0.969309462915601), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('nsa', 0.0011140819964349377), ('[', 1.0), ('0', 0.4), (']', 1.0), ('.', 0.10820895522388059), ('class', 0.15300546448087432), (')', 0.5668416801292407), (',', 0.04132525828286427), ('surrounder', 0.00036310820624546115)]","public void setConnectionDropIncrease ( double val ) ; assertEquals ( nsa [ 0 ] . class ) , surrounder"
4,"['public', 'void']","[('testCASOperationCloning', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('request', 0.007267666615122932), ('.', 0.8663663663663663), ('getResource', 0.09725490196078432), ('(', 1.0), (')', 0.8095238095238095), (';', 0.4777126381547333), ('earlyTerminationThread', 4.418034416488104e-05), ('=', 0.5), ('new', 1.0), ('NullSummarySet', 0.00011680878402055835)]",public void testCASOperationCloning ( ) ; request . getResource ( ) ; earlyTerminationThread = new NullSummarySet
5,"['public', 'void']","[('flush', 0.0002321622039931899), ('(', 1.0), (')', 0.5180288461538461), (';', 0.4777126381547333), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('<TargetPage.SubTarget', 0.000283098990280268), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('final', 0.007223486270958051), ('HttpServletRequest', 0.011180124223602485), ('request', 0.7142857142857143), (',', 0.3958333333333333), ('pageHistory', 0.0029498525073746312), ('.', 0.8846153846153846), ('size', 0.22580645161290322), ('(', 0.985838779956427), (')', 1.0), (',', 0.04123017779913503), ('content', 0.003812636165577342), (',', 0.007211538461538462), ('""', 0.1016949152542373), ('size', 0.0006483682731791658), ('""', 1.0), (',', 0.35714285714285715), ('output', 0.0016027976103744719), (',', 0.20512820512820512), ('outputOffset', 0.18181818181818182), (',', 0.6666666666666666), ('engineGetOutputSize', 0.14285714285714285), ('(', 1.0), ('inputLen', 0.7692307692307693), (')', 0.7692307692307693), (';', 0.43478260869565216), ('sent', 1.104508604122026e-05), ('+', 1.0), ('+', 1.0), (';', 0.14833501513622604), ('if', 0.12318840579710146), ('(', 1.0), ('left', 0.0002090738030524775), (')', 0.6666666666666666), (';', 1.0), ('CASValue', 0.0018887097130486647), ('<', 1.0), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('getBulk', 0.23615160349854228), ('(', 1.0), ('Transcoder', 0.21802773497688752), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('Future', 0.03465947999734918), ('<', 1.0), ('CASValue', 0.10792580101180438), ('<', 0.993127147766323), ('T', 0.49916943521594687), ('>', 0.9951795613400819), ('controller', 0.012616339193381593)]","public void flush ( ) ; assertSubString ( "" <TargetPage.SubTarget "" ) ; final HttpServletRequest request , pageHistory . size ( ) , content , "" size "" , output , outputOffset , engineGetOutputSize ( inputLen ) ; sent + + ; if ( left ) ; CASValue < Object > getBulk ( Transcoder < T > tc ) ; Future < CASValue < T > controller"
6,"['public', 'void']","[('testConnectWithoutSSLToNonStrictServer', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('SecurityException', 0.015980420385833572), (',', 0.9054054054054054), ('NoSuchMethodException', 0.9261083743842364), ('{', 0.9174311926605505), ('DefaultMethodLookupBuilder', 0.1485148514851485), ('builder', 1.0), ('=', 1.0), ('new', 0.8695652173913043), ('ObjectMapper', 0.0002336175680411167), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('4', 0.00267379679144385), (',', 0.5094339622641509), ('1.0', 0.03125), (')', 1.0), ('}', 'Bracket balancing')]","public void testConnectWithoutSSLToNonStrictServer ( ) throws SecurityException , NoSuchMethodException { DefaultMethodLookupBuilder builder = new ObjectMapper ( ) ; assertEquals ( 4 , 1.0 ) )"
7,"['public', 'void']","[('onlySelectedPageAndChildrenAreSearched', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('void', 0.04505290596213744), ('readFromBuffer', 0.007285193914720377), ('(', 1.0), ('ByteBuffer', 0.75), (')', 'Paren balancing')]",public void onlySelectedPageAndChildrenAreSearched ( ) ; void readFromBuffer ( ByteBuffer )
8,"['public', 'void']","[('register', 0.0022442346386008357), ('(', 1.0), ('ViewsPropertiesPageResult', 0.0022522522522522522), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('Assert', 0.006052707150588703), ('.', 1.0), ('assertNull', 0.021244309559939303), ('(', 1.0), ('WidgetBuilder', 0.01680672268907563), ('.', 1.0), ('htmlWidgetBuilder', 0.8333333333333334), ('=', 0.13333333333333333), ('htmlWidgetBuilder', 0.3333333333333333), (';', 1.0), ('WidgetBuilder', 0.5), ('referenceWidgetBuilder', 0.42857142857142855), ('=', 1.0), ('new', 1.0), ('WikiPagePath', 0.0021025581123700504), ('(', 1.0), ('test', 0.38636363636363635), ('.', 0.3181818181818182), ('getHtml', 0.025), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Assert', 0.006052707150588703), ('.', 1.0), ('assertTrue', 0.2306525037936267), ('(', 1.0), ('result', 0.012632978723404254), (',', 0.3363914373088685), ('""', 0.3712121212121212), ('name', 0.0016209206829479145), ('""', 1.0), (',', 0.6224489795918368), ('PathParser', 0.0030598863470785373), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('""', 0.6748466257668712), ('a', 0.005756346135698783), ('""', 1.0), (',', 0.527027027027027), ('HttpMethod', 0.014133760746029433), ('.', 0.8608058608058609), ('POST', 0.6631205673758865), (',', 0.7379679144385026), ('request', 0.7246376811594203), (')', 0.7686472819216182), ('.', 0.1865049279757392), ('of', 0.004726018648614127), ('(', 1.0), ('Class', 0.21428571428571427), ('<', 0.919921875), ('?', 0.6746987951807228), ('>', 0.5993756503642039), ('list', 0.005805515239477504), (')', 0.4552238805970149), ('throws', 0.330188679245283), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('expectedMax', 0.00027839643652561246), ('=', 1.0), ('Arrays', 1.0), ('.', 1.0), ('asList', 0.8108108108108109), ('(', 1.0), ('parts', 0.0019455252918287938), ('[', 0.7727272727272727), (']', 0.25), ('data', 0.07817157999337529), (')', 0.1652542372881356), (';', 0.6805970149253732), ('long', 0.030583843248138905), ('getNumAliveConnections', 0.02143652561247216), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('void', 0.04505290596213744), ('setRequestThrottleStallTime', 0.012427683736875937), ('(', 1.0), ('int', 1.0), ('syncLimit', 0.004882251579551982), ('=', 0.22727272727272727), ('SYNC_LIMIT', 0.3333333333333333), (';', 1.0), ('peer', 1.0), ('.', 1.0), ('setSyncLimit', 0.019801980198019802), ('(', 1.0), ('int', 0.7727272727272727), (')', 0.015221137277426766), ('(', 0.5283018867924528), ('i', 0.02830188679245283), (')', 0.5278810408921933), (';', 0.4370629370629371), ('boolean', 0.02482935342066315), ('touchSession', 0.0103359173126615), ('(', 1.0), ('long', 0.8222222222222222), ('delay', 0.14701455092824886), (')', 0.9898648648648649), (';', 0.9894894894894894), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncIncr', 0.445859872611465), ('(', 1.0), ('String', 0.9979633401221996), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('by', 0.2550628044091259), (',', 0.5537688442211055), ('long', 0.9741735537190083), ('by', 0.2550628044091259), (',', 0.5537688442211055), ('long', 0.9741735537190083), ('by', 0.2550628044091259), (',', 0.5537688442211055), ('long', 0.9741735537190083), ('def', 0.48320943347859524), (')', 0.5513771186440678), ('throws', 0.40810556079170596), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('quorumUtil', 0.00015782828282828284), ('.', 1.0), ('getPeer', 0.3333333333333333), ('(', 1.0), ('2', 0.3225806451612903), (')', 0.5414847161572053), (';', 0.4577114427860697), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('flush', 0.2646428571428571), ('(', 1.0), ('int', 0.4567307692307692), ('val', 0.0913268236645606), (')', 0.9968553459119497), (';', 0.969309462915601), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('arguments', 0.009922822491730982), (';', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void register ( ViewsPropertiesPageResult . class ) ; Assert . assertNull ( WidgetBuilder . htmlWidgetBuilder = htmlWidgetBuilder ; WidgetBuilder referenceWidgetBuilder = new WikiPagePath ( test . getHtml ( ) ; Assert . assertTrue ( result , "" name "" , PathParser . parse ( "" a "" , HttpMethod . POST , request ) . of ( Class < ? > list ) throws OperationTimeoutException ; long expectedMax = Arrays . asList ( parts [ ] data ) ; long getNumAliveConnections ( ) ) ; void setRequestThrottleStallTime ( int syncLimit = SYNC_LIMIT ; peer . setSyncLimit ( int ) ( i ) ; boolean touchSession ( long delay ) ; Future < Long > asyncIncr ( String key , int by , long by , long by , long by , long def ) throws Exception { quorumUtil . getPeer ( 2 ) ; Future < Boolean > flush ( int val ) ; } return arguments ; ) ) )"
9,"['public', 'CommandRunningFitClient']","[('build', 1.0), ('(', 1.0), (')', 0.9144736842105263), (';', 0.4777126381547333), ('int', 0.01989219996023769), ('getMinClientResponseSize', 0.04061416542842992), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('setMaxBatchSize', 0.004798018882525925), ('(', 1.0), ('int', 1.0), ('index', 0.002871912693854107), (')', 0.5306122448979592), ('{', 0.28125), ('CommandLine', 0.0007166590657371816), ('commandLine', 0.8666666666666667), ('=', 1.0), ('new', 0.8235294117647058), ('HashMap', 0.02044153720359771), ('<', 0.9579439252336449), ('Integer', 0.025), ('>', 0.851063829787234), ('>', 0.024), ('it', 0.0006091989034419738), ('=', 1.0), ('rpatterns', 0.05), ('.', 1.0), ('iterator', 1.0), ('(', 1.0), (')', 0.9658119658119658), (';', 0.4777126381547333), ('for', 0.006207338355165787), ('(', 1.0), ('File', 0.025923016496465043), (':', 0.0058997050147492625), (':', 1.0), ('add', 0.11594202898550725), (')', 0.375), (';', 1.0), ('}', 0.17806887715655306), ('if', 0.08051072885263344), ('(', 1.0), ('object', 0.0014635166213673428), (')', 0.5869565217391305), ('throws', 0.06756756756756757), ('SyntaxError', 0.004319032536711776), ('{', 0.55), ('Map', 0.09090909090909091), ('<', 0.9426229508196722), ('WikiPageDescriptor', 0.0012620950778291964), (',', 0.875), ('LinkedList', 1.0), ('<', 1.0), ('String', 0.13333333333333333), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('>', 0.49548387096774194), ('>', 0.32798833819241985), ('asyncGetAndTouch', 0.0487359122753579), ('(', 1.0), ('final', 0.9937888198757764), ('String', 0.4845878136200717), ('configs', 0.01173512154233026), ('=', 1.0), ('""', 1.0), (""Here is some text with '''bold''' and ''italics''."", 0.002559726962457338), ('""', 1.0), (';', 1.0), ('case', 0.10515873015873016), ('LC', 0.0034129692832764505), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public CommandRunningFitClient build ( ) ; int getMinClientResponseSize ( ) ; public void setMaxBatchSize ( int index ) { CommandLine commandLine = new HashMap < Integer > > it = rpatterns . iterator ( ) ; for ( File : : add ) ; } if ( object ) throws SyntaxError { Map < WikiPageDescriptor , LinkedList < String , Object > > asyncGetAndTouch ( final String configs = "" Here is some text with '''bold''' and ''italics''. "" ; case LC ) )"
10,"['public', 'InputStream']","[('getContent', 0.2727272727272727), ('(', 1.0), (')', 0.9714795008912656), ('!', 0.001268620855358001), ('=', 1.0), ('null', 0.7410909090909091), (';', 0.19305019305019305), ('try', 0.14727540500736377), ('{', 0.9706896551724138), ('Properties', 0.0017543859649122807), ('properties', 0.5294117647058824), ('=', 0.7), ('}', 'Bracket balancing')]",public InputStream getContent ( ) ! = null ; try { Properties properties = )
11,"['private', 'static']","[('void', 0.25311203319502074), ('Launch', 0.03694581280788178), ('(', 1.0), ('GroupAddEntryActivity', 0.038461538461538464), ('.', 1.0), ('this', 1.0), ('.', 0.5223880597014925), ('webRequest', 0.012834224598930482), ('=', 0.75), ('mockery', 0.17543859649122806), ('.', 1.0), ('mock', 0.36538461538461536), ('(', 1.0), ('ResultsListener', 0.008648648648648649), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('int', 0.01989219996023769), ('getTimeoutExceptionThreshold', 0.020802377414561663), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('executeStatementAndVerifyResultIsVoid', 3.3135258123660786e-05), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('pool', 0.0007171029042667623), ('.', 1.0), ('putByte', 0.14285714285714285), ('(', 1.0), ('LONG', 1.0), (')', 1.0), ('.', 1.0), ('getWrong', 0.0044705581811214715), ('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('a', 0.0014524328249818446), ('.', 0.5882352941176471), ('getGroupId', 0.011235955056179775), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('for', 0.006207338355165787), ('(', 1.0), ('String', 0.1272584446190102), (')', 0.013265704252828716), ('with', 0.010752688172043012), ('(', 1.0), ('eq', 0.10714285714285714), ('(', 1.0), ('""', 0.42105263157894735), ('Versions', 0.0003774653203736907), ('""', 1.0), (')', 0.5), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","private static void Launch ( GroupAddEntryActivity . this . webRequest = mockery . mock ( ResultsListener . class ) ; int getTimeoutExceptionThreshold ( ) ; executeStatementAndVerifyResultIsVoid ( ) { return pool . putByte ( LONG ) . getWrong ( ) , a . getGroupId ( ) ; for ( String ) with ( eq ( "" Versions "" ) ) ) )"
12,"['@Test', 'public']","[('void', 1.0), ('processResult', 0.00959603776505185), ('(', 1.0), ('int', 0.9527027027027027), ('delay', 0.10913268236645605), (')', 0.9637305699481865), (';', 0.9894894894894894), ('String', 0.026430890896640084), ('html', 0.03223443223443224), ('=', 0.8), ('getActionsHtml', 0.04807692307692308), ('(', 1.0), ('pageName', 0.9090909090909091), (',', 0.31746031746031744), ('summary', 0.02912621359223301), ('.', 0.6046511627906976), ('getRight', 0.09333333333333334), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('syncProcessor', 0.00011045086041220261), ('.', 0.4), ('processRequest', 0.2), ('(', 1.0), ('Request', 0.5333333333333333), ('request', 0.6802721088435374), (',', 0.13653136531365315), ('response', 0.25663716814159293), ('.', 0.7636363636363637), ('getContent', 0.294478527607362), ('(', 1.0), (')', 0.9714795008912656), (';', 0.4777126381547333), ('long', 0.030583843248138905), (')', 'Paren balancing'), (')', 'Paren balancing')]","@Test public void processResult ( int delay ) ; String html = getActionsHtml ( pageName , summary . getRight ( ) ; syncProcessor . processRequest ( Request request , response . getContent ( ) ; long ) )"
13,"['public', 'void']","[('testBreadCrumbsWithPageType', 0.0003869370066553165), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncIncr', 0.445859872611465), ('(', 1.0), ('String', 0.9979633401221996), ('uri', 0.008427623878267655), (')', 0.5074626865671642), (';', 0.72), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncDecr', 0.4640582347588717), ('(', 1.0), ('String', 0.9883720930232558), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('outOff', 0.004400977995110024), (')', 1.0), ('throws', 0.5135135135135135), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('Data', 0.00015782828282828284), ('data1', 1.0), ('=', 1.0), ('page1', 0.5), ('.', 1.0), ('getChildPage', 0.02564102564102564), ('(', 1.0), ('RECENT_CHANGES', 0.022099447513812154), (')', 1.0), (';', 0.7777777777777778), ('}', 0.17806887715655306), ('ExecutionLog', 0.0003546728143287817), ('log', 1.0), ('=', 0.8), ('createExecutionLog', 0.07142857142857142), ('(', 1.0), ('String', 0.8), (')', 0.013265704252828716), ('deserialized', 0.005376344086021506), ('[', 1.0), ('0', 0.8163265306122449), (']', 1.0), ('=', 0.05970149253731343), ('new', 0.32266666666666666), ('MockRequest', 0.01763812638710431), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('.', 0.06539211861100273), ('.', 0.7353474320241692), ('.', 0.5), ('keys', 0.3872791519434629), (')', 0.997270245677889), (';', 0.6894065446478093), ('String', 0.026430890896640084), ('answer', 0.0062271062271062275), ('=', 0.9444444444444444), ('""', 0.10526315789473684), ('{', 0.023890784982935155), ('\\""', 0.6428571428571429), ('client', 0.2777777777777778), ('\\""', 1.0), (':{', 1.0), ('\\""', 1.0), ('name', 0.631578947368421), ('\\""', 1.0), ('style=', 0.08695652173913043), ('\\\\', 0.8), ('\\""', 1.0), ('class=', 0.10526315789473684), ('\\""', 0.6363636363636364), ('collapsable', 0.13513513513513514), ('\\""', 1.0), ('""', 1.0), (',', 0.5793103448275863), ('""', 0.38678420515809414), ('scriptTableActor', 0.0056191917008861034), ('""', 1.0), (',', 1.0), ('content', 0.02564476176599155), ('.', 0.04326923076923077), ('length', 0.17045454545454544), (',', 0.05568181818181818), ('is', 0.5555555555555556), ('(', 0.9956663055254604), ('true', 0.02064896755162242), (')', 0.76875), (';', 0.7053824362606232), ('this', 0.009366232962954782), ('.', 1.0), ('router', 0.02406417112299465), ('=', 0.7333333333333333), ('container', 0.075), ('.', 1.0), ('addComponent', 0.07011070110701106), ('(', 1.0), ('componentKey', 0.030303030303030304), (',', 1.0), ('componentImplementationOrInstance', 0.5), (',', 1.0), ('Parameter', 0.5), ('.', 1.0), ('.', 0.5), ('keys', 0.3872791519434629), (')', 0.997270245677889), (';', 0.6894065446478093), ('voteMap', 6.627051624732157e-05), ('=', 1.0), ('new', 1.0), ('GsonJSONSerialization', 0.001635322976287817), ('(', 1.0), ('response', 1.0), ('.', 0.22058823529411764), ('getContent', 0.294478527607362), ('(', 1.0), (')', 0.9714795008912656), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('result', 0.05512679162072767), (';', 0.8548387096774194), ('result', 0.06451612903225806), ('=', 0.23225806451612904), ('caller', 0.024830699774266364), ('.', 1.0), ('setVariable', 0.037037037037037035), ('(', 1.0), ('""', 0.5), ('ChildPageOne', 0.00018873266018684534), ('""', 1.0), (',', 0.5), ('""', 0.38678420515809414), ('Outstanding', 0.005403068943159715), ('""', 1.0), (')', 1.0), (',', 0.08405815503777538), ('false', 0.014524328249818447), (')', 0.5782312925170068), (';', 0.6931106471816284), ('SetupTeardownAndLibraryIncluder', 7.731560228854182e-05), ('.', 1.0), ('includeInto', 1.0), ('(', 1.0), ('testPage', 0.09090909090909091), (')', 0.43119266055045874), (';', 0.4594594594594595), ('page2', 5.522543020610131e-05), ('=', 0.8), ('pageBuilder', 0.2222222222222222), ('.', 1.0), ('addPage', 1.0), ('(', 1.0), ('root', 0.6751091703056769), (')', 0.22), (';', 0.5912596401028277), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('ensurePasses', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333)]","public void testBreadCrumbsWithPageType ( ) ; Future < Long > asyncIncr ( String uri ) ; Future < Long > asyncDecr ( String key , int outOff ) throws Exception { Data data1 = page1 . getChildPage ( RECENT_CHANGES ) ; } ExecutionLog log = createExecutionLog ( String ) deserialized [ 0 ] = new MockRequest ( ) ; long decr ( String . . . keys ) ; String answer = "" { \"" client \"" :{ \"" name \"" style= \\ \"" class= \"" collapsable \"" "" , "" scriptTableActor "" , content . length , is ( true ) ; this . router = container . addComponent ( componentKey , componentImplementationOrInstance , Parameter . . keys ) ; voteMap = new GsonJSONSerialization ( response . getContent ( ) ; } return result ; result = caller . setVariable ( "" ChildPageOne "" , "" Outstanding "" ) , false ) ; SetupTeardownAndLibraryIncluder . includeInto ( testPage ) ; page2 = pageBuilder . addPage ( root ) ; public void ensurePasses ( ) ;"
14,"['public', 'void']","[('setUp', 0.02832378888716917), ('(', 1.0), (')', 0.9781746031746031), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('onClick', 0.001547748026621266), ('(', 1.0), ('View', 0.8), ('view', 0.5476190476190477), ('=', 0.5306122448979592), ('client', 0.6875), ('.', 0.9789473684210527), ('start', 0.07589285714285714), ('(', 1.0), (')', 0.8641509433962264), (';', 0.4777126381547333), ('when', 0.005964346462258941), ('(', 1.0), ('request', 0.18234442836468887), (',', 0.18280871670702178), ('HttpServletResponse', 0.04129793510324484), ('.', 0.5), ('class', 0.7605633802816901), (')', 0.5668416801292407), (';', 0.683291770573566), ('qp', 0.00027612715103050655), ('=', 0.56), ('new', 0.9534883720930233), ('SafeResourceBundle', 0.0002336175680411167), ('(', 1.0), ('delegate', 0.5), (')', 0.52), (';', 0.625), ('mockery', 0.007444387991782456), ('.', 0.9985380116959064), ('resource', 0.0673076923076923), ('(', 0.7682119205298014), ('MyResource', 0.4015748031496063), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (')', 0.22087638047737798), (';', 0.6920507070614618), ('return', 0.02244361483575957), ('buffer', 0.006592501030078286), ('.', 1.0), ('toString', 0.25), ('(', 1.0), (')', 0.8720666161998486), ('.', 0.0554925516578568), ('contains', 0.006897432622301699), ('(', 1.0), ('""', 0.4502923976608187), ('class=', 0.001557044446541474), ('\\""', 0.9583333333333334), ('collapsable', 0.13513513513513514), ('\\""', 1.0), ('""', 1.0), (',', 0.5793103448275863), ('""', 0.38678420515809414), ('!define x {y}', 0.0008644910309055544), ('\\', 0.4), ('n!define z {${x}}', 0.16666666666666666), (')', 'Paren balancing')]","public void setUp ( ) ; public void onClick ( View view = client . start ( ) ; when ( request , HttpServletResponse . class ) ; qp = new SafeResourceBundle ( delegate ) ; mockery . resource ( MyResource . class ) ) ; return buffer . toString ( ) . contains ( "" class= \"" collapsable \"" "" , "" !define x {y} \ n!define z {${x}} )"
15,"['Operation', 'removeCurrentReadOp']","[('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('bytebuff', 1.104508604122026e-05), ('.', 1.0), ('put', 0.25), ('(', 1.0), ('""', 0.5487914055505819), ('asdf', 0.00018873266018684534), ('""', 1.0), (')', 0.2), (';', 0.6090406958288362), ('HashedBlockOutputStream', 2.209017208244052e-05), ('hashed', 0.5), ('=', 1.0), ('new', 1.0), ('LearnerInfo', 0.0007008527041233501), ('(', 1.0), ('1', 1.0), (',', 0.4359805510534846), ('0', 0.11529411764705882), (',', 0.5541706615532119), ('0', 0.285363859362224), (',', 0.5541706615532119), ('0', 0.285363859362224), (')', 0.3883029721955896), ('{', 0.1866977829638273), ('String', 0.03909049449475536), ('value', 0.02674230145867099), (',', 0.43730886850152906), ('long', 0.0412573673870334), ('def', 0.48320943347859524), (',', 0.4470338983050847), ('int', 0.9791183294663574), ('offset', 0.010105949470252649), ('=', 0.08695652173913043), ('new', 0.45), ('MultipleAddresses', 0.0009344702721644668), ('(', 1.0), ('addresses', 0.4444444444444444), ('.', 0.4166666666666667), ('parallelStream', 0.14285714285714285), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('printHex', 3.3135258123660786e-05), ('(', 1.0), ('""', 1.0), ('should match', 0.0021704255921487212), ('""', 1.0), (',', 1.0), ('password', 0.0004371266210112196), ('.', 0.13636363636363635), ('args', 0.2916666666666667), (')', 0.8513513513513513), ('.', 0.01744186046511628), ('execute', 0.002171413973687572), ('(', 1.0), ('List', 0.026041666666666668), ('<', 0.8803418803418803), ('Instruction', 0.021153846153846155), ('>', 0.9148936170212766), ('list', 0.022727272727272728), ('=', 0.26865671641791045), ('new', 0.3142857142857143), ('byte', 0.016002803410816495), ('[', 1.0), (']', 0.7630057803468208), ('out', 0.009937065253395164), (',', 0.9), ('outOff', 0.21428571428571427), (')', 0.8333333333333334), (':', 0.02702702702702703), ('contents', 0.010471204188481676), (';', 1.0), ('}', 1.0), ('return', 0.1317609505231424), ('new', 0.07386990077177508), ('JavaSlimFactory', 0.0034802784222737818), ('(', 1.0), ('timeout', 0.14285714285714285), ('=', 0.038461538461538464), ('true', 0.3333333333333333), (';', 0.991701244813278), ('LOG', 0.00909090909090909), ('.', 1.0), ('debug', 0.1408839779005525), ('(', 1.0), ('""', 0.9140271493212669), ('blah', 0.0009436633009342266), ('""', 1.0), (',', 0.1702127659574468), ('""', 0.38678420515809414), ('customOrder', 0.0001080613788631943), ('""', 1.0), (')', 1.0), (')', 0.23592152879182274), (';', 0.6920507070614618), ('fileSystem', 0.0002871722370717268), ('.', 1.0), ('makeFile', 0.6301369863013698), ('(', 1.0), ('""', 0.3333333333333333), ('RooT', 0.008634519203548173), ('""', 1.0), (')', 0.8995215311004785), (';', 0.6090406958288362), ('int', 0.01989219996023769), ('getSelectionOps', 0.016840019811788013), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('desc', 0.00018873266018684534), ('""', 1.0), (',', 0.5), ('Integer', 0.0037884307154305696), ('>', 0.23333333333333334), ('current', 0.008), ('=', 1.0), ('c', 0.023255813953488372), ('.', 0.625), ('evaluate', 0.044444444444444446), ('(', 1.0), (')', 0.8387096774193549), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('scriptTable', 0.015018315018315019), ('=', 1.0), ('dt', 0.5), ('.', 1.0), ('appendInstructions', 0.007518796992481203), ('(', 1.0), ('instructions', 0.47058823529411764), (')', 0.8636363636363636), ('{', 0.1323529411764706), ('if', 0.09225356700762265), ('(', 1.0), ('!', 0.1421701860756847), ('ScanString', 0.023936170212765957), ('.', 1.0), ('isWord', 0.7222222222222222), ('(', 1.0), ('name', 0.5384615384615384), (',', 0.2849604221635884), ('FileSystemPage', 0.004694835680751174), ('parent', 0.7142857142857143), (')', 0.8), (',', 0.08196721311475409), ('System', 0.005083514887436456), ('.', 1.0), ('exit', 0.05826271186440678), ('(', 1.0), ('2', 0.2), (',', 0.4410480349344978), ('0', 0.03546099290780142), (',', 0.5541706615532119), ('0', 0.285363859362224), (',', 0.5541706615532119), ('1000', 0.004905968928863451), (',', 0.5714285714285714), ('1000', 0.06896551724137931), (')', 0.4), ('.', 0.02197802197802198), ('getRequestURI', 0.0037041767786435047), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('request', 0.007267666615122932), ('.', 0.8663663663663663), ('addHeader', 0.012549019607843137), ('(', 1.0), ('String', 0.11764705882352941), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","Operation removeCurrentReadOp ( ) ; bytebuff . put ( "" asdf "" ) ; HashedBlockOutputStream hashed = new LearnerInfo ( 1 , 0 , 0 , 0 ) { String value , long def , int offset = new MultipleAddresses ( addresses . parallelStream ( ) ; printHex ( "" should match "" , password . args ) . execute ( List < Instruction > list = new byte [ ] out , outOff ) : contents ; } return new JavaSlimFactory ( timeout = true ; LOG . debug ( "" blah "" , "" customOrder "" ) ) ; fileSystem . makeFile ( "" RooT "" ) ; int getSelectionOps ( ) ; assertEquals ( "" desc "" , Integer > current = c . evaluate ( ) ; String scriptTable = dt . appendInstructions ( instructions ) { if ( ! ScanString . isWord ( name , FileSystemPage parent ) , System . exit ( 2 , 0 , 0 , 1000 , 1000 ) . getRequestURI ( ) ) ; request . addHeader ( String ) ) ) )"
16,"['public', 'void']","[('exceptionOccurred', 0.002553784243925089), ('(', 1.0), ('Throwable', 0.7857142857142857), ('e', 0.5806451612903226), (')', 0.9846153846153847), ('{', 0.5944055944055944), ('localVariables', 6.515082415792559e-05), ('.', 1.0), ('add', 1.0), ('(', 0.995049504950495), ('AjaxInterceptor', 0.003076923076923077), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('void', 0.04505290596213744), ('shutdown', 0.08827940861367045), ('(', 1.0), ('long', 0.36135265700483093), ('timeout', 0.388861013547416), (',', 0.9872122762148338), ('TimeUnit', 0.9625468164794008), ('unit', 0.897196261682243), (')', 1.0), (';', 0.9728682170542635), ('Future', 0.03465947999734918), ('<', 1.0), ('CASValue', 0.10792580101180438), ('<', 0.993127147766323), ('T', 0.49916943521594687), ('>', 0.9951795613400819), ('T', 0.0531540847983454), ('forwardTo', 0.05474452554744526), ('(', 1.0), ('T', 0.22857142857142856), ('controller', 0.519774011299435), (')', 1.0), (';', 0.9563318777292577), ('form', 0.0011265987762044667), ('.', 1.0), ('add', 0.822429906542056), ('(', 0.995049504950495), ('token', 0.0015384615384615385), (')', 0.4090909090909091), (';', 0.75), ('will', 0.006627051624732157), ('(', 1.0), ('returnValue', 0.972176759410802), ('(', 0.9983193277310924), ('new', 0.1077943615257048), ('InputStreamReader', 0.003780068728522337), ('(', 1.0), ('in', 0.15384615384615385), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void exceptionOccurred ( Throwable e ) { localVariables . add ( AjaxInterceptor . class ) ; void shutdown ( long timeout , TimeUnit unit ) ; Future < CASValue < T > T forwardTo ( T controller ) ; form . add ( token ) ; will ( returnValue ( new InputStreamReader ( in ) ) ) )"
17,"['boolean', 'getRequestStaleLatencyCheck']","[('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('request', 0.02559912854030501), (',', 0.13400758533501897), ('null', 0.07964601769911504), (',', 0.4018151815181518), ('""', 0.08392434988179669), ('sub test page', 0.0003241841365895829), ('""', 1.0)]","boolean getRequestStaleLatencyCheck ( ) , request , null , "" sub test page """
18,"['boolean', 'hasChildPage']","[('(', 1.0), ('""', 0.42028985507246375), ('PAGE_NAME', 0.00033028215532697935), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('boolean', 0.02482935342066315), ('waitForQueues', 0.16106804478897502), ('(', 1.0), ('long', 1.0), ('sessionId', 0.11590566984445559), (',', 0.47950819672131145), ('timeout', 0.024390243902439025), (')', 0.47058823529411764), ('{', 0.23809523809523808), ('String', 0.03909049449475536), ('packageName', 0.0008103727714748784), ('=', 0.5), ('row', 1.0), ('.', 0.8333333333333334), ('add', 0.26785714285714285), ('(', 0.995049504950495), ('""', 0.08884615384615385), ('world', 0.00023591582523355665), ('""', 1.0), (',', 0.375), ('""', 0.38678420515809414), ('p', 0.0003241841365895829), ('""', 1.0), (',', 0.6), ('name', 0.0017485064840448783), (')', 0.5181818181818182), (';', 0.5493150684931507), ('assertTrue', 0.013176787647175772), ('(', 1.0), ('Mouse', 0.0013297872340425532), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('}', 0.17806887715655306), ('ExecutionLog', 0.0003546728143287817), ('log', 1.0), ('=', 0.8), ('report', 0.07142857142857142), ('*', 0.3333333333333333), ('scale', 1.0), (';', 1.0), ('return', 0.5), ('new', 0.11330861145447053), ('Maybe', 0.10092807424593968), ('<', 1.0), ('Symbol', 0.3301282051282051), ('>', 1.0), ('(', 0.34965034965034963), ('new', 0.02954341987466428), ('PathAnnotationRules', 0.003780068728522337), ('(', 1.0), ('mockery', 1.0), ('.', 1.0), ('assertIsSatisfied', 0.2932692307692308), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('cache', 0.0010756543564001434), ('.', 0.8571428571428571), ('size', 0.171875), ('(', 0.985838779956427), (')', 1.0), (';', 0.4777126381547333), ('File', 0.0021648368640791713), ('version2', 0.05726872246696035), ('=', 1.0), ('new', 1.0), ('ArrayList', 0.041934353463380446), ('<', 0.9570405727923628), ('Object', 0.07916666666666666), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","boolean hasChildPage ( "" PAGE_NAME "" ) ; boolean waitForQueues ( long sessionId , timeout ) { String packageName = row . add ( "" world "" , "" p "" , name ) ; assertTrue ( Mouse . class ) ; } ExecutionLog log = report * scale ; return new Maybe < Symbol > ( new PathAnnotationRules ( mockery . assertIsSatisfied ( ) { return cache . size ( ) ; File version2 = new ArrayList < Object ) ) )"
19,"['public', 'boolean']","[('isTimedOutUnsent', 0.01201923076923077), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('when', 0.005964346462258941), ('(', 1.0), ('kill', 0.005788712011577424), ('.', 0.6666666666666666), ('getUri', 0.5), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (')', 'Paren balancing')]",public boolean isTimedOutUnsent ( ) ; when ( kill . getUri ( ) throws OperationTimeoutException )
20,"['private', 'void']","[('replaceException', 0.0015026296018031556), ('(', 1.0), (')', 'Paren balancing')]",private void replaceException ( )
21,"['public', 'void']","[('setUp', 0.02832378888716917), ('(', 1.0), (')', 0.9781746031746031), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('TestExecutionReport', 0.0014204545454545455), ('.', 0.23529411764705882), ('InstructionResult', 0.3157894736842105), ('instructionResult', 0.3333333333333333), ('=', 0.6666666666666666), ('new', 1.0), ('DefaultRouter', 0.0035042635206167503), ('(', 1.0), ('new', 0.9375), ('Expectations', 0.10893470790378007), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]",public void setUp ( ) throws Exception { TestExecutionReport . InstructionResult instructionResult = new DefaultRouter ( new Expectations ( ) { ) ) )
22,"['void', 'set']","[('(', 1.0), ('String', 0.4244604316546763), ('.', 0.06539211861100273), ('.', 0.7353474320241692), ('keys', 0.3872791519434629), (')', 0.997270245677889), ('throws', 0.3000554631170272), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('<', 0.21625951141369643), ('T', 1.0), ('>', 0.9951795613400819), ('BulkFuture', 0.051913133402275075), ('<', 1.0), ('Map', 1.0), ('<', 0.9933283914010378), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('ctx', 0.07774193548387097), (',', 0.5407407407407407), ('List', 0.23170731707317074), ('<', 0.875886524822695), ('View', 0.01201923076923077), ('>', 1.0), ('getViews', 0.1), ('(', 1.0), ('final', 1.0), ('String', 0.4845878136200717), ('key', 0.38055322715842416), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 'Paren balancing')]","void set ( String . . keys ) throws OperationTimeoutException ; < T > BulkFuture < Map < String , Object ctx , List < View > getViews ( final String key , int by )"
23,"['public', 'void']","[('setTickTime', 0.004178919671877418), ('(', 1.0), ('int', 0.9367088607594937), ('i', 0.1341183228029868), ('=', 0.9117647058823529), ('first', 0.0018832391713747645), (';', 0.8), ('while', 0.3333333333333333), ('(', 1.0), ('(', 0.1), ('HtmlTranslator', 0.0033149171270718232), (')', 1.0), ('translator', 0.8), (')', 0.75), ('.', 0.875), ('toString', 0.0404904840975859), ('(', 1.0), (')', 0.8720666161998486), (';', 0.4777126381547333), ('void', 0.04505290596213744), ('resetMaxLatency', 0.015856010284979644), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('long', 0.15648403626330312), ('getTxnLogElapsedSyncTime', 0.11036789297658862), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('WikiPage', 0.00888024917714109), ('childPage', 0.007616974972796518), ('=', 0.7083333333333334), ('context', 0.17391304347826086), ('.', 0.9058823529411765), ('getContextPath', 0.0037128712871287127), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141)]",public void setTickTime ( int i = first ; while ( ( HtmlTranslator ) translator ) . toString ( ) ; void resetMaxLatency ( ) ; public long getTxnLogElapsedSyncTime ( ) ) ; WikiPage childPage = context . getContextPath ( ) ; Future < Boolean
24,"['private', 'static']","[('String', 0.2157676348547718), ('convertLinesToWikiText', 0.0041841004184100415), ('(', 1.0), ('lines', 0.6), (')', 0.4), ('reportRecentChangeItem', 0.09090909090909091), ('(', 1.0), ('String', 0.3333333333333333), ('.', 0.06539211861100273), ('.', 0.7353474320241692), ('args', 0.020141342756183747), (')', 0.8513513513513513), ('{', 0.22093023255813954), ('LOG', 0.017134666753534433), ('.', 1.0), ('info', 0.5220994475138122), ('(', 0.9577777777777777), ('""', 0.9205298013245033), ('av', 0.000141549495140134), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('CASValue', 0.0018887097130486647), ('<', 1.0), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('>', 0.32798833819241985), ('asyncGetBulk', 0.4069448674992385), ('(', 0.999251497005988), ('String', 0.19746646795827125), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (')', 0.44536817102137766), ('throws', 0.24010554089709762), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('Future', 0.15338406087304765), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('flush', 0.2646428571428571), ('(', 1.0), ('int', 0.4567307692307692), ('i', 0.1341183228029868), ('=', 0.9117647058823529), ('0', 0.7551789077212806), (';', 0.6786355475763016), ('i', 0.47447073474470736), ('+', 0.4702517162471396), ('+', 0.8926315789473684), (')', 0.6942482341069627), ('{', 0.5647743813682679), ('if', 0.09225356700762265), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","private static String convertLinesToWikiText ( lines ) reportRecentChangeItem ( String . . args ) { LOG . info ( "" av "" ) ; CASValue < Object > > asyncGetBulk ( String key , int exp ) throws OperationTimeoutException ; Future < Boolean > flush ( int i = 0 ; i + + ) { if ) )"
25,"['int', 'getMaxSessionTimeout']","[('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('(', 0.01364877161055505), (')', 0.7018800358102059), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('hasAction', 0.0017927572606669057), ('(', 1.0), ('""', 0.7142857142857143), ('-debug', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('invokeResponderAndCheckSuccessStatus', 0.000254036978948066), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('thenReturn', 0.0818750798313961), ('(', 1.0), ('converters', 0.0109204368174727), ('.', 0.5735294117647058), ('existsFor', 0.11864406779661017), ('(', 1.0), ('Integer', 0.19047619047619047), ('.', 0.7777777777777778), ('class', 0.22108843537414966), (',', 0.31704361873990305), ('method', 0.04434447300771208), (')', 0.14220183486238533), (')', 0.3375796178343949), (';', 0.6920507070614618), ('BulkFuture', 0.0036227882215202458), ('<', 1.0), ('Map', 1.0), ('<', 0.9933283914010378), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('>', 0.17165613842351002), ('tableResults', 0.0021321961620469083), ('=', 0.1111111111111111), ('(', 1.0), ('SyncObject', 0.0009285051067780873), (')', 1.0), ('ctx', 1.0), (';', 0.4375), ('synchronized', 0.3333333333333333), ('(', 1.0), ('qa', 0.033783783783783786), ('.', 0.4), ('channel', 0.18181818181818182), ('.', 0.1875), ('socket', 0.125), (',', 0.2926829268292683), ('context', 0.25), (')', 0.22981366459627328), ('{', 0.2122905027932961), ('MockitoAnnotations', 0.0012378656590005864), ('.', 1.0), ('initMocks', 1.0), ('(', 1.0), ('this', 1.0), ('.', 0.2888146911519199), ('stopped', 0.00267379679144385), ('=', 1.0), ('false', 0.42857142857142855), (';', 0.9634146341463414), ('return', 0.056338028169014086), ('passFailReporter', 0.0016481252575195715), ('.', 1.0), ('fail', 0.75), ('(', 0.9761904761904762), ('""', 0.43352601156069365), (']', 0.0003774653203736907), ('""', 1.0), (')', 0.5), (';', 0.6090406958288362), ('return', 0.02244361483575957), ('tableTemplate', 0.0012360939431396785), (';', 1.0), ('}', 1.0), ('}', 0.2383401312289413), (')', 'Paren balancing')]","int getMaxSessionTimeout ( ) ; Future < Long > ( ) { return hasAction ( "" -debug "" ) ; invokeResponderAndCheckSuccessStatus ( ) . thenReturn ( converters . existsFor ( Integer . class , method ) ) ; BulkFuture < Map < String > > tableResults = ( SyncObject ) ctx ; synchronized ( qa . channel . socket , context ) { MockitoAnnotations . initMocks ( this . stopped = false ; return passFailReporter . fail ( "" ] "" ) ; return tableTemplate ; } } )"
26,"['public', 'void']","[('testStarted', 0.0023990094412629625), ('(', 1.0), ('TestPage', 0.2625), ('testPage', 0.3310344827586207), (')', 0.359375), (';', 0.4594594594594595), ('Object', 0.0023526033267799156), ('[', 0.12972972972972974), (']', 0.9389830508474576), ('data', 0.07817157999337529), (',', 0.6822033898305084), ('off', 0.003968253968253968), (',', 0.9230769230769231), ('toRead', 0.03125)]","public void testStarted ( TestPage testPage ) ; Object [ ] data , off , toRead"
27,"['public', 'void']","[('set', 0.001006036217303823), ('(', 1.0), ('key', 0.017266187050359712), ('.', 0.05198776758409786), ('startsWith', 0.018867924528301886), ('(', 1.0), ('""', 0.7096774193548387), ('PageOne', 0.011654241766537699), ('""', 1.0), (')', 0.7220447284345048), (')', 0.23592152879182274), ('.', 0.06104983753603954), ('thenReturn', 0.0818750798313961), ('(', 1.0), ('Arrays', 0.015600624024960999), ('.', 1.0), ('asList', 0.8108108108108109), ('(', 1.0), ('""', 0.3560311284046693), ('decisionTable_id_4', 0.000566197980560536), ('""', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void set ( key . startsWith ( "" PageOne "" ) ) . thenReturn ( Arrays . asList ( "" decisionTable_id_4 "" ) )"
28,"['protected', 'Object']","[('convertWikiList', 0.1), ('(', 1.0), ('Converter', 1.0), ('.', 0.2), ('class', 0.25), (',', 0.31704361873990305), ('MethodInfo', 0.005141388174807198), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('deserialize', 2.209017208244052e-05), ('(', 1.0), ('archive', 0.02666666666666667), (')', 0.5454545454545454), (';', 0.5), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('text/xml', 0.00070774747570067), ('""', 1.0), (',', 0.8), ('VoidConverter', 0.0018213609208800816), ('.', 1.0), ('VOID_TAG', 0.9714285714285714), (')', 1.0), (',', 0.925), ('new', 0.10003631082062454)]","protected Object convertWikiList ( Converter . class , MethodInfo . class ) ; deserialize ( archive ) ; assertEquals ( "" text/xml "" , VoidConverter . VOID_TAG ) , new"
29,"['public', 'void']","[('init', 0.0022442346386008357), ('(', 1.0), (')', 0.3), (';', 0.4777126381547333), ('container', 0.001988115487419647), ('.', 0.9444444444444444), ('register', 0.46863468634686345), ('(', 1.0), ('AjaxInterceptor', 0.009009009009009009), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('DefaultMethodInfo', 0.0038560411311053984), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('method', 0.04434447300771208), (',', 0.7155963302752294), ('Object', 0.24338624338624337), ('>', 0.49548387096774194), ('getBulk', 0.23615160349854228), ('(', 1.0), ('String', 0.22342064714946072), ('.', 0.06539211861100273), ('class', 0.07492447129909366), (')', 0.5668416801292407), (';', 0.683291770573566), ('int', 0.01989219996023769), ('getMaxBatchSize', 0.04309063893016345), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('long', 0.21889338731443994), ('by', 0.2550628044091259), (')', 0.4462311557788945), (';', 0.7569158328428487), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('propertyKey', 0.00444791260241904), (')', 1.0), (';', 0.9491525423728814), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('value', 0.09483870967741935), (')', 0.9516616314199395), (';', 0.5893958076448829), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('?responder=viewVersion', 9.436633009342267e-05), (')', 'Paren balancing')]","public void init ( ) ; container . register ( AjaxInterceptor . class , DefaultMethodInfo . class , method , Object > getBulk ( String . class ) ; int getMaxBatchSize ( ) ; long decr ( String key , long by ) ; long decr ( String propertyKey ) ; Map < String , Object value ) ; assertSubString ( "" ?responder=viewVersion )"
30,"['public', 'void']","[('removeWatcher', 0.00015477480266212662), ('(', 1.0), ('path', 0.2894736842105263), (',', 0.49514563106796117), ('pageName', 0.0180623973727422), ('.', 0.05128205128205128), ('substring', 0.3333333333333333), ('(', 1.0), ('int', 0.005319148936170213), ('tickTime', 0.02125215393452039), (')', 0.8314606741573034), (';', 0.9625), ('assertFalse', 0.005390001988115487), ('(', 1.0), ('""', 0.13204225352112675), ('id', 0.002972539397942814), ('""', 1.0), (',', 0.7876106194690266), ('""', 0.38678420515809414), ('newname', 0.0001080613788631943), ('""', 1.0), (')', 1.0), (')', 0.23592152879182274), (';', 0.6920507070614618), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('new', 0.015597147950089126), ('Console', 0.003092783505154639), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('WikiPage', 0.00888024917714109), ('page1', 0.003264417845484222), ('=', 1.0), ('WikiPageUtil', 0.23076923076923078), ('.', 1.0), ('addPage', 0.8741573033707866), ('(', 1.0), ('root', 0.6751091703056769), (',', 0.7288888888888889), ('PathParser', 0.6455357142857143), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('""', 0.6748466257668712), ('c', 0.00141549495140134), ('""', 1.0), (',', 0.6590909090909091), ('""', 0.38678420515809414), ('3', 0.004646639291117354), ('""', 0.9879518072289156), (',', 0.5365853658536586), ('input', 0.0002914177473408131), ('.', 0.10638297872340426), ('length', 0.09090909090909091), (')', 0.1375), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void removeWatcher ( path , pageName . substring ( int tickTime ) ; assertFalse ( "" id "" , "" newname "" ) ) ; assertEquals ( new Console ( ) ; WikiPage page1 = WikiPageUtil . addPage ( root , PathParser . parse ( "" c "" , "" 3 "" , input . length ) ) )"
31,"['public', 'Object']","[('intercept', 0.29064039408866993), ('(', 1.0), ('stack', 0.46190476190476193), (')', 0.6114864864864865), ('.', 0.90625), ('getClasspaths', 0.0014050325712096053), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('SlimServer', 0.0007968127490039841), ('slimServer', 1.0), ('=', 1.0), ('createSlimServer', 1.0), ('(', 1.0), ('1000', 0.3333333333333333), (')', 0.803921568627451), (',', 0.21978021978021978), ('15.0', 0.004357298474945534), (',', 1.0), ('""', 1.0), ('""', 0.06040631078452561), ('}', 'Bracket balancing')]","public Object intercept ( stack ) . getClasspaths ( ) throws IOException { SlimServer slimServer = createSlimServer ( 1000 ) , 15.0 , "" "" )"
32,"['public', 'Double']","[('fromString', 0.2222222222222222), ('(', 1.0), ('String', 0.37735849056603776), ('key', 0.5850175575497464), (')', 0.14608612895550796), (';', 0.710124826629681), ('void', 0.04505290596213744), ('findWhereUsed', 0.0012856224555388902), ('(', 1.0), ('SourcePage', 0.4), ('page', 0.8484848484848485), (',', 0.7142857142857143), ('client', 0.011705685618729096), ('(', 0.03636363636363636), ('null', 0.47058823529411764), (',', 0.5461538461538461), ('is', 0.001182033096926714), ('(', 0.9956663055254604), ('equalTo', 0.3667649950835792), ('(', 1.0), ('found', 0.007177033492822967), (')', 0.4), (';', 0.4375), ('try', 0.003976230974839294), ('{', 0.9706896551724138), ('HostPort', 0.0008771929824561404), ('hpobj', 1.0), ('=', 0.6666666666666666), ('parseHostPortList', 0.25), ('(', 1.0), ('hp', 0.5), (')', 0.20588235294117646), ('throws', 0.42857142857142855), ('SecurityException', 0.015980420385833572), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public Double fromString ( String key ) ; void findWhereUsed ( SourcePage page , client ( null , is ( equalTo ( found ) ; try { HostPort hpobj = parseHostPortList ( hp ) throws SecurityException ) ) ) )"
33,"['public', 'void']","[('streamClosed', 7.738740133106331e-05), ('(', 1.0), ('OperationState', 1.0), ('state', 0.14285714285714285), (')', 1.0), (';', 0.35), ('public', 0.04915063288343016), ('long', 0.15648403626330312), ('getTxnLogElapsedSyncTime', 0.11036789297658862), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('else', 0.0018224391968013432), ('if', 0.5454545454545454), ('(', 1.0), ('executionLogs', 0.0002090738030524775), ('.', 1.0), ('size', 0.5), ('(', 0.985838779956427), (')', 1.0), (';', 0.4777126381547333), ('this', 0.009366232962954782), ('.', 1.0), ('cssClass', 0.0005347593582887701), ('=', 1.0), ('cssClass', 1.0), (';', 1.0), ('return', 1.0), ('path', 0.003708281829419036), (';', 0.35), ('try', 0.047619047619047616), ('{', 0.9706896551724138), ('slimClient', 0.0061403508771929825), ('.', 1.0), ('kill', 0.10638297872340426), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('CASValue', 0.10792580101180438), ('<', 0.993127147766323), ('T', 0.49916943521594687), ('>', 0.9951795613400819), ('>', 0.12719751809720786), ('asyncGetBulk', 0.4069448674992385), ('(', 0.999251497005988), ('Transcoder', 0.19225037257824143), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]",public void streamClosed ( OperationState state ) ; public long getTxnLogElapsedSyncTime ( ) ; else if ( executionLogs . size ( ) ; this . cssClass = cssClass ; return path ; try { slimClient . kill ( ) ; Future < CASValue < T > > asyncGetBulk ( Transcoder < T > Future < Boolean ) ) )
34,"['private', 'void']","[('append', 0.0007513148009015778), ('(', 1.0), ('summaryRow', 0.0007704160246533128), ('(', 1.0), ('s', 0.16666666666666666), (',', 0.058577405857740586), ('type', 0.07317073170731707), (')', 0.7058823529411765), (';', 0.4223300970873786), ('assertThat', 0.010227749674169962), ('(', 1.0), ('WikiPageUtil', 0.0026619343389529724), ('.', 1.0), ('addPage', 0.8741573033707866), ('(', 1.0), ('root', 0.6751091703056769), (')', 0.22), (';', 0.5912596401028277), ('verifyCreateFails', 0.0002319468068656255), ('(', 1.0), ('""', 0.9090909090909091), ('conf', 0.0004718316504671133), ('""', 1.0), (',', 0.9), ('""', 0.38678420515809414), (""value '12-5-2006' is not a valid DataType = 'date'"", 0.0001080613788631943), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), (')', 'Paren balancing'), (')', 'Paren balancing')]","private void append ( summaryRow ( s , type ) ; assertThat ( WikiPageUtil . addPage ( root ) ; verifyCreateFails ( "" conf "" , "" value '12-5-2006' is not a valid DataType = 'date' "" ) ; ) )"
35,"['public', 'void']","[('setUp', 0.02832378888716917), ('(', 1.0), (')', 0.9781746031746031), (';', 0.4777126381547333), ('table', 0.0006516600764319954), ('.', 0.9264705882352942), ('getCellContents', 0.17328519855595667), ('(', 1.0), ('1', 0.19767441860465115), (',', 0.4359805510534846), ('pageHistory', 0.015294117647058824), ('.', 0.8846153846153846), ('getFailures', 0.0967741935483871), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), ('.', 0.06104983753603954), ('getMethod', 0.01877634436071018), ('(', 1.0), (')', 0.5968468468468469), (',', 0.04123017779913503), ('tag', 0.0023602033405954975), ('.', 0.26666666666666666), ('html', 0.2608695652173913), ('(', 1.0), (')', 0.8951612903225806), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('LOG', 0.005681818181818182), ('.', 1.0), ('info', 0.5220994475138122), ('(', 0.9577777777777777), ('""', 0.9205298013245033), ('NoResolve2', 0.000283098990280268), ('""', 1.0), (')', 0.6666666666666666), (';', 0.6090406958288362), ('children', 7.731560228854182e-05), ('=', 0.3333333333333333), ('=', 0.1509433962264151), ('null', 0.518327605956472), ('}', 'Bracket balancing')]","public void setUp ( ) ; table . getCellContents ( 1 , pageHistory . getFailures ( ) ) . getMethod ( ) , tag . html ( ) throws Exception { LOG . info ( "" NoResolve2 "" ) ; children = = null )"
36,"['Object', 'next']","[('(', 1.0), (')', 'Paren balancing')]",Object next ( )
37,"['public', 'static']","[('void', 0.32053941908713696), ('staticMe', 0.06157635467980296), ('(', 1.0), (')', 'Paren balancing')]",public static void staticMe ( )
38,"['public', 'void']","[('dropDead', 0.0006964866119795697), ('(', 1.0), ('int', 0.8333333333333334), ('max', 0.05427914991384262), (')', 0.9692307692307692), (';', 0.9947368421052631), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('Removewatches cmd fails to remove child watches', 0.00023591582523355665), ('""', 1.0), (',', 0.8333333333333334), ('HttpMethod', 0.014133760746029433), ('.', 0.8608058608058609), ('POST', 0.6631205673758865), (')', 0.25668449197860965), ('.', 0.3541666666666667), ('next', 0.010473879167198876), (';', 0.05327868852459016), ('return', 0.041666666666666664), ('this', 0.05274000824062629), (';', 0.8324873096446701), ('if', 0.011627906976744186), ('(', 1.0), ('zk', 0.002299811833577253), (',', 0.40425531914893614), ('countCreated', 0.08333333333333333), (',', 0.5), ('10', 1.0), (',', 0.4268292682926829), ('g', 0.21428571428571427), ('.', 0.9787234042553191), ('roll', 0.3472222222222222), ('(', 1.0), ('1', 0.2), (',', 0.4359805510534846), ('1', 0.08588235294117647), (')', 0.49184149184149184), (';', 0.450187265917603), ('void', 0.04505290596213744), ('registerChannel', 0.010284979644311121), ('(', 1.0), ('SocketChannel', 1.0), ('to', 0.4857142857142857), (')', 1.0), (';', 0.9746192893401016), (')', 'Paren balancing')]","public void dropDead ( int max ) ; assertEquals ( "" Removewatches cmd fails to remove child watches "" , HttpMethod . POST ) . next ; return this ; if ( zk , countCreated , 10 , g . roll ( 1 , 1 ) ; void registerChannel ( SocketChannel to ) ; )"
39,"['public', 'void']","[('setupProcessors', 0.00015477480266212662), ('(', 1.0), ('0', 0.5833333333333334), (')', 0.5217086834733894), (';', 0.2893815635939323), ('List', 0.007079900152422188), ('<', 0.9456681350954479), ('?', 0.06153846153846154), ('>', 0.5993756503642039), ('>', 0.12772133526850507), ('getStats', 0.17270788912579957), ('(', 1.0), ('String', 0.4444444444444444), ('key', 0.5850175575497464), (')', 0.14608612895550796), (';', 0.710124826629681), ('final', 0.007223486270958051), ('CountDownLatch', 0.01987577639751553), ('finished', 0.03636363636363636), ('=', 1.0), ('true', 0.5), (';', 0.991701244813278), ('else', 0.006818181818181818), ('{', 0.11688311688311688), ('ZooTrace', 0.004016064257028112), ('.', 1.0), ('logTraceMessage', 0.46153846153846156), ('(', 1.0), ('LOG', 1.0), (',', 0.4411764705882353), ('ZooTrace', 0.9090909090909091), ('.', 1.0), ('SESSION_TRACE_MASK', 0.21978021978021978), (')', 0.13043478260869565), (';', 1.0), ('watch', 1.104508604122026e-05), ('(', 1.0), ('final', 0.5), ('BroadcastOpFactory', 0.08387096774193549), ('of', 1.0), (')', 0.5), (';', 0.9830508474576272), ('r1', 4.418034416488104e-05), ('.', 0.5), ('get', 0.16666666666666666), ('(', 1.0), ('String', 0.22434150772025432), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('row', 0.04482477587612062), (',', 0.6459854014598541), ('Result', 0.06683168316831684), ('response', 0.675), (')', 1.0), (';', 0.6324786324786325), ('mockery', 0.007444387991782456), ('.', 0.9985380116959064), ('mock', 0.36538461538461536), ('(', 1.0), ('HttpServletRequest', 0.0627027027027027), ('request', 0.19148936170212766), (',', 0.3958333333333333), ('mockery', 0.014749262536873156), ('.', 0.975609756097561), ('mock', 0.36538461538461536), ('(', 1.0), ('HttpServletRequest', 0.0627027027027027), ('.', 0.6702127659574468), ('class', 1.0), (',', 0.31704361873990305), ('method', 0.04434447300771208), ('.', 0.09174311926605505), ('invoke', 0.07216494845360824), ('(', 1.0), ('Object', 0.031746031746031744), ('o', 0.16666666666666666), (')', 0.9812734082397003), (';', 0.7678300455235205), ('boolean', 0.02482935342066315), ('touchSession', 0.0103359173126615), ('(', 1.0), ('id', 0.06666666666666667), (')', 0.1527777777777778), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void setupProcessors ( 0 ) ; List < ? > > getStats ( String key ) ; final CountDownLatch finished = true ; else { ZooTrace . logTraceMessage ( LOG , ZooTrace . SESSION_TRACE_MASK ) ; watch ( final BroadcastOpFactory of ) ; r1 . get ( String key , int row , Result response ) ; mockery . mock ( HttpServletRequest request , mockery . mock ( HttpServletRequest . class , method . invoke ( Object o ) ; boolean touchSession ( id ) ) ) )"
40,"['public', 'void']","[('buildsHelp', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('long', 0.21889338731443994), ('def', 0.48320943347859524), (')', 0.5513771186440678), (';', 0.5796418473138548), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('<h3>fit:fit.FitServer</h3>', 4.7183165046711336e-05), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('localhost', 0.0007564296520423601), ('""', 1.0), (',', 0.8076923076923077), ('""', 0.38678420515809414), ('SlimPage1Test', 0.0003241841365895829), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('assertTrue', 0.013176787647175772), ('(', 1.0), ('counter', 0.006648936170212766), ('.', 0.7368421052631579), ('set', 0.07692307692307693), ('(', 0.9844559585492227), ('String', 0.4244604316546763), ('firstLine', 7.803355442840422e-05), (')', 0.3333333333333333), (';', 0.5), ('Future', 0.03465947999734918), ('<', 1.0), ('CASValue', 0.10792580101180438), ('<', 0.993127147766323), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('getBulk', 0.23615160349854228), ('(', 1.0), ('String', 0.22342064714946072), ('filePath', 0.0007803355442840422), (':', 0.18181818181818182), ('filePaths', 1.0), (')', 1.0), ('throws', 0.7755102040816326), ('ParseException', 0.0052548229196659945), ('{', 0.9041095890410958), ('final', 0.08450704225352113), ('List', 0.02142857142857143), ('<', 0.9807692307692307), ('String', 0.20192307692307693), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('ctx', 0.07774193548387097), (',', 0.5407407407407407), ('new', 0.024390243902439025), ('Object', 0.14217557251908397), ('[', 0.8880597014925373), (']', 0.9389830508474576), ('{', 0.24677045379264656), ('""', 0.45100671140939597), ('ListWidgetTest', 0.0024330900243309003), ('""', 1.0), ('}', 1.0), (')', 0.6764044943820224), (',', 0.07369402985074627), ('is', 0.08623819898329703), ('(', 0.9956663055254604), ('equalTo', 0.3667649950835792), ('(', 1.0), ('""', 0.24162679425837322), ('id', 0.002972539397942814), ('""', 1.0), (')', 0.20353982300884957), (')', 0.23592152879182274), (';', 0.6920507070614618), ('int', 0.01989219996023769), ('getLargeRequestMaxBytes', 0.026250619118375434), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertTrue', 0.013176787647175772), ('(', 1.0), ('newProperties', 0.0013297872340425532), ('.', 1.0), ('stringPropertyNames', 0.16666666666666666), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('BulkFuture', 0.0036227882215202458), ('<', 1.0), ('Map', 1.0), ('<', 0.9933283914010378), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('keys', 0.42378467453996155), (',', 0.5499677627337202), ('Transcoder', 0.76), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('PageData', 0.0035344275331904837), ('data', 0.6677018633540373), ('=', 0.6331877729257642), ('page', 0.3076923076923077), ('.', 0.9814814814814815), ('setNavTemplate', 0.008695652173913044), ('(', 1.0), ('""', 1.0), ('1 right', 0.000283098990280268), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('Mismatches LearnerType!', 0.0003241841365895829), ('""', 1.0), (',', 0.7), ('0', 0.007868279178201952), (',', 0.5541706615532119), ('1', 0.0580539656582175), (')', 0.49184149184149184), (';', 0.450187265917603), ('NodeList', 0.00017672137665952417), ('matchingNodeList', 0.15789473684210525), ('=', 1.0), ('mock', 1.0), ('(', 1.0), ('LogicResult', 0.008648648648648649), ('.', 0.9411764705882353), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('doNotReplaceFiles', 1.104508604122026e-05), ('.', 1.0), ('add', 1.0), (',', 0.0049504950495049506), ('TEST_KEY', 0.15384615384615385), (',', 1.0), ('genericCallback', 0.08333333333333333), ('}', 'Bracket balancing')]","public void buildsHelp ( ) ; long incr ( String key , long def ) ; assertEquals ( "" <h3>fit:fit.FitServer</h3> "" , "" localhost "" , "" SlimPage1Test "" ) ; assertTrue ( counter . set ( String firstLine ) ; Future < CASValue < Object > getBulk ( String filePath : filePaths ) throws ParseException { final List < String , Object ctx , new Object [ ] { "" ListWidgetTest "" } ) , is ( equalTo ( "" id "" ) ) ; int getLargeRequestMaxBytes ( ) ; assertTrue ( newProperties . stringPropertyNames ( ) ; BulkFuture < Map < String > keys , Transcoder < T > tc ) ; PageData data = page . setNavTemplate ( "" 1 right "" , "" Mismatches LearnerType! "" , 0 , 1 ) ; NodeList matchingNodeList = mock ( LogicResult . class ) ; doNotReplaceFiles . add , TEST_KEY , genericCallback )"
41,"['public', 'void']","[('start', 0.004952793685188052), ('(', 1.0), (')', 0.8641509433962264), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('void', 0.42702702702702705), ('methodNotAllowed', 0.005999571459181487), ('(', 1.0), ('EnumSet', 1.0), ('<', 0.8648648648648649), ('HttpMethod', 1.0), ('>', 1.0), ('allowedMethods', 0.7017543859649122), (')', 0.825), (';', 0.9705882352941176), ('ViewResponseWithDocs', 0.00012149594645342288), ('response', 1.0), ('=', 1.0), ('(', 0.24493243243243243), (')', 'Paren balancing')]",public void start ( ) throws IOException ; void methodNotAllowed ( EnumSet < HttpMethod > allowedMethods ) ; ViewResponseWithDocs response = ( )
42,"['void', 'testOutputChunk']","[('(', 1.0), ('anyString', 0.014925373134328358), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('add', 0.027078809554221484), ('(', 0.995049504950495), ('Calendar', 0.008461538461538461), ('.', 0.9), ('HOUR_OF_DAY', 0.02127659574468085), (')', 1.0), (')', 1.0), (';', 0.6920507070614618), ('String', 0.026430890896640084), ('value', 0.007692307692307693), (',', 0.43730886850152906), ('Transcoder', 0.4302554027504912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('add', 0.0925), ('(', 0.9961389961389961), ('new', 0.11653846153846154), ('PwListAdapter', 0.0006872852233676976), ('(', 1.0), ('this', 1.0), ('.', 0.2888146911519199), ('i18nMessage', 0.0005347593582887701), ('=', 1.0), ('i18nMessageLocal', 1.0), (';', 1.0), ('return', 1.0), ('""', 0.009476720230737536), ('responder=edit&redirectToReferer=true&redirectAction=importAndView', 0.0027100271002710027), ('""', 1.0), (';', 1.0), ('String', 0.06547619047619048), ('format', 0.002197802197802198), ('(', 0.07142857142857142), ('""', 0.6512968299711815), ('Waiting for server up', 0.00023591582523355665), ('""', 1.0), (')', 0.5), (';', 0.6090406958288362), ('Assert', 0.006052707150588703), ('.', 1.0), ('assertEquals', 0.5963581183611533), ('(', 1.0), ('2', 0.027406417112299464), (')', 0.5414847161572053), (')', 'Paren balancing'), (')', 'Paren balancing')]","void testOutputChunk ( anyString ( ) . add ( Calendar . HOUR_OF_DAY ) ) ; String value , Transcoder < T > Future < Boolean > add ( new PwListAdapter ( this . i18nMessage = i18nMessageLocal ; return "" responder=edit&redirectToReferer=true&redirectAction=importAndView "" ; String format ( "" Waiting for server up "" ) ; Assert . assertEquals ( 2 ) ) )"
43,"['WikiPage', 'addChildPage']","[('(', 1.0), ('""', 0.5909090909090909), ('<a href=', 0.006983108426913277), ('\\""', 0.9770114942528736), ('/TstPg1.TstPg2.TstPg3.TstPg4', 0.03529411764705882), ('\\""', 1.0), ('>TstPg4</a>', 1.0), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('}]}', 0.0001080613788631943), ('""', 1.0), (')', 1.0), (',', 0.08405815503777538), ('""', 0.23656499636891795), ('G', 0.0006483682731791658), ('""', 1.0)]","WikiPage addChildPage ( "" <a href= \"" /TstPg1.TstPg2.TstPg3.TstPg4 \"" >TstPg4</a> "" , "" }]} "" ) , "" G """
44,"['private', 'String']","[('[', 0.029023746701846966), (']', 0.9407114624505929), ('includes', 0.000662471016893011)]",private String [ ] includes
45,"['public', 'synchronized']","[('boolean', 0.1728395061728395), ('receivedAnyDataFromClient', 0.05263157894736842), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('tree', 1.104508604122026e-05), ('.', 1.0), ('elementAt', 0.3333333333333333), ('(', 1.0), ('i', 0.35294117647058826), ('*', 0.0037174721189591076), ('1200', 1.0), (',', 1.0), ('10000', 1.0), (')', 0.5714285714285714), (';', 0.625), ('String', 0.026430890896640084), ('timeString', 0.0018315018315018315), ('=', 1.0), ('new', 1.0), ('Servlet3MultipartInterceptor', 0.00035042635206167504), ('(', 1.0), ('request', 1.0), ('.', 0.30024213075060535), ('callback', 0.000784313725490196), ('.', 1.0), ('receivedStatus', 0.3125), ('(', 1.0), ('String', 0.22988505747126436), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('def', 0.48320943347859524), (')', 0.5513771186440678), ('throws', 0.40810556079170596), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('oldAuthProvider', 0.00015782828282828284), ('=', 1.0), ('System', 1.0), ('.', 1.0), ('currentTimeMillis', 0.08050847457627118), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), ('.', 0.06104983753603954), ('format', 0.005875590752331077), ('(', 0.9970238095238095), ('""', 0.6512968299711815), ('hidden', 0.001557044446541474), ('""', 1.0), (',', 0.9411764705882353), ('""', 0.38678420515809414), ('testSlim', 0.0050788848065701315), ('""', 1.0), (',', 1.0), ('content', 0.02564476176599155), (')', 0.9495192307692307), (';', 0.808695652173913), ('request', 0.007267666615122932), ('.', 0.8663663663663663), ('addInput', 0.24392156862745099), ('(', 1.0), ('""', 0.8364779874213837), ('ParentPage', 0.000424648485420402), ('""', 1.0), (')', 0.4444444444444444), (';', 0.6090406958288362), ('assertNotEquals', 0.00015463120457708364), ('(', 1.0), ('aclId', 0.06666666666666667), (')', 0.6666666666666666), (';', 0.75), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('shouldCallMethodOnInstallLibraryWhenMethodIsNotFoundInAFixture_WithSystemUnderTestInFixture', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('boolean', 0.02482935342066315), ('shutdown', 0.16020671834625322), ('(', 1.0), (')', 0.5700483091787439), (';', 0.4777126381547333), ('WikiPage', 0.00888024917714109), ('findAncestorWithName', 0.03808487486398259), ('(', 1.0), ('String', 0.2972972972972973), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('tag', 0.07320319432120674), (')', 0.9582366589327146), ('throws', 0.806060606060606), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('if', 0.022727272727272728), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public synchronized boolean receivedAnyDataFromClient ( ) ; tree . elementAt ( i * 1200 , 10000 ) ; String timeString = new Servlet3MultipartInterceptor ( request . callback . receivedStatus ( String key , int by , long def ) throws Exception { oldAuthProvider = System . currentTimeMillis ( ) ) . format ( "" hidden "" , "" testSlim "" , content ) ; request . addInput ( "" ParentPage "" ) ; assertNotEquals ( aclId ) ; public void shouldCallMethodOnInstallLibraryWhenMethodIsNotFoundInAFixture_WithSystemUnderTestInFixture ( ) ; boolean shutdown ( ) ; WikiPage findAncestorWithName ( String key , Transcoder < T > tc , String tag ) throws Exception { if ) )"
46,"['public', 'void']","[('setup', 0.018650363720786257), ('(', 1.0), (')', 0.9959349593495935), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('page', 0.0031565656565656565), ('.', 0.6785714285714286), ('getData', 0.2673913043478261), ('(', 0.9850374064837906), (')', 0.9167616875712656), (';', 0.4777126381547333), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('[', 0.02838709677419355), (']', 0.9389830508474576), ('data', 0.07817157999337529), (',', 0.6822033898305084), ('Stat', 0.03968253968253968), ('stat', 0.9365079365079365), ('=', 0.2558139534883721), ('zk', 0.058823529411764705), ('.', 0.9629629629629629), ('exists', 0.12672811059907835), ('(', 0.9964912280701754), ('path', 0.046052631578947366), (')', 0.35194174757281554), (';', 0.5525672371638142), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void setup ( ) throws Exception { page . getData ( ) ; Map < String , Object [ ] data , Stat stat = zk . exists ( path ) ; long incr ( String key , ) )"
47,"['public', 'void']","[('parsesEMail', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('DataNode', 0.00013254103249464314), ('dataNode', 0.08333333333333333), ('=', 1.0), ('new', 1.0), ('ConnectRequest', 0.0004672351360822334), ('(', 1.0), (')', 0.75), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('byte', 0.060266292922214436), ('[', 0.9400630914826499), (']', 0.7630057803468208), ('files', 0.006624710168930109), (',', 0.15), ('HtmlTableListingBuilder', 0.18181818181818182), ('table', 1.0), (',', 0.25), ('tt', 0.047619047619047616), ('.', 1.0), ('getTable', 0.46153846153846156), ('(', 1.0), (')', 0.5482456140350878), (';', 0.4777126381547333), (')', 'Paren balancing')]","public void parsesEMail ( ) ; DataNode dataNode = new ConnectRequest ( ) ; long incr ( String key , int exp , byte [ ] files , HtmlTableListingBuilder table , tt . getTable ( ) ; )"
48,"['public', 'static']","[('String', 0.17116182572614108), ('send4LetterWord', 0.029288702928870293), ('(', 1.0), ('hpobj', 0.3333333333333333), ('.', 1.0), ('port', 0.5), ('=', 0.39473684210526316), ('Integer', 0.1125), ('.', 1.0), ('toHexString', 0.027210884353741496), ('(', 1.0), ('sessionId', 0.33043478260869563), (')', 0.7473684210526316), (';', 0.6055045871559633), ('client', 0.0017009432503479202), ('.', 0.8994082840236687), ('isSuccessfullyStarted', 0.015625), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('thenReturn', 0.0818750798313961), ('(', 1.0), ('new', 0.1606864274570983), ('ArrayList', 0.007560137457044674), ('<', 0.9570405727923628), ('Symbol', 0.004166666666666667), ('>', 1.0), ('moveNext', 0.006993006993006993), (')', 'Paren balancing'), (')', 'Paren balancing')]",public static String send4LetterWord ( hpobj . port = Integer . toHexString ( sessionId ) ; client . isSuccessfullyStarted ( ) . thenReturn ( new ArrayList < Symbol > moveNext ) )
49,"['private', 'void']","[('initializeWikiPageFactories', 0.0015026296018031556), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('startWithFactory', 0.00026060329663170237), ('(', 1.0), ('SlimFactory', 0.6363636363636364), ('slimFactory', 1.0), (',', 0.875), ('Options', 1.0), ('options', 1.0), ('=', 0.5909090909090909), ('parseCommandLine', 0.21428571428571427), ('(', 1.0), ('args', 0.375), (',', 0.10407239819004525), ('compilerAndDependencies', 0.009523809523809525), (',', 1.0), ('File', 1.0), ('originalFile', 0.24778761061946902), (')', 1.0), ('throws', 0.9642857142857143), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('WikiPage', 0.056818181818181816), ('suitePage', 0.035046728971962614), ('=', 0.8484848484848485), ('WikiPageUtil', 0.36666666666666664), ('.', 1.0), ('addPage', 0.8741573033707866), ('(', 1.0), ('root', 0.6751091703056769), (',', 0.7288888888888889), ('PathParser', 0.6455357142857143), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('resource', 0.03290574456218628), (')', 0.7811320754716982), (';', 0.6448598130841121), ('responder', 0.0021317016059555103), ('=', 0.48717948717948717), ('new', 0.8082901554404145), ('TestSummary', 0.004205116224740101), ('(', 1.0), ('0', 0.16216216216216217), (',', 0.4376750700280112), ('0', 0.285363859362224), (',', 0.5541706615532119), ('size', 0.0024529844644317253), (')', 0.9285714285714286), (';', 0.8066825775656324), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('10', 0.00267379679144385), (')', 0.6153846153846154), (')', 0.24358974358974358), ('{', 0.07189602306530593), ('Class', 0.003127239559580429), ('<', 0.8421052631578947), ('?', 0.6746987951807228), ('>', 0.5993756503642039), ('.', 0.023222060957910014), ('.', 1.0), ('.', 0.5), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","private void initializeWikiPageFactories ( ) { startWithFactory ( SlimFactory slimFactory , Options options = parseCommandLine ( args , compilerAndDependencies , File originalFile ) throws Exception { WikiPage suitePage = WikiPageUtil . addPage ( root , PathParser . parse ( resource ) ; responder = new TestSummary ( 0 , 0 , size ) ; assertEquals ( 10 ) ) { Class < ? > . . . ) ) ) )"
50,"['public', 'void']","[('errorOccured', 0.0032502708559046588), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), (';', 0.07471926288511374), ('void', 0.08300395256916997), ('fatal', 0.004499678594386115), ('(', 1.0), ('String', 0.25925925925925924), ('key', 0.5850175575497464), (')', 0.14608612895550796), (';', 0.710124826629681), ('boolean', 0.02482935342066315), ('waitForQueues', 0.16106804478897502), ('(', 1.0), ('long', 1.0), ('cas', 0.1254390366281987), (',', 0.7270194986072424), ('String', 0.9157509157509157), ('>', 0.22870452528837623), ('(', 0.043943971436418566), (')', 0.7018800358102059), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('WikiPage', 0.056818181818181816), ('pageWithoutSlimHostVariable', 0.007009345794392523), ('=', 1.0), ('WikiPageUtil', 1.0), ('.', 1.0), ('addPage', 0.8741573033707866), ('(', 1.0), ('""', 0.032314410480349345), ('/path1/path2/path3/path4', 0.000141549495140134), ('""', 1.0), ('+', 1.0), ('otherSeperator', 0.0009950248756218905), ('(', 1.0), ('separator', 1.0), (')', 0.8333333333333334), ('{', 0.14285714285714285), ('Collection', 0.0008469607140530327), ('<', 1.0), ('String', 0.7289890377588307), (',', 0.6009784436630484), ('String', 0.18341388959552277), ('tag', 0.07320319432120674), (')', 0.9582366589327146), (';', 0.12525252525252525), ('}', 0.17806887715655306), ('}', 0.2383401312289413), ('assertTrue', 0.0015151515151515152), ('(', 1.0), ('newSlot', 0.005319148936170213), ('.', 0.7692307692307693), ('size', 0.6), ('(', 0.985838779956427), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('int', 0.01989219996023769), ('writeSome', 0.02922238732045567), ('(', 1.0), (')', 1.0), (')', 'Paren balancing')]","public void errorOccured ( ) throws Exception ; void fatal ( String key ) ; boolean waitForQueues ( long cas , String > ( ) throws Exception { WikiPage pageWithoutSlimHostVariable = WikiPageUtil . addPage ( "" /path1/path2/path3/path4 "" + otherSeperator ( separator ) { Collection < String , String tag ) ; } } assertTrue ( newSlot . size ( ) ) ; int writeSome ( ) )"
51,"['public', 'void']","[('jump', 0.0006964866119795697), ('(', 1.0), ('long', 0.8666666666666667), ('delay', 0.14701455092824886), (')', 0.9898648648648649), (';', 0.9894894894894894), ('public', 0.04915063288343016), ('WikiPagePath', 0.00039416633819471815), ('getFullPath', 0.3333333333333333), ('(', 1.0), (')', 0.4583333333333333), ('{', 0.09111004324843826), ('{', 0.02364974916932699), ('exactly', 0.056022408963585436), ('(', 1.0), ('1', 0.28), (')', 0.5583468395461912), (';', 0.450187265917603), ('return', 0.02244361483575957), ('true', 0.02266172229089411), (';', 1.0), ('}', 0.5431818181818182), ('public', 0.0813974108884554), ('void', 0.7639198218262806), ('newTestStarted', 0.005494505494505495), ('(', 1.0), ('TestPage', 0.23728813559322035), ('page', 0.020689655172413793), (':', 0.16666666666666666), ('children', 0.16666666666666666), (')', 0.8666666666666667), (';', 0.4634146341463415), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('value', 0.014332965821389196), ('.', 0.3142857142857143), ('length', 0.10091743119266056), ('-', 0.03409090909090909), ('1', 0.5625), (';', 0.1848906560636183), ('joiningServers', 0.004032258064516129), ('.', 1.0), ('add', 1.0), ('(', 0.995049504950495), ('link', 0.002307692307692308), (')', 0.4117647058823529), (';', 0.5714285714285714), ('int', 0.01989219996023769), ('getConnectionTokenFillCount', 0.01634472511144131), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('String', 0.03909049449475536), ('[', 0.06158833063209076), (']', 0.9407114624505929), ('{', 0.24677045379264656), ('""', 0.45100671140939597), ('arg', 0.0705596107055961), ('""', 1.0), ('}', 0.90625), (',', 0.0696629213483146), ('""', 0.13333333333333333), ('""', 0.06040631078452561), ('+', 0.10652353426919901), ('childWikiText', 0.0002487562189054726), ('(', 1.0), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void jump ( long delay ) ; public WikiPagePath getFullPath ( ) { { exactly ( 1 ) ; return true ; } public void newTestStarted ( TestPage page : children ) ; } return value . length - 1 ; joiningServers . add ( link ) ; int getConnectionTokenFillCount ( ) { String [ ] { "" arg "" } , "" "" + childWikiText ( ) )"
52,"['public', 'void']","[('run', 0.014935768456895218), ('(', 1.0), (')', 0.8265682656826568), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('Map', 0.20824989987985582), ('<', 0.9966386554621849), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('String', 0.18341388959552277)]","public void run ( ) throws OperationTimeoutException ; Map < String , String"
53,"['private', 'HtmlPage']","[('makeHtml', 0.9090909090909091), ('(', 1.0), ('fullPathName', 0.20512820512820512), (',', 0.43333333333333335), ('page', 0.46153846153846156), (',', 0.3287671232876712), ('WikiPagePath', 0.048494983277591976), ('path', 0.4158415841584158), (',', 0.1308411214953271), ('String', 0.060755336617405585), ('>', 0.22870452528837623), ('keys', 0.42378467453996155), (',', 0.5499677627337202), ('Transcoder', 0.76), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), ('throws', 0.19533639143730888), ('CliParseException', 0.00014396775122372588), ('{', 1.0), ('Parser', 1.0), ('parser', 1.0), (',', 0.1), ('Symbol', 0.3), ('next', 0.017857142857142856), ('=', 0.7142857142857143), ('=', 0.125), ('null', 0.518327605956472), (';', 0.19305019305019305), ('}', 0.41384388807069217), ('mFilename', 0.0007093456286575634), ('=', 1.0), ('null', 0.5454545454545454), ('?', 0.05834405834405834), ('new', 0.125), ('Maybe', 0.4444444444444444), ('<', 1.0), ('String', 0.3685897435897436), (',', 0.6009784436630484), ('String', 0.18341388959552277), ('value', 0.01885536823425022), (',', 0.43730886850152906), ('cachedValue', 0.021611001964636542), ('.', 0.9166666666666666), ('value', 0.5769230769230769), ('=', 0.21875), ('=', 0.372), ('null', 0.518327605956472), ('|', 0.08193908193908193), ('|', 1.0), ('!', 0.12974051896207583), ('(', 0.26153846153846155), ('req', 0.0891089108910891), (')', 0.6086956521739131), (';', 0.7368421052631579), ('String', 0.026430890896640084), ('content', 0.04798534798534799), ('=', 0.5749128919860628), ('runCreateFileAndGetContent', 0.028846153846153848), ('(', 1.0), ('new', 1.0), ('CustomerForValidation', 0.0003436426116838488), ('(', 1.0), ('null', 0.8333333333333334), (',', 0.5461538461538461), ('null', 0.36997635933806144), (',', 0.4018151815181518), ('null', 0.36997635933806144), (',', 0.4018151815181518), ('keyName', 0.002364066193853428), (')', 1.0), (';', 1.0), ('ResponseParser', 0.00011045086041220261), ('.', 0.3), ('performHttpRequest', 1.0), ('(', 1.0), ('""', 0.42857142857142855), ('testSlim', 0.0011795791261677833), ('""', 1.0), (',', 1.0), ('Integer', 0.0037884307154305696), ('.', 0.5666666666666667), ('class', 0.22108843537414966), (')', 0.5668416801292407), (';', 0.683291770573566), ('void', 0.04505290596213744), ('visitAttribute', 0.00042854081851296334), ('(', 1.0), ('attr', 0.36363636363636365), (')', 0.8), ('{', 0.4), ('List', 0.011727148348426607), ('<', 0.9626168224299065), ('String', 0.20192307692307693), ('>', 0.39886867451460023), ('listSaslMechanisms', 0.05904971161768745), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('return', 0.02244361483575957), ('parser', 0.0012360939431396785), (';', 0.2), ('}', 1.0), ('if', 0.08051072885263344), ('(', 1.0), ('!', 0.1421701860756847), ('isWikiWord', 0.0013297872340425532), ('(', 1.0), ('""', 0.18181818181818182), ('+', 0.001557044446541474), ('""', 0.3485074626865672), ('minSessionTimeout=', 0.000612369871402327), ('""', 1.0), ('+', 1.0), ('""', 0.3485074626865672), ('got', 0.0009185548071034905), ('""', 1.0), ('+', 1.0), ('cxnString', 0.0002487562189054726), (')', 1.0), (';', 0.5), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), ('throws', 0.19533639143730888), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('String', 0.07275883838383838), ('hql', 0.0016207455429497568), ('=', 1.0), ('""', 1.0), ('/testOffer2', 0.002559726962457338), ('""', 1.0), (';', 1.0), ('builder', 0.0033068783068783067), ('.', 0.9855072463768116), ('addInput', 0.006666666666666667), ('(', 1.0), ('""', 0.8364779874213837), ('Create', 4.7183165046711336e-05), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('\\', 0.0027015344715798574), ('r', 0.11180124223602485), ('\\', 0.9495798319327731), ('n', 0.8539823008849557), ('""', 0.959409594095941), (';', 0.08979246082168572), ('}', 0.1302910052910053), ('return', 0.1317609505231424), ('false', 0.06174200661521499), (';', 1.0), ('return', 0.056338028169014086), ('response', 0.04903172641120725), (';', 0.9774436090225563), ('while', 0.007692307692307693), ('(', 1.0), ('t', 0.006060606060606061), (',', 0.6436781609195402), ('""', 0.43564356435643564), ('<span class=', 0.002593473092716663), ('\\""', 0.890625), ('meta', 0.40350877192982454), ('\\""', 1.0), ('>section1', 0.041666666666666664), ('""', 1.0), (',', 1.0), ('tableWithCell', 0.002404196415561708), ('(', 1.0), ('""', 0.8524590163934426), ('sum_key1_test', 0.00018873266018684534), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('void', 0.04505290596213744), ('resetFsyncThresholdExceedCount', 0.016070280694236126), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('allowing', 0.0018334842828425634), ('(', 1.0), ('second', 0.057692307692307696), (')', 0.8888888888888888), ('.', 0.5), ('putLong', 0.00012773023374632777), ('(', 1.0), ('entryId', 0.11428571428571428), (')', 0.8), (';', 0.7777777777777778), ('drawFactory', 3.3135258123660786e-05), ('.', 1.0), ('clear', 1.0), ('(', 1.0), (')', 0.9943502824858758), (')', 0.1723209995194618), ('.', 0.06104983753603954), ('set', 0.004215097713628816), ('(', 0.9844559585492227), ('String', 0.4244604316546763), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","private HtmlPage makeHtml ( fullPathName , page , WikiPagePath path , String > keys , Transcoder < T > tc ) throws CliParseException { Parser parser , Symbol next = = null ; } mFilename = null ? new Maybe < String , String value , cachedValue . value = = null | | ! ( req ) ; String content = runCreateFileAndGetContent ( new CustomerForValidation ( null , null , null , keyName ) ; ResponseParser . performHttpRequest ( "" testSlim "" , Integer . class ) ; void visitAttribute ( attr ) { List < String > listSaslMechanisms ( ) ; return parser ; } if ( ! isWikiWord ( "" + "" minSessionTimeout= "" + "" got "" + cxnString ) ; < T > tc ) throws Exception { String hql = "" /testOffer2 "" ; builder . addInput ( "" Create "" , "" \ r \ n "" ; } return false ; return response ; while ( t , "" <span class= \"" meta \"" >section1 "" , tableWithCell ( "" sum_key1_test "" ) ; void resetFsyncThresholdExceedCount ( ) ; allowing ( second ) . putLong ( entryId ) ; drawFactory . clear ( ) ) . set ( String key , int by , long ) ) )"
54,"['public', 'void']","[('testPagesForTestSystemAreSurroundedBySuiteSetupAndTeardown', 0.0010834236186348862), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('FileTxnLog', 4.418034416488104e-05), ('txnLog', 1.0), ('=', 1.0), ('new', 0.8461538461538461), ('CenterWidget', 0.0002336175680411167), ('(', 1.0), ('new', 1.0), ('ParseSpecification', 0.0006872852233676976), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('PageData', 0.0035344275331904837), ('data', 0.6677018633540373), ('=', 0.6331877729257642), ('=', 0.02564102564102564), ('null', 0.518327605956472), (')', 'Paren balancing')]",public void testPagesForTestSystemAreSurroundedBySuiteSetupAndTeardown ( ) ; FileTxnLog txnLog = new CenterWidget ( new ParseSpecification ( ) ; PageData data = = null )
55,"['public', 'void']","[('handleLine', 0.0008512614146416964), ('(', 1.0), ('String', 1.0), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('final', 0.056950067476383266), ('int', 0.3832468495181616), ('exp', 0.48699763593380613), (',', 0.5522565320665083), ('Object', 0.3482831114225648), ('ctx', 0.07774193548387097), (')', 0.45925925925925926), (';', 0.49261083743842365), ('void', 0.04505290596213744), ('removeChildPage', 0.004499678594386115), ('(', 1.0), ('String', 0.7833333333333333), ('key', 0.5850175575497464), (')', 'Paren balancing')]","public void handleLine ( String key , final int exp , Object ctx ) ; void removeChildPage ( String key )"
56,"['protected', 'String']","[('generateHtml', 0.014492753623188406), ('(', 1.0), ('pageData', 0.1111111111111111), ('.', 0.2786885245901639), ('getHtml', 0.09574468085106383), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('ParserTest', 0.0019328900572135458), ('.', 1.0), ('assertParses', 0.06792452830188679), ('(', 1.0), ('""', 0.9776119402985075), ('suiteTearDown', 0.00023591582523355665), ('""', 1.0), (',', 0.5555555555555556), ('""', 0.38678420515809414), ('-c', 0.0011886751674951373), (')', 'Paren balancing'), (')', 'Paren balancing')]","protected String generateHtml ( pageData . getHtml ( ) ; ParserTest . assertParses ( "" suiteTearDown "" , "" -c ) )"
57,"['public', 'void']","[('endRecord', 0.0016251354279523294), ('(', 1.0), ('Record', 0.6842105263157895), ('r', 0.8974358974358975), (',', 0.95), ('String', 0.8539325842696629), ('.', 0.15150842945874002), ('.', 0.7353474320241692), ('arguments', 0.0049469964664310955), (')', 1.0), (';', 0.4444444444444444), ('Ognl', 0.0002650820649892863), ('.', 1.0), ('createDefaultContext', 0.34782608695652173), ('(', 1.0), ('house', 0.25), (')', 0.21052631578947367), (';', 1.0), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('Cannot move', 0.0004718316504671133), ('""', 1.0), (',', 0.9), ('""', 0.38678420515809414), ('42.24', 0.0002161227577263886), ('""', 1.0), (',', 0.5), ('peer', 0.0005099810578464228), (')', 'Paren balancing')]","public void endRecord ( Record r , String . . arguments ) ; Ognl . createDefaultContext ( house ) ; assertSubString ( "" Cannot move "" , "" 42.24 "" , peer )"
58,"['public', 'Collection']","[('<', 0.9523809523809523), ('String', 0.7289890377588307), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('>', 0.6264626462646264), ('getAndTouch', 0.008893485005170631), ('(', 1.0), ('String', 1.0), (')', 0.013265704252828716), ('request', 0.27956989247311825), ('.', 0.9714285714285714), ('add', 0.010980392156862745), ('(', 0.995049504950495), (')', 0.009615384615384616), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('updateEntry', 7.738740133106331e-05), ('(', 1.0), ('entry', 0.5), (')', 0.36507936507936506), (';', 0.4246575342465753), ('public', 0.04915063288343016), ('int', 0.20082774931020891), ('currentScore', 0.0008032128514056225), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('ResourceNotFoundException', 0.0005038871292830406), (',', 1.0), ('MethodNotAllowedException', 0.7777777777777778), (',', 0.5714285714285714), ('IllegalStateException', 1.0), (';', 0.3333333333333333), ('public', 0.625), ('void', 0.38510051241623966), ('shouldReturnANullHandlerWhenThereIsNoEncodingInitParameter', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('givenParameterIsPresent', 4.418034416488104e-05), ('(', 1.0), ('String', 0.1111111111111111), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (')', 0.44536817102137766), (';', 0.7537379067722075), ('zk1', 0.000254036978948066), ('.', 0.9), ('create', 0.5576923076923077), ('(', 0.9378698224852071), ('""', 0.5300261096605744), ('check not', 0.000141549495140134), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('MockSocket', 4.418034416488104e-05), ('socket', 1.0)]","public Collection < String , T > getAndTouch ( String ) request . add ( ) ; public void updateEntry ( entry ) ; public int currentScore ( ) throws ResourceNotFoundException , MethodNotAllowedException , IllegalStateException ; public void shouldReturnANullHandlerWhenThereIsNoEncodingInitParameter ( ) ; givenParameterIsPresent ( String key , int exp ) ; zk1 . create ( "" check not "" ) ; MockSocket socket"
59,"['void', 'movedPermanentlyTo']","[('(', 1.0), ('String', 0.43820224719101125), ('key', 0.5850175575497464), (')', 0.14608612895550796), (';', 0.710124826629681), ('this', 0.009366232962954782), ('.', 1.0), ('context', 0.03689839572192513), ('=', 0.825), ('FitNesseUtil', 0.43727598566308246), ('.', 1.0), ('base', 0.08270676691729323), ('(', 0.16666666666666666), (')', 1.0), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('T', 0.03316469926925239)]",void movedPermanentlyTo ( String key ) ; this . context = FitNesseUtil . base ( ) ; Future < T
60,"['protected', 'void']","[('setUp', 0.07804878048780488), ('(', 1.0), (')', 0.9781746031746031), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('getTitle', 0.00035855145213338117), ('(', 1.0), (')', 1.0), ('}', 'Bracket balancing')]",protected void setUp ( ) { return getTitle ( ) )
61,"['public', 'String']","[('toString', 0.15497737556561086), ('(', 1.0), (')', 0.8720666161998486), ('{', 0.09111004324843826), ('mockery', 0.003974200273633461), ('.', 0.8888888888888888), ('mock', 0.36538461538461536), ('(', 1.0), ('HttpServletResponse', 0.046486486486486484), (')', 0.1506849315068493), ('res', 0.55), (';', 1.0), ('}', 0.23076923076923078), ('else', 0.0523142401134953), ('if', 0.22699386503067484), ('(', 1.0), ('type', 0.0071085093037842354), (')', 0.5611510791366906), ('{', 0.33737864077669905), ('PageData', 0.002410580493843247), ('data', 0.7525773195876289), ('=', 0.6331877729257642), ('page', 0.3076923076923077), ('.', 0.9814814814814815), ('getData', 0.2673913043478261), ('(', 0.9850374064837906), (')', 0.9167616875712656), (',', 0.04123017779913503), ('eq', 0.004720406681190995), ('(', 1.0), ('0', 0.15789473684210525), (',', 0.4376750700280112), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public String toString ( ) { mockery . mock ( HttpServletResponse ) res ; } else if ( type ) { PageData data = page . getData ( ) , eq ( 0 , ) )"
62,"['public', 'void']","[('testFormatWikiPageIdentity', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('+', 0.008822681403171552), ('""', 0.7475592747559274), ('\\', 0.0762400489895897), ('tenableSaveOnControlS(document.tableWizardForm, document.tableWizardForm)', 0.002070393374741201), ('""', 1.0), ('+', 1.0), ('i', 0.01791044776119403), (']', 0.016), (';', 0.13764044943820225), ('ByteBuffer', 0.02830188679245283), ('chunk', 0.014492753623188406), ('=', 1.0), ('ByteBuffer', 1.0), ('.', 1.0), ('allocate', 0.2558139534883721), ('(', 1.0), ('sizeLine', 0.09090909090909091), ('.', 1.0), ('getBytes', 0.5), ('(', 1.0), (')', 0.7661016949152543), (';', 0.4777126381547333), ('System', 0.0053347765579093865), ('.', 1.0), ('currentTimeMillis', 0.08050847457627118), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('learner', 0.0001988115487419647), ('.', 1.0), ('self', 0.6666666666666666), ('.', 0.7567567567567568), ('isMultiAddressEnabled', 0.007751937984496124), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('writeList', 7.731560228854182e-05), ('(', 1.0), ('Map', 0.15384615384615385), ('<', 0.6428571428571429), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('>', 0.17165613842351002), ('getStats', 0.17270788912579957), ('(', 1.0), (')', 0.5538461538461539), ('{', 0.09111004324843826), ('List', 0.011727148348426607), ('<', 0.9626168224299065), ('String', 0.20192307692307693), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('>', 0.6264626462646264), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('boolean', 0.02482935342066315), ('addObserver', 0.1227390180878553), ('(', 1.0), ('ConnectionObserver', 0.9829931972789115), ('obs', 0.9982788296041308), (')', 0.9982847341337907), (';', 0.9864406779661017), ('String', 0.026430890896640084), ('answer2', 0.002197802197802198), ('=', 1.0), ('br2', 1.0), ('.', 1.0), ('readLine', 1.0), ('(', 1.0), (')', 0.9863013698630136), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('header', 0.00035855145213338117), ('+', 0.5), ('line', 1.0), ('.', 0.125), ('replaceAll', 0.05714285714285714), ('(', 1.0), ('""', 0.9152542372881356), ('1.0+SNAPSHOT', 0.000566197980560536), ('""', 1.0), (',', 1.0), ('v', 0.00014570887367040654), (',', 0.4), ('String', 0.8838709677419355), ('key', 0.09316770186335403), (')', 0.14608612895550796), (';', 0.710124826629681), ('void', 0.04505290596213744), ('shutdown', 0.08827940861367045), ('(', 1.0), ('long', 0.36135265700483093), ('value', 0.0015052684395383843), (')', 0.8461538461538461), ('{', 0.17632552404438964), ('LOG', 0.017134666753534433), ('.', 1.0), ('info', 0.5220994475138122), ('(', 0.9577777777777777), ('""', 0.9205298013245033), ('b', 0.0017457771067283193), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void testFormatWikiPageIdentity ( ) + "" \ tenableSaveOnControlS(document.tableWizardForm, document.tableWizardForm) "" + i ] ; ByteBuffer chunk = ByteBuffer . allocate ( sizeLine . getBytes ( ) ; System . currentTimeMillis ( ) ; learner . self . isMultiAddressEnabled ( ) ; writeList ( Map < String > > getStats ( ) { List < String , T > tc ) ; boolean addObserver ( ConnectionObserver obs ) ; String answer2 = br2 . readLine ( ) { return header + line . replaceAll ( "" 1.0+SNAPSHOT "" , v , String key ) ; void shutdown ( long value ) { LOG . info ( "" b ) ) ) ) )"
63,"['boolean', 'resolve']",[],boolean resolve
64,"['public', 'void']","[('tableWithBadConstructorHasException', 0.0003869370066553165), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('rv', 0.003387842856212131), ('=', 0.47368421052631576), ('null', 0.06060606060606061), (';', 0.19305019305019305), ('}', 'Bracket balancing')]",public void tableWithBadConstructorHasException ( ) { rv = null ; )
65,"['protected', 'void']","[('loadPage', 0.008130081300813009), ('(', 1.0), ('context', 0.07142857142857142), (',', 0.5644171779141104), ('Request', 0.17746113989637305), ('request', 1.0), (')', 0.7859778597785978), (';', 0.5648218347232752), ('boolean', 0.02482935342066315), ('isTrackingSession', 0.009474590869939707), ('(', 1.0), ('long', 0.9230769230769231), ('timeout', 0.388861013547416), (',', 0.9872122762148338), ('TimeUnit', 0.9625468164794008), ('unit', 0.897196261682243), (')', 1.0), (';', 0.9728682170542635), ('data', 0.0027723165963462857), ('.', 0.828125), ('getVariable', 0.0299625468164794), ('(', 1.0), ('""', 0.5042735042735043), ('Signature2 unequal', 0.00018873266018684534), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('/clients/add', 0.0007564296520423601), ('""', 1.0), (',', 0.5930232558139535), ('results', 0.013769488561853416), (')', 0.9323671497584541), (';', 0.8942731277533039), ('childContent', 2.209017208244052e-05), ('=', 1.0), ('""', 0.42857142857142855), ('/resyncundernewepoch', 0.0017064846416382253), ('""', 1.0), (';', 1.0), ('pageOnePath', 0.0013227513227513227), ('=', 1.0), ('PathParser', 0.9090909090909091), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('""', 0.6748466257668712), ('e', 0.0013683117863546286), ('""', 1.0), (',', 0.6590909090909091), ('new', 0.049249599300597406), ('Stat', 0.004770992366412214), ('(', 1.0), ('11', 0.06451612903225806), (',', 0.7142857142857143), ('12', 0.6666666666666666), (',', 0.8), ('13', 0.6153846153846154), (',', 1.0), ('""', 0.07142857142857142), ('rootPath', 0.0012967365463583316), ('""', 1.0), (')', 0.6666666666666666), ('.', 0.04577487143673418), ('fillUri', 0.0008941116362242943), ('(', 1.0), ('client', 0.3125), ('(', 0.09917355371900827), ('null', 0.47058823529411764), (',', 0.5461538461538461), ('false', 0.02127659574468085), (',', 0.41156462585034015), ('""', 0.15081967213114755), ('12345', 0.0028095958504430517), ('""', 1.0), (',', 0.7), ('cell3', 7.285443683520327e-05), ('.', 0.5), ('text', 1.0), ('(', 0.8857142857142857), (')', 0.8709677419354839), (';', 0.4777126381547333), ('int', 0.01989219996023769), ('getRequestThrottleLimit', 0.02773650321941555), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('user', 0.00013254103249464314), ('.', 1.0), ('setLogin', 0.25), ('(', 1.0), ('""', 1.0), ('abstract', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('WikiPage', 0.00888024917714109), ('page', 0.14145810663764963), (')', 0.3379549393414211), ('throws', 0.15261044176706828), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('searcher', 0.0006313131313131314), ('=', 1.0), ('generateSearcherByPageTypesAndSearchAttributes', 0.32608695652173914), ('(', 1.0), ('Arrays', 0.3125), ('.', 1.0), ('asList', 0.8108108108108109), ('(', 1.0), ('""', 0.3560311284046693), ('<html><head><title>', 0.000141549495140134), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('Set', 0.0029711281450882504), ('<', 0.9829931972789115), ('String', 0.5802997858672377), ('>', 0.39886867451460023), ('>', 0.17165613842351002), ('asyncGetBulk', 0.4069448674992385), ('(', 0.999251497005988), ('Collection', 0.44485842026825634), ('<', 0.9910858995137763), ('VersionInfo', 0.04263093788063337), ('>', 1.0), ('versionsList', 0.05172413793103448), ('=', 1.0), ('new', 0.5), ('CountDownLatch', 0.008293423665459643), ('(', 1.0), ('1', 0.8082191780821918), (',', 0.4359805510534846), ('true', 0.004705882352941176), (',', 0.28874734607218683), ('""', 0.248), ('abc.x', 0.0002161227577263886), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('After purging, file', 0.0001080613788631943), ('""', 1.0), ('+', 1.0), ('""', 0.3485074626865672), (';', 0.008266993263931415), ('result', 0.021825396825396824), ('.', 0.7548387096774194), ('instructions', 0.004796163069544364), ('=', 0.5), ('ListSerializer', 0.10526315789473684), ('.', 1.0), ('serialize', 1.0), ('(', 1.0), (')', 0.5947712418300654), (',', 0.04123017779913503), ('new', 0.10003631082062454), ('CallInstruction', 0.07204198473282443), ('(', 1.0), ('id', 0.6682242990654206), (')', 0.1527777777777778), ('+', 0.09473684210526316), ('""', 0.7475592747559274), ('_', 0.012553582363747704), ('""', 1.0), ('+', 0.5555555555555556), ('VelocityEngine', 0.001990049751243781), ('.', 1.0), ('FILE_RESOURCE_LOADER_PATH', 0.3), (',', 1.0), ('String', 0.3333333333333333), ('>', 0.22870452528837623), ('getVersions', 0.08294424608624004), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('int', 0.20082774931020891), ('getConnectionFreezeTime', 0.033734939759036145), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('next', 0.010473879167198876), ('(', 0.9180327868852459), (')', 0.5888501742160279), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","protected void loadPage ( context , Request request ) ; boolean isTrackingSession ( long timeout , TimeUnit unit ) ; data . getVariable ( "" Signature2 unequal "" , "" /clients/add "" , results ) ; childContent = "" /resyncundernewepoch "" ; pageOnePath = PathParser . parse ( "" e "" , new Stat ( 11 , 12 , 13 , "" rootPath "" ) . fillUri ( client ( null , false , "" 12345 "" , cell3 . text ( ) ; int getRequestThrottleLimit ( ) ; user . setLogin ( "" abstract "" ) ; WikiPage page ) throws Exception { searcher = generateSearcherByPageTypesAndSearchAttributes ( Arrays . asList ( "" <html><head><title> "" ) ; Set < String > > asyncGetBulk ( Collection < VersionInfo > versionsList = new CountDownLatch ( 1 , true , "" abc.x "" , "" After purging, file "" + "" ; result . instructions = ListSerializer . serialize ( ) , new CallInstruction ( id ) + "" _ "" + VelocityEngine . FILE_RESOURCE_LOADER_PATH , String > getVersions ( ) ; public int getConnectionFreezeTime ( ) . next ( ) ) ) ) ) ) )"
66,"['public', 'void']","[('DirectoryWithContentIsFileSystemPage', 0.0002321622039931899), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('getResultsForPageContents', 0.005366161616161616), ('(', 1.0), ('""', 1.0), ('/Users/filipesabella/Desktop/slides_img/integration.jpg', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('replace', 0.11428571428571428), ('(', 1.0), ('String', 0.8125), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('}', 0.17806887715655306), ('try', 0.020216350416740556), ('{', 0.9752066115702479), ('return', 0.09035087719298246), ('f', 0.0007171029042667623), ('.', 0.25), ('}', 'Bracket balancing')]","public void DirectoryWithContentIsFileSystemPage ( ) throws Exception { getResultsForPageContents ( "" /Users/filipesabella/Desktop/slides_img/integration.jpg "" ) ; < T > Future < Boolean > replace ( String key , Transcoder < T > tc ) ; } try { return f . )"
67,"['private', 'void']","[('becomeFailed', 0.0015026296018031556), ('(', 1.0), ('Exception', 1.0), ('e', 0.9435483870967742), (')', 0.9926470588235294), ('{', 0.5944055944055944), ('result', 0.0043651052185810155), ('=', 0.24444444444444444), ('get', 0.006772009029345372), ('(', 1.0), (')', 0.09037238873751136), (';', 0.4777126381547333), ('loadPlugins', 4.418034416488104e-05), ('(', 1.0), ('responderFactory', 0.3181818181818182), (',', 0.6363636363636364), ('testProvider', 0.46153846153846156), (')', 0.8571428571428571), (';', 1.0), ('public', 0.04915063288343016), ('boolean', 0.047891210090658255), ('getRequestStaleLatencyCheck', 0.04807692307692308), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('bang', 0.0004734848484848485), ('=', 1.0), ('true', 0.8), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","private void becomeFailed ( Exception e ) { result = get ( ) ; loadPlugins ( responderFactory , testProvider ) ; public boolean getRequestStaleLatencyCheck ( ) throws Exception { bang = true ) )"
68,"['public', 'void']","[('finalizeContext', 7.738740133106331e-05), ('(', 1.0), ('final', 1.0), ('String', 0.4845878136200717), ('key', 0.38055322715842416), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('void', 0.04505290596213744), ('setLargeRequestMaxBytes', 0.01135633169059353), ('(', 1.0), ('int', 1.0), ('row', 0.07840321654221712), (',', 0.6459854014598541), ('boolean', 0.05198019801980198), ('compileInLoop', 0.007547169811320755), (')', 1.0), (';', 0.3333333333333333), ('Descriptor', 0.0007068855066380967), ('debugDescriptor2', 0.03076923076923077), ('=', 1.0), ('TestSystem', 1.0), ('.', 1.0), ('getDescriptor', 0.3944954128440367), ('(', 1.0), ('root', 0.07017543859649122), (',', 0.7288888888888889), ('PathParser', 0.6455357142857143), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('""', 0.6748466257668712), ('|!today -t|', 4.7183165046711336e-05), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), (')', 0.32232105040237186), (';', 0.6090406958288362), ('AssetManager', 0.00018776646270074444), ('am', 1.0), ('=', 1.0), ('ctx', 0.9166666666666666), ('.', 1.0), ('getAssets', 0.55), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('Map', 0.06587383660806619), ('<', 1.0), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('>', 0.6264626462646264), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('flush', 0.2646428571428571), ('(', 1.0), (')', 0.5180288461538461), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('wikiWord', 0.000445632798573975), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void finalizeContext ( final String key , int by ) ; void setLargeRequestMaxBytes ( int row , boolean compileInLoop ) ; Descriptor debugDescriptor2 = TestSystem . getDescriptor ( root , PathParser . parse ( "" |!today -t| \ n "" ) ; AssetManager am = ctx . getAssets ( ) ; < T > Map < String , T > Future < Boolean > flush ( ) ; assertEquals ( wikiWord ) )"
69,"['WikiPage', 'getSiblingPage']","[('(', 1.0), ('WikiPage', 0.7073170731707317), ('page', 0.38839285714285715), ('=', 0.4436741767764298), ('context', 0.08952702702702703), ('.', 0.9058823529411765), ('root', 0.13861386138613863), (',', 0.34355828220858897), ('PathParser', 0.6455357142857143), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('url', 0.01728945900725042), (',', 0.75), ('is', 0.3953488372093023), ('(', 0.9956663055254604), ('Matchers', 0.06293018682399214), ('.', 1.0), ('nullValue', 0.3235294117647059), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('final', 0.007223486270958051), ('byte', 0.02732919254658385), ('[', 1.0), (']', 0.7630057803468208), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","WikiPage getSiblingPage ( WikiPage page = context . root , PathParser . parse ( url , is ( Matchers . nullValue ( ) ; final byte [ ] ) ) )"
70,"['public', 'void']","[('moveNext', 0.0002321622039931899), ('(', 1.0), ('1', 0.2647058823529412), (')', 0.5583468395461912), (';', 0.450187265917603), ('for', 0.006207338355165787), ('(', 1.0), ('OperationCallback', 0.0007855459544383347), ('.', 0.010638297872340425), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('public', 0.04915063288343016), ('long', 0.15648403626330312), ('getFlushDelay', 0.06688963210702341), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('{', 0.02364974916932699), ('never', 0.008403361344537815), ('(', 1.0), ('parametersProvider', 0.03571428571428571), (')', 0.5454545454545454), ('.', 1.0), ('add', 0.027078809554221484), ('(', 0.995049504950495), ('instantiator', 0.008461538461538461), (')', 0.92), (';', 0.9629629629629629), ('this', 0.009366232962954782), ('.', 1.0), ('nextProtocol', 0.0005347593582887701), ('}', 1.0), ('}', 'Bracket balancing')]",public void moveNext ( 1 ) ; for ( OperationCallback . class ) ; public long getFlushDelay ( ) { { never ( parametersProvider ) . add ( instantiator ) ; this . nextProtocol } )
71,"['private', 'String']","[('pageHistoryReferencesToString', 0.002638522427440633), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('void', 0.42702702702702705), ('startMap', 0.002785515320334262), ('(', 1.0), ('TreeMap', 0.74), ('v', 0.4166666666666667), (',', 1.0), ('String', 0.8838709677419355), ('>', 0.22870452528837623), ('>', 0.17165613842351002), ('asyncGetAndTouch', 0.0487359122753579), ('(', 1.0), ('final', 0.9937888198757764), ('Dvd', 0.004301075268817204), ('dvd', 1.0), (',', 0.125), ('final', 1.0), ('int', 0.3832468495181616), ('maxSessionTimeOut', 0.002364066193853428), ('=', 1.0), ('15000', 0.5), (';', 1.0), ('final', 1.0), ('RequestInfo', 0.02857142857142857), ('webRequest', 0.7916666666666666), ('=', 1.0), ('new', 0.7017543859649122), ('ScenarioTable', 0.003621072304637309), ('(', 1.0), ('t', 0.2903225806451613), (')', 0.22988505747126436), ('{', 0.4482758620689655), ('Class', 0.003127239559580429), ('<', 0.8421052631578947), ('?', 0.6746987951807228), ('extends', 0.28720083246618106), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","private String pageHistoryReferencesToString ( ) throws IOException ; void startMap ( TreeMap v , String > > asyncGetAndTouch ( final Dvd dvd , final int maxSessionTimeOut = 15000 ; final RequestInfo webRequest = new ScenarioTable ( t ) { Class < ? extends ) ) )"
72,"['public', 'void']","[('testBasicCreateMode', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('could not connect', 9.436633009342267e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('set', 0.10392857142857143), ('(', 0.97), ('String', 0.4244604316546763), ('key', 0.5850175575497464), ('=', 0.005115393766357364), ('new', 0.07792207792207792), ('Symbol', 0.0021025581123700504), ('(', 1.0), ('SymbolType', 0.7115384615384616), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void testBasicCreateMode ( ) ; assertEquals ( "" could not connect "" ) ; < T > Future < Boolean > set ( String key = new Symbol ( SymbolType ) )"
73,"['public', 'void']","[('testSessionTimeout', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('keys', 0.42378467453996155), (',', 0.5499677627337202), ('Transcoder', 0.76), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819)]","public void testSessionTimeout ( ) ; Map < String > keys , Transcoder < T >"
74,"['public', 'void']","[('readFrom', 0.00030954960532425323), ('(', 1.0), ('QuorumPeerConfig', 0.8), ('.', 0.7142857142857143), ('getElectionAlg', 0.05714285714285714), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('CacheableOrder', 6.515082415792559e-05), ('cacheable', 1.0), ('=', 1.0), ('new', 1.0), ('Socket', 0.003387454736596192), ('(', 0.967741935483871), ('""', 0.6), ('TestPage', 0.007690855902613947), ('""', 1.0), (')', 0.8160919540229885), (')', 0.23592152879182274), ('}', 'Bracket balancing')]","public void readFrom ( QuorumPeerConfig . getElectionAlg ( ) { CacheableOrder cacheable = new Socket ( "" TestPage "" ) ) )"
75,"['public', 'void']","[('resetLatency', 0.00982819996904504), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('getMethod', 0.01877634436071018), ('(', 1.0), (')', 0.5968468468468469), (';', 0.4777126381547333), ('return', 0.02244361483575957), ('true', 0.02266172229089411), (';', 1.0), ('LOG', 0.00909090909090909), ('.', 1.0), ('debug', 0.1408839779005525), ('(', 1.0), ('Object', 0.027149321266968326), (')', 0.04589371980676329), ('expectedEntity', 0.10526315789473684)]",public void resetLatency ( ) . getMethod ( ) ; return true ; LOG . debug ( Object ) expectedEntity
76,"['private', 'Map']","[('<', 0.9642857142857143), ('SocketAddress', 0.18384518300378627), (',', 0.9722530521642619), ('Map', 0.6484018264840182), ('<', 0.9927536231884058), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('value', 0.09855985598559856), (',', 0.990990990990991), ('String', 0.09430255402750491), ('testRunner', 0.011756876663708962), ('=', 0.18461538461538463), ('createTestRunner', 0.24), ('(', 1.0), ('List', 0.5), ('<', 0.8803418803418803), ('String', 0.20192307692307693), ('>', 0.39886867451460023), ('keys', 0.42378467453996155), (',', 0.5499677627337202), ('Transcoder', 0.76), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('CASResponse', 0.03859846355630504), ('>', 1.0), ('asyncCAS', 0.9907834101382489), ('(', 1.0), ('String', 0.9772727272727273), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (')', 0.44536817102137766), (';', 0.7537379067722075), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('o', 0.18946894689468946), (',', 0.9929411764705882), ('Transcoder', 0.967816091954023), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('BulkFuture', 0.051913133402275075), ('<', 1.0), ('Map', 1.0), ('<', 0.9933283914010378), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('>', 0.6264626462646264), (')', 'Paren balancing')]","private Map < SocketAddress , Map < String , T value , String testRunner = createTestRunner ( List < String > keys , Transcoder < T > Future < CASResponse > asyncCAS ( String key , int exp ) ; Map < String , T o , Transcoder < T > BulkFuture < Map < String , T > )"
77,"['public', 'static']","[('WikiPageFactory', 0.001037344398340249), ('newInstance', 1.0), ('(', 1.0), (')', 0.5641025641025641), (';', 0.4777126381547333), ('abstract', 0.0028054518544699462), ('long', 0.1423841059602649), ('getSessionId', 0.09836065573770492), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('factory', 0.0008946519693388412), ('.', 0.9259259259259259), ('createComponent', 0.006289308176100629), ('(', 1.0), ('RECENT_CHANGES_CLASS', 0.1), (',', 1.0), ('RecentChangesWikiPage', 1.0), ('.', 1.0), ('updateRecentChanges', 0.3333333333333333), ('(', 1.0), ('page1', 0.48148148148148145), (',', 0.5510204081632653), (')', 'Paren balancing'), (')', 'Paren balancing')]","public static WikiPageFactory newInstance ( ) ; abstract long getSessionId ( ) ; factory . createComponent ( RECENT_CHANGES_CLASS , RecentChangesWikiPage . updateRecentChanges ( page1 , ) )"
78,"['public', 'void']","[('responseReceived', 7.738740133106331e-05), ('(', 1.0), ('NHttpClientConnection', 0.5), ('conn', 1.0), (',', 0.4), ('opcode', 0.2222222222222222), (',', 1.0), ('owner', 0.03896103896103896), (')', 0.2857142857142857), ('throws', 0.9279279279279279), ('MavenEmbedderException', 7.198387561186294e-05), (',', 1.0), ('DependencyResolutionRequiredException', 1.0), ('{', 1.0), ('return', 0.6), ('makeFullPathOfTarget', 0.00035855145213338117), ('(', 1.0), ('String', 0.7666666666666667), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('gets', 0.02171664943123061), ('(', 1.0), ('String', 0.977924944812362), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('currentMatch', 0.00016299918500407498), (')', 0.5), (';', 0.5), ('boolean', 0.02482935342066315), ('isTimedOut', 0.01636520241171404), ('(', 1.0), (')', 0.47058823529411764), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void responseReceived ( NHttpClientConnection conn , opcode , owner ) throws MavenEmbedderException , DependencyResolutionRequiredException { return makeFullPathOfTarget ( String key , Transcoder < T > gets ( String key , int currentMatch ) ; boolean isTimedOut ( ) ) )"
79,"['public', 'void']","[('settingShouldNullifyUpToIndex', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('parse', 0.012773023374632776), ('(', 1.0), ('pageName', 0.016731734523145567), (')', 0.6746031746031746), (';', 0.6030927835051546), ('ExecutionResult', 7.731560228854182e-05), ('result', 0.2857142857142857), ('=', 0.75), ('execution', 0.011286681715575621), ('.', 1.0), ('execute', 0.8181818181818182), ('(', 1.0), (')', 0.3229166666666667), ('=', 0.004555502162421912), ('=', 1.0), ('null', 0.518327605956472), ('|', 0.08193908193908193), ('|', 1.0), ('(', 0.17365269461077845), ('value', 0.1487603305785124), (',', 0.14657210401891252), (')', 'Paren balancing')]","public void settingShouldNullifyUpToIndex ( ) . parse ( pageName ) ; ExecutionResult result = execution . execute ( ) = = null | | ( value , )"
80,"['private', 'SimpleFixture']",[],private SimpleFixture
81,"['public', 'void']","[('setRequestThrottleStallTime', 0.0030181086519114686), ('(', 1.0), ('int', 1.0), ('delay', 0.10913268236645605), (')', 0.9637305699481865), (';', 0.9894894894894894), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('(5,5)java.awt.Point[x=1,y=1]', 4.7183165046711336e-05), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('SymbolList[Link[SymbolList[Text]]]', 0.0007564296520423601), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('row', 0.04482477587612062), (',', 0.6459854014598541), ('String', 0.30445544554455445), ('>', 0.22870452528837623), ('keys', 0.42378467453996155), (')', 0.4397163120567376), ('throws', 0.3000554631170272), ('IOException', 0.1847106248200403), (',', 0.17965705378020266), ('InterruptedException', 0.42857142857142855), (';', 0.11447811447811448), ('void', 0.17777777777777778), ('incrementIgnoredTestsCount', 0.005356760231412042), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('verify', 0.004959243632507897), ('(', 1.0), ('request', 0.07905138339920949), ('.', 0.30024213075060535), ('getInput', 0.06980392156862746), ('(', 1.0), ('""', 0.8539325842696629), ('a', 0.005756346135698783), ('""', 1.0), (';', 0.013513513513513514), ('input', 0.0013227513227513227), ('=', 0.6666666666666666), ('buffer', 0.0196078431372549), ('.', 0.9166666666666666), ('toString', 0.25), ('(', 1.0), (')', 0.8720666161998486), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('DataBuilder', 0.0003156565656565657), ('builder', 1.0), ('=', 1.0), ('new', 0.8695652173913043), ('SocketService', 0.002920219600513959), ('(', 1.0), ('portNumber', 0.6923076923076923), (')', 0.25), (';', 1.0), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('offset', 0.010105949470252649), (')', 0.7101449275362319), ('{', 0.41237113402061853), ('if', 0.09225356700762265), ('(', 1.0), ('value', 0.027179594396822077), ('.', 0.08983451536643026), ('indexOf', 0.05504587155963303), ('(', 1.0), ('BREAKPOINT', 0.006024096385542169), (')', 1.0), (';', 1.0), ('assert', 0.000717930592679317), ('response', 0.30666666666666664), ('!', 0.9166666666666666), ('=', 1.0), ('null', 0.7410909090909091), (')', 0.5761475761475762), (';', 0.3289640591966173), ('buff', 0.0001435861185358634), ('.', 1.0), ('limit', 0.07692307692307693), ('(', 1.0), (')', 0.5), (';', 0.4777126381547333), ('int', 0.01989219996023769), ('getCommitProcMaxCommitBatchSize', 0.026250619118375434), ('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('summary', 0.0039941902687000725), (')', 0.29069767441860467), (';', 0.5333333333333333), ('qu', 0.0005522543020610131), ('.', 0.98), ('getPeer', 0.3020833333333333), ('(', 1.0), ('id', 0.03225806451612903), (')', 0.1527777777777778), ('+', 0.09473684210526316), ('""', 0.7475592747559274), ('\\', 0.0762400489895897), ('n', 0.5279503105590062), ('""', 0.959409594095941), (')', 0.32232105040237186), ('.', 0.04577487143673418), ('thenReturn', 0.0818750798313961), ('(', 1.0), ('""', 0.2792511700468019), ('PageOne', 0.011654241766537699), ('""', 1.0), (')', 0.7220447284345048), (';', 0.6090406958288362), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('.', 0.15150842945874002), ('.', 0.7353474320241692), ('.', 0.5), ('files', 0.01342756183745583), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void setRequestThrottleStallTime ( int delay ) ; assertEquals ( "" (5,5)java.awt.Point[x=1,y=1] "" , "" SymbolList[Link[SymbolList[Text]]] "" ) ; long incr ( String key , int row , String > keys ) throws IOException , InterruptedException ; void incrementIgnoredTestsCount ( ) ; verify ( request . getInput ( "" a "" ; input = buffer . toString ( ) throws Exception { DataBuilder builder = new SocketService ( portNumber ) ; long incr ( String key , int offset ) { if ( value . indexOf ( BREAKPOINT ) ; assert response ! = null ) ; buff . limit ( ) ; int getCommitProcMaxCommitBatchSize ( ) , summary ) ; qu . getPeer ( id ) + "" \ n "" ) . thenReturn ( "" PageOne "" ) ; < T > tc , String . . . files ) )"
82,"['public', 'Index']","[('startMap', 0.5882352941176471), ('(', 1.0), ('TreeMap', 0.74), ('<', 0.5833333333333334), ('?', 0.9545454545454546), ('>', 0.5993756503642039), ('>', 0.12772133526850507), ('cacheMap', 0.003350593968930856), ('=', 0.8461538461538461), ('new', 1.0), ('ArrayList', 0.041934353463380446), ('<', 0.9570405727923628), ('JsonDeserializer', 0.020833333333333332), ('>', 0.6363636363636364), ('(', 0.5), (')', 0.7018800358102059), (';', 0.4777126381547333), ('properties', 0.0016236276480593784), ('.', 0.9738562091503268), ('set', 0.35797665369649806), ('(', 0.9844559585492227), ('String', 0.4244604316546763), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('CASValue', 0.031644260599793174), ('<', 1.0), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('pseudoResults', 0.03899416909620991), ('=', 1.0), ('SlimClient', 0.5981308411214953), ('.', 1.0), ('resultToMap', 0.9863013698630136), ('(', 1.0), ('List', 0.02459016393442623), ('literals', 0.002136752136752137), (')', 1.0), ('{', 1.0), ('ParserTest', 0.0043651052185810155), ('.', 1.0), ('assertTranslatesTo', 0.4679245283018868), ('(', 1.0), ('page', 0.10320284697508897), (',', 0.31853496115427304), ('WikiPagePath', 0.048494983277591976), ('rest', 0.009900990099009901), (')', 0.5), (';', 0.8333333333333334), ('Class', 0.0003423976672778281), ('<', 0.8285714285714286), ('T', 0.30843373493975906), ('>', 0.9951795613400819), ('asyncGet', 0.017269906928645294), ('(', 1.0), ('String', 0.9551820728291317), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public Index startMap ( TreeMap < ? > > cacheMap = new ArrayList < JsonDeserializer > ( ) ; properties . set ( String key , Transcoder < T > CASValue < Object > pseudoResults = SlimClient . resultToMap ( List literals ) { ParserTest . assertTranslatesTo ( page , WikiPagePath rest ) ; Class < T > asyncGet ( String key , Transcoder < ) ) ) )"
83,"['@Test', 'public']","[('void', 1.0), ('checkGlobalSession', 0.001238198421297013), ('(', 1.0), ('long', 1.0), ('timeout', 0.388861013547416), (',', 0.9872122762148338), ('TimeUnit', 0.9625468164794008), ('unit', 0.897196261682243), (')', 1.0), (';', 0.9728682170542635), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('>', 0.22870452528837623), ('>', 0.17165613842351002), ('asyncGetBulk', 0.4069448674992385), ('(', 0.999251497005988), (')', 'Paren balancing')]","@Test public void checkGlobalSession ( long timeout , TimeUnit unit ) ; < T > tc , String > > asyncGetBulk ( )"
84,"['private', 'Request']","[('newRequest', 0.06666666666666667), ('(', 1.0), ('new', 0.9047619047619048), ('DefaultJsonSerializers', 0.001718213058419244), ('(', 1.0), ('adapters', 0.875), (')', 0.7777777777777778), (')', 0.14285714285714285), (';', 0.6920507070614618), ('when', 0.005964346462258941), ('(', 1.0), ('response', 0.015918958031837915), (')', 0.6580882352941176), ('.', 0.21937321937321938), ('getAbsolutePath', 0.005620130284838421), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('void', 0.04505290596213744), ('exitCode', 0.00042854081851296334), ('(', 1.0), ('exitCode', 0.14285714285714285), (')', 0.47058823529411764), ('{', 0.29411764705882354), ('return', 0.14763176754185942), ('}', 'Bracket balancing')]",private Request newRequest ( new DefaultJsonSerializers ( adapters ) ) ; when ( response ) . getAbsolutePath ( ) ; void exitCode ( exitCode ) { return )
85,"['void', 'addExpectation']","[('(', 1.0), ('new', 0.48), ('PathAnnotationRules', 0.003780068728522337), ('(', 1.0), ('mockery', 1.0), ('.', 1.0), ('mock', 0.36538461538461536), ('(', 1.0), ('Deserializers', 0.001081081081081081), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('int', 0.01989219996023769), ('roll', 0.0004952947003467063), ('=', 0.25), (')', 'Paren balancing'), (')', 'Paren balancing')]",void addExpectation ( new PathAnnotationRules ( mockery . mock ( Deserializers . class ) ; int roll = ) )
86,"['public', 'SortedSet']",[],public SortedSet
87,"['public', 'ParseSpecification']","[('provider', 0.25), ('(', 1.0), ('SymbolProvider', 0.2), ('providerModel', 0.043478260869565216), (',', 1.0), ('SymbolType', 1.0), ('.', 0.8378378378378378), ('CloseEvaluator', 0.019417475728155338), (')', 1.0), (';', 1.0), ('page', 0.0045837107071064085), ('.', 0.668997668997669), ('getData', 0.2673913043478261), ('(', 0.9850374064837906), (')', 0.9167616875712656)]","public ParseSpecification provider ( SymbolProvider providerModel , SymbolType . CloseEvaluator ) ; page . getData ( )"
88,"['public', 'void']","[('createLocalRoot', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Set', 0.0029711281450882504), ('<', 0.9829931972789115), ('Watcher', 0.09850107066381156), ('>', 0.9508196721311475), ('list', 0.08620689655172414), ('(', 0.2462686567164179), ('""', 0.528554070473876), ('here is line two', 0.00023591582523355665), ('""', 1.0), (',', 1.0), (')', 'Paren balancing')]","public void createLocalRoot ( ) ; Set < Watcher > list ( "" here is line two "" , )"
89,"['long', 'createSession']","[('(', 1.0), ('int', 0.72), ('col', 0.06921309592188397), (',', 0.9194139194139194), ('int', 0.8233333333333334), ('exp', 0.34360228198859005), (')', 0.44536817102137766), (';', 0.7537379067722075), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('pOsT', 9.436633009342267e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('FailureMode', 0.0006516600764319954), ('getFailureMode', 1.0), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('result', 0.0043651052185810155), ('[', 0.05555555555555555), ('4', 0.05263157894736842), (']', 1.0), (';', 0.38095238095238093), ('final', 0.024528301886792454), ('ServletResponse', 0.0037267080745341614), ('response', 1.0), ('=', 1.0), ('responder', 0.21452702702702703), ('.', 1.0), ('convertDateFormat', 0.0044444444444444444), ('(', 1.0), ('inDate', 0.42857142857142855), (')', 1.0), (';', 1.0), ('data', 0.0027723165963462857), ('.', 0.828125), ('setAttribute', 0.12172284644194757), ('(', 1.0), ('""', 0.38636363636363635), ('|', 0.001557044446541474), ('""', 0.8), (')', 0.3780487804878049), (';', 0.6090406958288362), ('OperationState', 0.0001656762906183039), ('getState', 1.0), ('(', 1.0), (')', 0.9436619718309859), (';', 0.4777126381547333), ('writeToPipe', 0.00047493869977247125), ('(', 1.0), ('""', 0.8913043478260869), ('<simple />', 4.7183165046711336e-05), ('""', 1.0), ('+', 1.0), ('mCsharpName', 0.0004975124378109452), ('+', 1.0), ('""', 1.0), ('=127.0.0.1:', 0.0015309246785058174), ('""', 1.0), ('+', 1.0), ('testSummary', 0.007960199004975124), ('.', 0.972972972972973), ('wrong', 0.21359223300970873), ('=', 0.20481927710843373), ('""', 0.14705882352941177), ('""', 0.06313993174061433), (',', 0.34516928158546656), ('AssetManager', 0.0015299431735392686), ('.', 1.0), ('ACCESS_STREAMING', 1.0), (')', 1.0), (';', 1.0), ('List', 0.007079900152422188), ('<', 0.9456681350954479), ('WikiPage', 0.12451923076923077), ('>', 0.9846153846153847), ('wikiPages', 0.005479452054794521), ('}', 'Bracket balancing')]","long createSession ( int col , int exp ) ; assertSubString ( "" pOsT "" ) ; FailureMode getFailureMode ( ) { result [ 4 ] ; final ServletResponse response = responder . convertDateFormat ( inDate ) ; data . setAttribute ( "" | "" ) ; OperationState getState ( ) ; writeToPipe ( "" <simple /> "" + mCsharpName + "" =127.0.0.1: "" + testSummary . wrong = "" "" , AssetManager . ACCESS_STREAMING ) ; List < WikiPage > wikiPages )"
90,"['public', 'void']","[('resetMaxLatency', 0.01006036217303823), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('addShade', 2.209017208244052e-05), ('(', 1.0), ('HtmlTag', 0.3333333333333333), (')', 0.4), ('element', 0.3333333333333333)]",public void resetMaxLatency ( ) ; addShade ( HtmlTag ) element
91,"['private', 'Map']","[('<', 0.9642857142857143), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('(', 0.043943971436418566), (')', 0.7018800358102059), (':', 0.0015761653051417587), ('""', 0.16753926701570682), ('+', 0.45110410094637227), ('deb', 0.00472636815920398), (',', 0.3157894736842105), ('e', 0.35714285714285715), ('.', 0.07194244604316546), ('prepareToExecute', 0.013793103448275862), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('long', 0.15648403626330312), ('getNumAliveConnections', 0.13154960981047936), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('HostPort', 0.0007968127490039841), ('hpobj', 1.0), (':', 0.3333333333333333), ('parseHostPortList', 1.0), ('(', 1.0), ('hostPort', 0.5), (',', 0.36363636363636365), ('6000', 0.13043478260869565), (')', 1.0), ('Assert', 0.5), ('.', 1.0), ('assertNull', 0.021244309559939303), ('(', 1.0), ('route', 0.01680672268907563), (')', 0.5774647887323944), ('.', 0.4909090909090909), ('getName', 0.007408353557287009), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('List', 0.0014186912573151268), ('<', 1.0), ('MemcachedNode', 0.03076923076923077), ('>', 0.9859154929577465), ('nodes', 0.8714285714285714), (',', 0.06557377049180328), ('final', 0.5), ('String', 0.1994069681245367), ('name', 0.09136630343671416)]","private Map < String > ( ) : "" + deb , e . prepareToExecute ( ) ; public long getNumAliveConnections ( ) throws IOException { HostPort hpobj : parseHostPortList ( hostPort , 6000 ) Assert . assertNull ( route ) . getName ( ) ; } List < MemcachedNode > nodes , final String name"
92,"['public', 'void']","[('setTrackingId', 7.738740133106331e-05), ('(', 1.0), ('String', 0.3333333333333333), ('path', 0.01779165040967616), (',', 0.5996131528046421), ('name', 0.014778325123152709), ('.', 0.06363636363636363), ('toCharArray', 0.012987012987012988), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('when', 0.005964346462258941), ('(', 1.0), ('info', 0.011577424023154847), (')', 0.6818181818181818), (';', 0.4067796610169492), ('expediter', 8.836068832976209e-05), ('=', 1.0), ('new', 1.0), ('UriBasedRoute', 0.0007008527041233501), ('(', 1.0), ('new', 0.5), ('EchoService', 0.0013745704467353953), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('[', 0.030036630036630037), (']', 0.9407114624505929), ('{', 0.24677045379264656), ('""', 0.45100671140939597), ('entity', 0.0267639902676399), ('""', 1.0), (',', 0.2222222222222222), ('""', 0.38678420515809414), ('hi', 0.0003241841365895829), ('""', 1.0), (',', 0.42857142857142855), ('""', 0.38678420515809414), ('pack it nicely, please', 0.0023773503349902745), ('""', 1.0), (')', 0.6818181818181818), (')', 0.23592152879182274), (';', 0.6920507070614618), ('CASValue', 0.0018887097130486647), ('<', 1.0), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('>', 0.32798833819241985), ('getStats', 0.17270788912579957), ('(', 1.0), (')', 0.5538461538461539), (';', 0.4777126381547333), ('if', 0.01729660474055093), ('(', 1.0), ('names', 0.0006272214091574326), ('[', 0.09090909090909091), ('i', 0.75), (']', 0.9539295392953929), (';', 0.13764044943820225), ('for', 0.10377358490566038), ('(', 1.0), ('int', 0.4218381775333857), ('delay', 0.10913268236645605), (')', 0.9637305699481865), (';', 0.9894894894894894), ('}', 0.17806887715655306), ('@InterfaceAudience.Public', 0.0026600461074658627), (')', 'Paren balancing')]","public void setTrackingId ( String path , name . toCharArray ( ) ; when ( info ) ; expediter = new UriBasedRoute ( new EchoService ( ) ; String [ ] { "" entity "" , "" hi "" , "" pack it nicely, please "" ) ) ; CASValue < Object > > getStats ( ) ; if ( names [ i ] ; for ( int delay ) ; } @InterfaceAudience.Public )"
93,"['public', 'void']","[('setRequestThrottleLimit', 0.0029407212505804057), ('(', 1.0), ('int', 1.0), ('delay', 0.10913268236645605), (')', 0.9637305699481865), (';', 0.9894894894894894), ('TapOperation', 0.0003644878393602686), ('tapDump', 0.21212121212121213), ('(', 1.0), ('String', 1.0), ('uri', 0.008427623878267655), (',', 0.34328358208955223), ('String', 0.12195121951219512), ('key', 0.09316770186335403), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('return', 0.02244361483575957), ('c', 0.0016481252575195715), ('.', 0.4), ('included', 0.5111111111111111), ('.', 0.5), ('getTimeInMillis', 0.23076923076923078), ('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('US_ASCII', 0.00036310820624546115)]","public void setRequestThrottleLimit ( int delay ) ; TapOperation tapDump ( String uri , String key , int by ) ; return c . included . getTimeInMillis ( ) , US_ASCII"
94,"['public', 'Object']","[('execute', 0.034482758620689655), ('(', 1.0), (')', 0.3229166666666667), (';', 0.4777126381547333), ('System', 0.0053347765579093865), ('.', 1.0), ('out', 0.2277542372881356), ('.', 0.9348837209302325), ('writeDouble', 0.0037593984962406013), ('(', 1.0), ('double', 0.8333333333333334), ('val', 0.8662613981762918), (')', 1.0), (';', 0.969309462915601), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('.', 0.06539211861100273), ('format', 0.14682779456193354), ('(', 0.9970238095238095), (')', 'Paren balancing'), (')', 'Paren balancing')]",public Object execute ( ) ; System . out . writeDouble ( double val ) ; long decr ( String . format ( ) )
95,"['public', 'void']","[('shouldConvertToZeroWhenEmpty', 0.0006190992106485065), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('CmdLineParser', 0.0002319468068656255), ('.', 1.0), ('Option', 1.0), ('helpOpt', 0.09523809523809523), ('=', 1.0), ('parser', 0.5), ('.', 1.0), ('getPage', 0.03888888888888889), ('(', 1.0), ('context', 0.1318181818181818), ('.', 0.24539877300613497), ('getRootPagePath', 0.06064356435643564), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), (',', 0.17965705378020266), ('SAXException', 0.0136986301369863), (',', 0.14285714285714285), ('InvalidReportException', 1.0), ('{', 1.0), ('String', 1.0), ('result', 0.041329011345218804), ('=', 0.8333333333333334), ('new', 0.2325056433408578), ('fitnesse', 0.0002336175680411167), ('.', 1.0), ('TestRunner', 0.02), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('MemcachedNode', 0.0003092624091541673), ('getHandlingNode', 0.6410256410256411), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('HtmlTag', 0.0011155536901632465), ('actionHeading', 0.008064516129032258), ('=', 1.0), ('HtmlUtil', 1.0), ('.', 1.0), ('makeFormTag', 0.03985507246376811), ('(', 1.0), ('""', 0.7857142857142857), ('fit:', 4.7183165046711336e-05), ('""', 1.0), ('+', 1.0), ('EditResponder', 0.00945273631840796), ('.', 1.0), ('class', 0.16346153846153846), (')', 0.5668416801292407), (';', 0.683291770573566), ('assertSame', 0.0011486889482869073), ('(', 1.0), ('component1', 0.007936507936507936), (',', 1.0), ('component2', 1.0), (')', 1.0), (';', 1.0), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('response', 0.015435501653803748), (';', 0.9774436090225563), ('return', 0.007692307692307693), ('op', 0.0057684384013185), (';', 0.8666666666666667), ('while', 0.06666666666666667), ('(', 1.0), ('readingResults', 0.0030303030303030303), (')', 1.0), ('{', 1.0), ('t', 0.0001954524724737768), ('.', 1.0), ('getCellContents', 0.08620689655172414), ('(', 1.0), ('col', 0.20930232558139536), (',', 0.723404255319149), ('int', 0.8233333333333334), ('row', 0.04482477587612062), (',', 0.6459854014598541), ('String', 0.30445544554455445), ('message', 0.007320319432120674), (')', 0.5806451612903226), (';', 0.6382113821138211), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('ParentPage', 0.000424648485420402), ('""', 1.0), (')', 0.4444444444444444), (';', 0.6090406958288362), ('final', 0.007223486270958051), ('SecretKey', 0.0037267080745341614), ('key', 1.0), ('=', 1.0), ('iterator', 0.05194805194805195), ('.', 1.0), ('hasNext', 0.5616438356164384), ('}', 'Bracket balancing')]","public void shouldConvertToZeroWhenEmpty ( ) ; CmdLineParser . Option helpOpt = parser . getPage ( context . getRootPagePath ( ) throws IOException , SAXException , InvalidReportException { String result = new fitnesse . TestRunner ( ) ) ; MemcachedNode getHandlingNode ( ) ; HtmlTag actionHeading = HtmlUtil . makeFormTag ( "" fit: "" + EditResponder . class ) ; assertSame ( component1 , component2 ) ; } return response ; return op ; while ( readingResults ) { t . getCellContents ( col , int row , String message ) ; assertSubString ( "" ParentPage "" ) ; final SecretKey key = iterator . hasNext )"
96,"['public', 'void']","[('writeRecord', 0.000773874013310633), ('(', 1.0), ('Record', 0.4186046511627907), ('r', 0.8974358974358975), (',', 0.95), ('String', 0.8539325842696629), ('.', 0.15150842945874002), ('class', 0.07492447129909366), (')', 0.5668416801292407), (',', 0.04132525828286427), ('classLoader', 0.0009077705156136529)]","public void writeRecord ( Record r , String . class ) , classLoader"
97,"['public', 'static']","[('KeyStore', 0.0031120331950207467), ('loadKeyStore', 1.0), ('(', 1.0), (')', 0.75), (';', 0.4777126381547333), ('s1dir', 3.3135258123660786e-05), ('.', 0.25), ('mkdirs', 1.0), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('errorLogPage', 3.3135258123660786e-05), ('.', 1.0), ('getData', 0.5), ('(', 0.9850374064837906), (')', 0.9167616875712656), (';', 0.4777126381547333), ('StatsOperation', 0.0003644878393602686), ('stats', 1.0), ('(', 1.0), ('String', 1.0), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('columnIndex', 0.00016299918500407498), (',', 0.8), ('int', 1.0), ('line', 0.0006519967400162999), (',', 1.0), ('String', 0.2), ('tag', 0.07320319432120674), (')', 0.9582366589327146), ('throws', 0.806060606060606), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('long', 0.07675675675675675), ('startForwarding', 0.0011135857461024498), ('(', 1.0), ('LearnerHandler', 0.9473684210526315), (')', 'Paren balancing')]","public static KeyStore loadKeyStore ( ) ; s1dir . mkdirs ( ) ; errorLogPage . getData ( ) ; StatsOperation stats ( String key , int columnIndex , int line , String tag ) throws IOException ; long startForwarding ( LearnerHandler )"
98,"['public', 'TargetResult']",[],public TargetResult
99,"['private', 'String']","[('uriRelativeToContextRoot', 0.0079155672823219), ('(', 1.0), ('HttpServletRequest', 1.0), ('.', 0.6702127659574468), ('class', 1.0), (',', 0.31704361873990305), ('Dog', 0.006426735218508998), ('.', 0.9565217391304348), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('delete', 0.17464285714285716), ('(', 1.0), ('String', 0.739568345323741), ('testSystemName', 0.0014046039797112758), (',', 0.7209302325581395), ('completedTests', 0.011904761904761904), (',', 1.0), ('totalNumberOfTests', 1.0), (')', 1.0), ('{', 0.6666666666666666), ('if', 0.09225356700762265), ('(', 1.0), ('watchers', 0.002299811833577253), ('=', 0.5), ('=', 0.47619047619047616), ('null', 0.518327605956472), (';', 0.19305019305019305), ('}', 0.41384388807069217), ('finally', 0.006384110657918071), ('{', 1.0), ('io', 0.023809523809523808), ('.', 1.0), ('IOException', 0.18181818181818182), ('e', 1.0), (')', 0.9841269841269841), ('{', 0.5944055944055944), ('TestPage', 0.00026060329663170237), ('page', 0.1111111111111111), (',', 0.3333333333333333), ('String', 0.16555183946488294), ('>', 0.22870452528837623), ('>', 0.17165613842351002), ('asyncGets', 0.1209259823332318), ('(', 1.0), ('String', 0.9825870646766169), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","private String uriRelativeToContextRoot ( HttpServletRequest . class , Dog . class ) ; < T > Future < Boolean > delete ( String testSystemName , completedTests , totalNumberOfTests ) { if ( watchers = = null ; } finally { io . IOException e ) { TestPage page , String > > asyncGets ( String key , int ) ) )"
100,"['void', 'add']","[('(', 1.0), ('new', 0.11653846153846154), ('WikiPagePath', 0.007560137457044674), ('(', 1.0), ('test', 0.38636363636363635), (')', 0.5340909090909091), ('throws', 0.32222222222222224), ('ResourceNotFoundException', 0.0005038871292830406), (',', 1.0), ('MethodNotAllowedException', 0.7777777777777778), (',', 0.5714285714285714), ('IllegalStateException', 1.0), (',', 0.5833333333333334), ('IOException', 0.84), ('{', 0.6968085106382979), ('return', 0.07808764940239044), ('new', 0.16242380781642166), ('ScriptTable', 0.004640371229698376), ('(', 1.0), ('t', 0.38095238095238093), (')', 0.22988505747126436), ('{', 0.4482758620689655), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","void add ( new WikiPagePath ( test ) throws ResourceNotFoundException , MethodNotAllowedException , IllegalStateException , IOException { return new ScriptTable ( t ) { ) ) )"
