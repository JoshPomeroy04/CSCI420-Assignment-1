ID,Given String,Predicted Continuation,Full Method
1,"['public', 'void']","[('testGenerateSuiteMapWithMultipleTestSystems', 0.00030954960532425323), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('WikiPage', 0.056818181818181816), ('testPage', 0.09345794392523364), ('=', 0.8240740740740741), ('addTestPage', 0.16030534351145037), ('(', 1.0), ('suite', 0.7536231884057971), (',', 0.9666666666666667), ('""', 0.6153846153846154), ('ChildPageTwo', 0.0005403068943159715), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('replay', 0.00040866818352514967), ('(', 1.0), ('revisionController', 0.8809523809523809), (')', 0.43529411764705883), (';', 1.0), ('}', 0.17806887715655306), ('else', 0.0523142401134953), ('{', 0.7423312883435583), ('slimRunner', 0.004016064257028112), ('.', 0.5), ('getError', 0.07692307692307693), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('bb', 0.0003423976672778281), ('.', 0.90625), ('flip', 0.18181818181818182), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('mockery', 0.00017733640716439085), ('.', 1.0), ('mock', 0.36538461538461536), ('(', 1.0), ('SaslServerPrincipal', 0.006486486486486486), ('.', 1.0), ('WrapperInetAddress', 0.4), ('ia', 0.5), ('=', 1.0), ('mock', 0.2), ('(', 1.0), ('InterceptorStack', 0.02918918918918919), ('.', 0.42857142857142855), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('int', 0.01989219996023769), ('getMinClientResponseSize', 0.04061416542842992), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('title', 5.522543020610131e-05), ('.', 0.6), ('equals', 0.043478260869565216), ('(', 1.0), ('Object', 0.11504424778761062), ('o', 0.16666666666666666), (')', 0.9812734082397003), (';', 0.7678300455235205), (')', 'Paren balancing')]","public void testGenerateSuiteMapWithMultipleTestSystems ( ) throws Exception { WikiPage testPage = addTestPage ( suite , "" ChildPageTwo "" ) ; replay ( revisionController ) ; } else { slimRunner . getError ( ) ; bb . flip ( ) ; } mockery . mock ( SaslServerPrincipal . WrapperInetAddress ia = mock ( InterceptorStack . class ) ; int getMinClientResponseSize ( ) ; title . equals ( Object o ) ; )"
2,"['Future', '<']","[('Boolean', 0.5025295109612141), ('>', 1.0), ('set', 0.10392857142857143), ('(', 0.97), ('String', 0.4244604316546763), ('arg', 0.006008583690987125), (')', 0.425), ('{', 0.5211267605633803), ('if', 0.09225356700762265), ('(', 1.0), ('useServer', 0.0002090738030524775), (')', 1.0), ('{', 1.0), ('EditText', 6.515082415792559e-05), ('password', 1.0), ('=', 1.0), ('=', 0.375), ('null', 0.518327605956472), (';', 0.19305019305019305), ('zk', 0.004418262150220913), ('.', 0.896551724137931), ('getSessionId', 0.03917050691244239), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('if', 0.01729660474055093), ('(', 1.0), ('!', 0.1421701860756847), ('result', 0.022606382978723406), ('.', 1.0), ('add', 0.07434052757793765), ('(', 0.995049504950495), ('""', 0.08884615384615385), ('somewhere/MyTest', 9.436633009342267e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('false', 0.06174200661521499), (';', 1.0), ('}', 0.5553319919517102), ('return', 0.1317609505231424), ('false', 0.06174200661521499), (';', 1.0), ('if', 0.11066398390342053), ('(', 1.0), ('reading', 0.000418147606104955), (')', 0.5), ('{', 1.0), ('StringBuffer', 0.003387842856212131), ('description', 0.012345679012345678), ('=', 1.0), ('new', 0.3333333333333333), ('WikiPageProperties', 0.0028034108164934003), ('(', 1.0), (')', 0.8387096774193549), (';', 0.4777126381547333), ('Object', 0.0023526033267799156), ('parameters', 0.010810810810810811), ('=', 1.0), ('new', 0.5), ('MockResponseSender', 0.009344702721644668), ('(', 0.9777777777777777), (')', 0.8068181818181818), (';', 0.4777126381547333), ('void', 0.04505290596213744), ('nothing', 0.0025712449110777804), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('null', 0.03969128996692393), (';', 1.0), ('ObjectInputStream', 0.0014727540500736377), ('ois', 1.0), ('=', 1.0), ('new', 0.6666666666666666), ('MockResponseSender', 0.009344702721644668), ('(', 0.9777777777777777), (')', 0.8068181818181818), ('{', 0.09111004324843826), ('if', 0.09225356700762265), ('(', 1.0), ('head', 0.0006272214091574326), ('!', 0.5), ('=', 1.0), ('null', 0.7410909090909091), (';', 0.19305019305019305), ('}', 0.41384388807069217), ('long', 0.005674765029260507), ('expireTime', 0.06060606060606061), ('=', 1.0), ('roundToInterval', 1.0), ('(', 1.0), ('System', 1.0), ('.', 1.0), ('clearProperty', 0.2044491525423729), ('(', 1.0), ('x509Util', 0.07772020725388601), (')', 0.03225806451612903), ('{', 0.4), ('byte', 0.0035181445045279823), ('fieldID', 0.05128205128205128), ('=', 1.0), ('(', 1.0), ('ErrorResult', 0.0009285051067780873), (')', 1.0), ('o', 1.0), (')', 0.18421052631578946), (';', 0.7678300455235205), ('assertFalse', 0.005390001988115487), ('(', 1.0), ('searcher', 0.10387323943661972), ('.', 0.9745762711864406), ('pageMatches', 0.9008264462809917), ('(', 1.0), ('page', 0.9487179487179487), (',', 0.31853496115427304), ('PageData', 0.038461538461538464), ('data', 0.5370370370370371), ('=', 0.6331877729257642), ('testPage', 0.046153846153846156), ('.', 1.0), ('readOnlyData', 0.09859154929577464), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('replay', 0.00040866818352514967), ('(', 1.0), ('this', 0.023809523809523808), ('.', 0.2888146911519199), ('pathTrie', 0.014973262032085561), ('.', 1.0), ('addPath', 0.42857142857142855), ('(', 1.0), ('executor', 0.06451612903225806), ('.', 0.21621621621621623), ('setVerbose', 0.06666666666666667), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('Response', 0.001358545583070092), ('response', 0.9761904761904762), ('=', 0.8470588235294118), ('mockery', 0.05067567567567568), ('.', 1.0), ('assertIsSatisfied', 0.2932692307692308), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('for', 0.006207338355165787), ('(', 1.0), ('Watcher', 0.01335428122545169), ('w', 0.3333333333333333), (':', 1.0), ('watchers', 1.0), (')', 1.0), ('{', 0.9473684210526315), ('@Override', 0.007948400547266922), ('public', 0.7962962962962963), ('void', 0.8205128205128205), ('removeChildPage', 0.0014703606252902028), ('(', 1.0), ('""', 0.06666666666666667), ('PageOne', 0.011654241766537699), ('""', 1.0), (')', 0.7220447284345048), (';', 0.6090406958288362), ('return', 0.02244361483575957), ('testResponse', 0.0012360939431396785), (';', 1.0), ('}', 1.0), ('public', 0.0813974108884554), ('void', 0.7639198218262806), ('testMultipleWatcherObjs', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('htmlPage', 0.0012370496366166692), ('.', 1.0), ('put', 0.5526315789473685), ('(', 1.0), ('KEY_MAX_CLIENT_CNXNS', 0.0008952551477170994), (',', 1.0), ('maxClientCnxnsPerHost', 1.0), (')', 1.0), (';', 1.0), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('componentFactory', 0.0011025358324145535), ('.', 1.0), ('createComponent', 0.3157894736842105), ('(', 1.0), ('RECENT_CHANGES_CLASS', 0.1), (',', 1.0), ('RecentChangesWikiPage', 1.0), ('.', 1.0), ('class', 0.4444444444444444), (')', 0.5668416801292407), (')', 0.22087638047737798), (';', 0.6920507070614618), ('BlockingQueue', 0.0007731560228854183), ('<', 1.0), ('Operation', 0.9108910891089109), ('>', 1.0), ('clone', 0.26666666666666666), ('(', 1.0), (')', 0.3488372093023256), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('getBulk', 0.06577042399172699), ('(', 1.0), ('String', 0.22342064714946072), ('value', 0.012797502926258291), (')', 0.382262996941896), (';', 0.5893958076448829), ('zkMain', 0.00027612715103050655), ('.', 1.0), ('executeLine', 0.2833333333333333), ('(', 1.0), ('""', 1.0), ('""', 0.019911295649712182), (';', 0.07349298100743187), ('DefaultInteraction', 0.0006613756613756613), ('instance', 0.5), ('=', 1.0), ('context', 0.03389830508474576), ('.', 0.9058823529411765), ('contextRoot', 0.007425742574257425), (')', 0.3333333333333333), (';', 1.0), ('addTestToSuite', 0.0002319468068656255), ('(', 1.0), ('""', 0.9666666666666667), ('comment', 9.436633009342267e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('void', 0.04505290596213744), ('registerChannel', 0.010284979644311121), ('(', 1.0), ('SocketChannel', 1.0), ('ch', 0.4666666666666667), (',', 1.0), ('SelectionKey', 1.0), ('selectionKey', 0.9423076923076923), (')', 1.0), (';', 0.98), ('will', 0.006627051624732157), ('(', 1.0), ('returnValue', 0.972176759410802), ('(', 0.9983193277310924), ('transcoder', 0.003316749585406302), (')', 1.0), (';', 0.9), ('int', 0.01989219996023769), ('getTimeout', 0.0014858841010401188), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('Set', 0.0029711281450882504), ('<', 0.9829931972789115), ('String', 0.5802997858672377), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('value', 0.09855985598559856), (',', 0.990990990990991), ('String', 0.09430255402750491), ('outerName', 0.0006654835847382431), (',', 1.0), ('final', 0.4444444444444444), ('String', 0.1994069681245367), ('key', 0.38055322715842416), (')', 0.14608612895550796), (';', 0.710124826629681), ('public', 0.04915063288343016), ('long', 0.15648403626330312), ('getTxnLogElapsedSyncTime', 0.11036789297658862), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('<', 0.21625951141369643), ('T', 1.0), ('>', 0.9951795613400819), ('>', 0.12719751809720786), ('getStats', 0.17270788912579957), ('(', 1.0), ('String', 0.4444444444444444), ('tablename', 0.00015606710885680844), (',', 1.0), ('String', 1.0), ('classPath', 0.0033274179236912156), (')', 0.5428571428571428), (';', 0.6428571428571429), ('String', 0.026430890896640084), ('html', 0.03223443223443224), ('(', 0.0896551724137931), (')', 0.8951612903225806), (';', 0.4777126381547333), (';', 0.00013254103249464314), ('depth', 0.06666666666666667), ('+', 1.0), ('+', 0.3333333333333333), (']', 0.03834510595358224), ('=', 0.5), ('new', 0.32266666666666666), ('SimpleResponse', 0.012264922322158627), ('(', 1.0), (')', 0.8857142857142857), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncDecr', 0.4640582347588717), ('(', 1.0), ('String', 0.9883720930232558), ('name', 0.03573936792820913), (',', 0.32647462277091904), ('symbol', 0.004694835680751174), (')', 0.7272727272727273), (';', 0.21428571428571427), ('return', 0.02244361483575957), ('buffer', 0.006592501030078286), ('.', 1.0), ('append', 0.576530612244898), ('(', 0.9965635738831615), ('""', 0.43297380585516176), ('Abc', 0.00023591582523355665), ('""', 1.0), (')', 0.625), (';', 0.6090406958288362), ('raptor', 0.00022090172082440523), ('.', 1.0), ('init', 0.5), ('(', 1.0), ('String', 0.014285714285714285), ('key', 0.5850175575497464), (')', 0.14608612895550796), (';', 0.710124826629681), ('Assert', 0.006052707150588703), ('.', 1.0), ('assertTrue', 0.2306525037936267), ('(', 1.0), ('fle', 0.0026595744680851063), ('.', 1.0), ('getVoteTracker', 1.0), ('(', 1.0), ('votes', 1.0), (',', 0.6666666666666666), ('new', 0.6666666666666666), ('CachedStaticContentHandler', 0.00047709923664122136), ('(', 1.0), ('new', 1.0), ('ZKClientConfig', 0.0006872852233676976), ('(', 1.0), (')', 1.0), ('=', 0.004555502162421912), ('=', 1.0), ('0', 0.13287514318442153), (';', 0.6786355475763016), ('i', 0.47447073474470736), ('<', 0.4816933638443936), ('DATA_BYTES', 0.011037527593818985), ('.', 1.0), ('length', 1.0), ('(', 0.3886363636363636), (')', 1.0), ('throws', 0.13210956271023547), ('MojoExecutionException', 0.0003599193780593147), ('{', 0.2), ('if', 1.0), ('(', 1.0), ('thread', 0.0012544428183148652), ('.', 0.7777777777777778), ('getName', 0.034482758620689655), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('with', 0.0038319070123898325), ('(', 1.0), ('HttpMethod', 0.16071428571428573), ('method', 0.10416666666666667), (',', 0.6666666666666666), ('is', 0.20987654320987653), ('(', 0.9956663055254604), ('resourceMethod', 0.0019665683382497543), ('(', 0.15384615384615385), ('MyResource', 0.015267175572519083), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (')', 0.22087638047737798), (';', 0.6920507070614618), ('if', 0.01729660474055093), ('(', 1.0), ('!', 0.1421701860756847), ('isFingerprintInitialized', 0.010638297872340425), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('for', 0.01687406345690273), ('(', 1.0), ('String', 0.1272584446190102), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('controller', 0.012616339193381593), (')', 1.0), (';', 0.9563318777292577), ('environmentVariables', 2.209017208244052e-05), ('.', 1.0), ('set', 1.0), ('(', 0.9844559585492227), ('String', 0.4244604316546763), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('prepend', 0.0725), ('(', 1.0), ('String', 0.25), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('>', 0.12719751809720786), ('asyncGets', 0.1209259823332318), ('(', 1.0), ('String', 0.9825870646766169), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Map', 0.06587383660806619), ('<', 1.0), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('>', 0.6264626462646264), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('prepend', 0.0725), ('(', 1.0), ('long', 0.7355769230769231), ('diff', 0.0010035122930255895), (')', 0.6666666666666666), ('{', 1.0), ('boolean', 0.0036484461528438336), ('first', 0.022222222222222223), ('=', 1.0), ('null', 0.018518518518518517), (';', 0.19305019305019305), ('try', 0.14727540500736377), ('{', 0.9706896551724138), ('new', 0.005263157894736842), ('UpdateSpy', 0.018018018018018018), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), (',', 0.17965705378020266), ('GeneralSecurityException', 0.029354207436399216), ('{', 1.0), ('KeyStoreFileType', 0.10526315789473684), ('result', 0.14285714285714285), ('=', 1.0), ('new', 0.2325056433408578), ('File', 0.03807966359070202), ('(', 0.9505962521294719), ('""', 0.27060931899641577), ('1', 0.0016514107766348967), ('""', 0.9333333333333333), (')', 0.4166666666666667), (';', 0.6090406958288362), ('startingPosition', 3.3135258123660786e-05), ('=', 0.6666666666666666), ('0', 0.6), (';', 0.6786355475763016), ('for', 0.06973848069738481), ('(', 1.0), ('Interceptor', 0.002356637863315004), ('interceptor', 0.2727272727272727), ('=', 0.3076923076923077), ('Interceptor', 0.019230769230769232), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), ('.', 0.04702529390808693), ('tag', 0.00038319070123898327), (')', 0.4), ('throws', 0.806060606060606), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('stopServer', 0.000946969696969697), ('(', 1.0), (')', 0.8571428571428571), (';', 0.4777126381547333), ('FailureMode', 0.0006516600764319954), ('getFailureMode', 1.0), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertions', 0.000717930592679317), ('.', 0.8805970149253731), ('addAll', 0.8208955223880597), ('(', 1.0), ('invokeRows', 0.016574585635359115), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('try', 0.02619063131148609), ('(', 0.02626970227670753), ('ZooKeeper', 0.2857142857142857), ('writer', 0.04081632653061224), (',', 1.0), ('lineIndenter', 0.13793103448275862), (',', 1.0), ('newLine', 1.0), (')', 0.5), (';', 1.0), ('}', 0.17806887715655306), ('catch', 0.058698350771413374), ('(', 1.0), ('ReflectiveOperationException', 0.002583979328165375), ('e', 1.0), (')', 1.0), ('{', 0.5944055944055944), ('Result', 0.000325754120789628), ('message', 0.4), (';', 0.5), ('Matcher', 0.2857142857142857), ('m', 0.3), ('=', 0.5555555555555556), ('cnxManager', 0.09302325581395349), ('.', 1.0), ('connectAll', 0.06818181818181818), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('303', 0.009581105169340463), (',', 1.0), ('response', 0.9772727272727273), ('.', 0.7636363636363637), ('getStatus', 0.14355828220858896), ('(', 1.0), (')', 0.9723756906077348), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('ClientBase', 0.007575757575757576), ('.', 1.0), ('setupTestEnv', 0.1903409090909091), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('urlFor', 0.00402930402930403), ('(', 1.0), ('InheritanceExample', 0.15441176470588236), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('""', 0.12532133676092544), ('PageTwo', 0.0038902096390749947), ('""', 0.9918032786885246), (')', 0.7024793388429752), (';', 0.6090406958288362), ('}', 0.17806887715655306), ('if', 0.08051072885263344), ('(', 1.0), ('!', 0.1421701860756847), ('state', 0.0026595744680851063), ('.', 1.0), ('isAlive', 0.3333333333333333), ('(', 1.0), (')', 1.0), ('+', 0.008822681403171552), ('timeout', 0.012552301255230125), (')', 0.42857142857142855), (';', 0.36507936507936506), ('if', 0.01729660474055093), ('(', 1.0), ('isSSLSocket', 0.0002090738030524775), ('(', 1.0), ('theSocket', 0.5), (')', 0.6666666666666666), ('{', 0.5), ('try', 0.02619063131148609), ('{', 0.9737302977232924), ('return', 0.09035087719298246), ('(', 0.045177482968806026), ('String', 0.02857142857142857), ('uri', 0.008427623878267655), (',', 0.34328358208955223), ('HttpMethod', 0.4268292682926829), ('.', 0.8608058608058609), ('POST', 0.6631205673758865), (',', 0.7379679144385026), ('request', 0.7246376811594203), (')', 0.7686472819216182), (';', 0.5648218347232752), ('int', 0.01989219996023769), ('outLen', 0.0004952947003467063), ('=', 1.0), ('0', 1.0), (';', 0.6786355475763016), ('int', 0.028642590286425903), ('length', 0.004457652303120356), ('=', 0.675), ('=', 0.5128205128205128), ('null', 0.518327605956472), ('?', 0.05834405834405834), ('b', 0.007352941176470588), (':', 1.0), ('DEFAULT_VALUE', 0.14285714285714285), (';', 1.0), ('}', 1.0), ('return', 0.1317609505231424), ('gv', 0.0011025358324145535), (';', 1.0), ('PwGroup', 0.25), ('results', 0.5), ('=', 1.0), ('null', 0.04032258064516129), (')', 0.5761475761475762), ('{', 0.37463002114164906), ('int', 0.01570134862206007), ('port', 0.01907356948228883), ('=', 0.30120481927710846), ('arguments', 0.0625), ('.', 1.0), ('setInstallOnly', 0.05454545454545454), ('(', 1.0), ('commandLine', 0.7142857142857143), ('.', 0.9758064516129032), ('hasOption', 0.45161290322580644), ('(', 1.0), ('""', 0.9594594594594594), ('PageOne', 0.011654241766537699), ('""', 1.0), (',', 0.24281150159744408), ('port2', 0.00014570887367040654), ('+', 0.5), ('1000', 0.75), (')', 0.8928571428571429), (';', 0.5824175824175825), ('Expectation', 4.418034416488104e-05), ('e12', 0.16666666666666666), ('=', 1.0), ('expectations1', 1.0), ('.', 1.0), ('size', 0.3333333333333333), ('(', 0.985838779956427), (')', 1.0), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('CASResponse', 0.03859846355630504), ('>', 1.0), ('asyncCAS', 0.9907834101382489), ('(', 1.0), ('String', 0.9772727272727273), ('.', 0.06539211861100273), ('format', 0.14682779456193354), ('(', 0.9970238095238095), ('""', 0.6512968299711815), ('>=', 0.000141549495140134), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('boolean', 0.02482935342066315), ('shutdown', 0.16020671834625322), ('(', 1.0), (')', 0.5700483091787439), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('expectedScript', 0.015018315018315019), ('=', 1.0), ('""', 1.0), ('Cannot synchronize files from Revision Control', 0.0017064846416382253), ('""', 1.0), (';', 1.0), ('getFunc', 0.0026455026455026454), ('+', 1.0), ('setFunc', 0.3333333333333333), (';', 1.0), ('}', 1.0), ('responseReceivedLatch', 0.00017733640716439085), ('.', 1.0), ('countDown', 1.0), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('serialization', 0.0003423976672778281), ('.', 0.9722222222222222), ('from', 0.6909090909090909), ('(', 0.98), ('object', 0.14814814814814814), (')', 0.5869565217391305), ('throws', 0.06756756756756757), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('String', 0.07275883838383838), ('expectedResult', 0.02025931928687196), ('=', 1.0), ('""', 1.0), ('!define COMMAND_PATTERN {%m -r fitSharp.Slim.Service.Runner,fitsharp.dll -c', 0.0008532423208191126), ('\\""', 1.0), ('c:', 1.0), ('\\\\', 1.0), ('program files', 1.0), ('\\\\', 1.0), ('suite.config', 1.0), ('\\""', 1.0), ('""', 0.5), ('+', 0.30114942528735633), ('""', 0.3485074626865672), ('?edit&nonExistent=true', 0.001224739742804654), ('\\""', 0.5), ('>[?]</a>', 0.5), ('""', 1.0), (';', 0.375), ('case', 0.10515873015873016), ('MUL', 0.0034129692832764505), (':', 1.0), ('return', 1.0), ('""', 0.8895027624309392), ('{StereotypedClass', 0.0027100271002710027), ('""', 1.0), ('+', 1.0), ('pathString', 0.0002487562189054726), (';', 1.0), ('if', 1.0), ('(', 1.0), ('hit', 0.000418147606104955), ('=', 1.0), ('=', 1.0), ('cloneTree', 0.002290950744558992), ('.', 1.0), ('elementAt', 0.4444444444444444), ('(', 1.0), ('1', 0.23529411764705882), (')', 0.5583468395461912), (')', 0.2644194756554307), (';', 0.6920507070614618), ('SlimException', 2.209017208244052e-05), ('result', 1.0), ('=', 1.0), ('parse', 0.004514672686230248), ('(', 0.6), ('""', 0.6748466257668712), ('SetUp', 0.002547890912522412), ('""', 1.0), (')', 0.5740740740740741), (';', 0.6090406958288362), ('assertCallback', 7.731560228854182e-05), ('(', 1.0), ('op2', 0.875), (')', 0.95), (';', 1.0), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('303', 0.009581105169340463), (',', 1.0), ('response', 0.9772727272727273), ('.', 0.7636363636363637), ('add', 0.046625766871165646), ('(', 0.995049504950495), ('makeActionLink', 0.008076923076923077), ('(', 1.0), ('""', 0.3333333333333333), ('hidden', 0.001557044446541474), ('""', 1.0), (',', 0.9411764705882353), ('oua', 0.00014570887367040654), ('.', 1.0), ('getPassword', 0.5), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('public', 0.0813974108884554), ('boolean', 0.024498886414253896), ('isLeader', 0.010817307692307692), ('(', 1.0), (')', 0.9), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), (';', 0.07471926288511374), ('public', 0.5869565217391305), ('void', 0.38510051241623966), ('endRecord', 0.0016251354279523294), ('(', 1.0), ('Record', 0.6842105263157895), ('r', 0.8974358974358975), (',', 0.95), ('String', 0.8539325842696629), ('>', 0.22870452528837623), ('keys', 0.42378467453996155), (')', 0.4397163120567376), ('throws', 0.3000554631170272), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('pageBuilder', 0.0022095959595959595), ('.', 1.0), ('addPage', 1.0), ('(', 1.0), ('root', 0.6751091703056769), (',', 0.7288888888888889), ('""', 0.06428571428571428), ('201107', 0.002593473092716663), ('""', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","Future < Boolean > set ( String arg ) { if ( useServer ) { EditText password = = null ; zk . getSessionId ( ) ; if ( ! result . add ( "" somewhere/MyTest "" ) ; } return false ; } return false ; if ( reading ) { StringBuffer description = new WikiPageProperties ( ) ; Object parameters = new MockResponseSender ( ) ; void nothing ( ) ; } return null ; ObjectInputStream ois = new MockResponseSender ( ) { if ( head ! = null ; } long expireTime = roundToInterval ( System . clearProperty ( x509Util ) { byte fieldID = ( ErrorResult ) o ) ; assertFalse ( searcher . pageMatches ( page , PageData data = testPage . readOnlyData ( ) ; replay ( this . pathTrie . addPath ( executor . setVerbose ( ) ) ; Response response = mockery . assertIsSatisfied ( ) ; for ( Watcher w : watchers ) { @Override public void removeChildPage ( "" PageOne "" ) ; return testResponse ; } public void testMultipleWatcherObjs ( ) ; htmlPage . put ( KEY_MAX_CLIENT_CNXNS , maxClientCnxnsPerHost ) ; } return componentFactory . createComponent ( RECENT_CHANGES_CLASS , RecentChangesWikiPage . class ) ) ; BlockingQueue < Operation > clone ( ) ; long decr ( String key , Transcoder < T > getBulk ( String value ) ; zkMain . executeLine ( "" "" ; DefaultInteraction instance = context . contextRoot ) ; addTestToSuite ( "" comment "" ) ; void registerChannel ( SocketChannel ch , SelectionKey selectionKey ) ; will ( returnValue ( transcoder ) ; int getTimeout ( ) ) ; Set < String , T value , String outerName , final String key ) ; public long getTxnLogElapsedSyncTime ( ) throws OperationTimeoutException ; < T > > getStats ( String tablename , String classPath ) ; String html ( ) ; ; depth + + ] = new SimpleResponse ( ) ; Future < Long > asyncDecr ( String name , symbol ) ; return buffer . append ( "" Abc "" ) ; raptor . init ( String key ) ; Assert . assertTrue ( fle . getVoteTracker ( votes , new CachedStaticContentHandler ( new ZKClientConfig ( ) = = 0 ; i < DATA_BYTES . length ( ) throws MojoExecutionException { if ( thread . getName ( ) . with ( HttpMethod method , is ( resourceMethod ( MyResource . class ) ) ; if ( ! isFingerprintInitialized ( ) { for ( String key , Transcoder < T > controller ) ; environmentVariables . set ( String key , Transcoder < T > Future < Boolean > prepend ( String key , Transcoder < T > > asyncGets ( String key , Transcoder < T > Map < String , T > Future < Boolean > prepend ( long diff ) { boolean first = null ; try { new UpdateSpy ( ) throws IOException , GeneralSecurityException { KeyStoreFileType result = new File ( "" 1 "" ) ; startingPosition = 0 ; for ( Interceptor interceptor = Interceptor . class ) . tag ) throws Exception { stopServer ( ) ; FailureMode getFailureMode ( ) ; assertions . addAll ( invokeRows ( ) { try ( ZooKeeper writer , lineIndenter , newLine ) ; } catch ( ReflectiveOperationException e ) { Result message ; Matcher m = cnxManager . connectAll ( ) ; assertEquals ( 303 , response . getStatus ( ) throws Exception { ClientBase . setupTestEnv ( ) ; String urlFor ( InheritanceExample . class , "" PageTwo "" ) ; } if ( ! state . isAlive ( ) + timeout ) ; if ( isSSLSocket ( theSocket ) { try { return ( String uri , HttpMethod . POST , request ) ; int outLen = 0 ; int length = = null ? b : DEFAULT_VALUE ; } return gv ; PwGroup results = null ) { int port = arguments . setInstallOnly ( commandLine . hasOption ( "" PageOne "" , port2 + 1000 ) ; Expectation e12 = expectations1 . size ( ) ; Future < CASResponse > asyncCAS ( String . format ( "" >= "" ) ; boolean shutdown ( ) ; String expectedScript = "" Cannot synchronize files from Revision Control "" ; getFunc + setFunc ; } responseReceivedLatch . countDown ( ) ; serialization . from ( object ) throws Exception { String expectedResult = "" !define COMMAND_PATTERN {%m -r fitSharp.Slim.Service.Runner,fitsharp.dll -c \"" c: \\ program files \\ suite.config \"" "" + "" ?edit&nonExistent=true \"" >[?]</a> "" ; case MUL : return "" {StereotypedClass "" + pathString ; if ( hit = = cloneTree . elementAt ( 1 ) ) ; SlimException result = parse ( "" SetUp "" ) ; assertCallback ( op2 ) ; assertEquals ( 303 , response . add ( makeActionLink ( "" hidden "" , oua . getPassword ( ) ; } public boolean isLeader ( ) throws Exception ; public void endRecord ( Record r , String > keys ) throws Exception { pageBuilder . addPage ( root , "" 201107 "" ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )"
3,"['public', 'void']","[('testListStyle_whenAllowedValue_expectValid', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('Future', 0.15338406087304765), ('<', 1.0), ('Long', 0.18699643994753606), ('>', 0.8967254408060453), ('asyncDecr', 0.4640582347588717), ('(', 1.0), ('String', 0.9883720930232558), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), (')', 'Paren balancing')]","public void testListStyle_whenAllowedValue_expectValid ( ) throws OperationTimeoutException ; Future < Long > asyncDecr ( String key , Transcoder < )"
4,"['public', 'void']","[('setRequestStaleConnectionCheck', 0.0031728834545735954), ('(', 1.0), ('boolean', 1.0), ('check', 0.3712784588441331), (')', 1.0), (';', 1.0), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('touch', 0.09), ('(', 1.0), ('final', 0.9064748201438849), ('DataConsumer', 0.017204301075268817), (')', 'Paren balancing')]",public void setRequestStaleConnectionCheck ( boolean check ) ; Future < Boolean > touch ( final DataConsumer )
5,"['public', 'void']","[('getTokenShouldReturnDecodedToken', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('is', 0.0002650820649892863), ('.', 1.0), ('close', 0.6136363636363636), ('(', 0.9977220956719818), (')', 0.9647266313932981), ('throws', 0.13210956271023547), ('InterceptionException', 0.005182839044054132), (',', 0.5416666666666666), ('IOException', 0.8307692307692308), ('{', 0.6968085106382979), ('LOG', 0.008764940239043825), ('.', 1.0), ('debug', 0.1408839779005525), ('(', 1.0), ('""', 0.9140271493212669), ('PATH_SEPARATOR', 9.436633009342267e-05), ('""', 1.0), (')', 0.5), (';', 0.6090406958288362), ('double', 0.0016346727341005987), ('getDoubleArg', 0.012987012987012988), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('Class', 0.005087763927753753), ('<', 0.7022222222222222), ('?', 0.6746987951807228), ('extends', 0.28720083246618106), ('WikiPageFactory', 0.030201342281879196), ('>', 1.0), ('getWikiPageFactories', 0.8333333333333334), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('HttpFuture', 0.0001656762906183039), ('<', 1.0), ('List', 0.35135135135135137), ('<', 0.9680851063829787), ('ExecutionLogListener', 0.0004807692307692308), ('>', 1.0), ('listeners', 1.0), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('catch', 0.058698350771413374), ('(', 1.0), ('InterruptedException', 0.1524547803617571), ('e', 0.8813559322033898), (')', 1.0), (';', 0.34545454545454546), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('Age should be a value between 0 and 100', 0.00018873266018684534), ('""', 1.0), (')', 1.0), (',', 0.08405815503777538), ('new', 0.10003631082062454), ('TestSummary', 0.05438931297709924), ('(', 1.0), ('1', 0.38288288288288286), (')', 0.5583468395461912), (';', 0.450187265917603), ('one', 0.005169100267291082), ('(', 1.0), ('request', 0.20549927641099855), ('.', 0.30024213075060535), ('readBytes', 0.000784313725490196), ('(', 1.0), ('1000', 0.16666666666666666), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void getTokenShouldReturnDecodedToken ( ) ; is . close ( ) throws InterceptionException , IOException { LOG . debug ( "" PATH_SEPARATOR "" ) ; double getDoubleArg ( ) ; Map < String , Class < ? extends WikiPageFactory > getWikiPageFactories ( ) ; HttpFuture < List < ExecutionLogListener > listeners ( ) ; } catch ( InterruptedException e ) ; assertSubString ( "" Age should be a value between 0 and 100 "" ) , new TestSummary ( 1 ) ; one ( request . readBytes ( 1000 ) )"
6,"['public', 'void']","[('verifySessionExpiration', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('2', 0.027406417112299464), (',', 0.4410480349344978), ('2', 0.13002364066193853), (')', 0.3301282051282051), (';', 0.4577114427860697), ('logger', 0.0006185248183083346), ('.', 1.0), ('info', 0.1836734693877551), ('(', 0.9577777777777777), ('""', 0.9205298013245033), ('<div class=', 0.003963385863923752), ('\\""', 0.9574468085106383), ('alternating_block_2', 0.08888888888888889), ('\\""', 1.0), ('>second test</div>', 1.0), ('""', 1.0), (',', 0.8888888888888888), ('descriptor', 0.001384234299868862), ('.', 0.68), ('getVariable', 0.2), ('(', 1.0), ('String', 0.3247863247863248), ('.', 0.06539211861100273), ('.', 0.7353474320241692), ('.', 0.5), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void verifySessionExpiration ( ) ; assertEquals ( 2 , 2 ) ; logger . info ( "" <div class= \"" alternating_block_2 \"" >second test</div> "" , descriptor . getVariable ( String . . . ) )"
7,"['public', 'void']","[('testMutator', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('<', 0.21625951141369643), ('T', 1.0)]",public void testMutator ( ) throws OperationTimeoutException ; < T
8,"['public', 'void']","[('shouldOptionallyIncludeListChildFields', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('allowing', 0.0018334842828425634), ('(', 1.0), ('scanner', 0.11538461538461539), (',', 0.14666666666666667), ('new', 0.24074074074074073), ('SymbolProvider', 0.0033396946564885495), ('(', 1.0), (')', 0.5333333333333333), ('throws', 0.13210956271023547), ('KeeperException', 0.010005758710048948), ('.', 0.5035971223021583), ('Code', 0.2009132420091324), ('.', 0.8431372549019608), ('OK', 0.35802469135802467), (')', 0.20454545454545456), ('{', 0.5), ('wcb', 6.515082415792559e-05), ('=', 1.0), ('new', 0.6666666666666666), ('Properties', 0.006658100689171826), ('(', 1.0), (')', 0.9322033898305084), (';', 0.4777126381547333), ('attrCarrier', 2.209017208244052e-05), ('.', 1.0), ('readObject', 0.5), ('(', 1.0), (')', 0.8888888888888888), ('>', 0.0031715521383950023), ('0', 0.6286919831223629), ('?', 0.05802047781569966), ('new', 0.5161290322580645), ('SslServerSocketFactory', 0.07936507936507936), ('(', 1.0), ('true', 0.5), (',', 0.23125), ('page', 0.096), (',', 0.3287671232876712), ('summary', 0.015050167224080268), ('.', 0.6046511627906976), ('getExceptions', 0.09333333333333334), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('SimpleResponse', 0.005997474747474747), ('response', 1.0), ('=', 0.9953917050691244), ('caller', 0.013513513513513514), ('.', 1.0), ('call', 0.35802469135802467), ('(', 1.0), ('Map', 0.04838709677419355), ('<', 0.6428571428571429), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('keys', 0.42378467453996155), (',', 0.5499677627337202), ('Transcoder', 0.76), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), ('throws', 0.19533639143730888), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('<', 0.21625951141369643), ('T', 1.0), ('>', 0.9951795613400819), ('type', 0.0076525336091003105), (')', 0.45660377358490567), (';', 0.4223300970873786), ('}', 0.17806887715655306), ('public', 0.0813974108884554), ('void', 0.7639198218262806), ('testMakeActionsWithSuiteButtonWhenNameStartsWithSuite', 0.00030954960532425323), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertTrue', 0.013176787647175772), ('(', 1.0), ('searcher', 0.03723404255319149), ('.', 0.9745762711864406), ('pageMatches', 0.9008264462809917), ('(', 1.0), ('page', 0.9487179487179487), (')', 0.44728079911209767), (')', 0.30120481927710846), (';', 0.6920507070614618), ('request', 0.007267666615122932), ('.', 0.8663663663663663), ('commitProcQueueStartTime', 0.002352941176470588), ('=', 1.0), ('Time', 1.0), ('.', 1.0), ('currentElapsedTime', 0.5588235294117647), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('url', 0.028205128205128206), ('=', 0.4742857142857143), ('""', 0.045454545454545456), ('""', 0.06313993174061433), ('+', 0.10652353426919901), ('""', 0.3485074626865672), ('|x|y|', 0.001224739742804654), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('clazz', 0.0012437810945273632), ('.', 1.0), ('getConstructor', 0.09090909090909091), ('(', 1.0), (')', 0.3333333333333333), (',', 0.04123017779913503), ('CLIENT_PORT_QP1', 0.0005446623093681918), (',', 0.9473684210526315), ('quorumCfgSection', 0.3783783783783784), (',', 0.3225806451612903), ('configs', 0.36363636363636365), ('}', 'Bracket balancing')]","public void shouldOptionallyIncludeListChildFields ( ) ; allowing ( scanner , new SymbolProvider ( ) throws KeeperException . Code . OK ) { wcb = new Properties ( ) ; attrCarrier . readObject ( ) > 0 ? new SslServerSocketFactory ( true , page , summary . getExceptions ( ) throws Exception { SimpleResponse response = caller . call ( Map < String > keys , Transcoder < T > tc ) throws OperationTimeoutException ; < T > type ) ; } public void testMakeActionsWithSuiteButtonWhenNameStartsWithSuite ( ) ; assertTrue ( searcher . pageMatches ( page ) ) ; request . commitProcQueueStartTime = Time . currentElapsedTime ( ) ; String url = "" "" + "" |x|y| \ n "" + clazz . getConstructor ( ) , CLIENT_PORT_QP1 , quorumCfgSection , configs )"
9,"['public', 'CommandRunningFitClient']","[('build', 1.0), ('(', 1.0), (')', 0.9144736842105263), (';', 0.4777126381547333), ('boolean', 0.02482935342066315), ('getRequestThrottleDropStale', 0.025839793281653745), ('(', 1.0), (')', 1.0), ('[', 0.0008649687650168188), ('0', 0.6388888888888888), (']', 1.0), ('=', 0.05970149253731343), ('new', 0.32266666666666666), ('Counts', 0.0008176614881439084), ('(', 1.0), ('1', 0.4074074074074074), (',', 0.4359805510534846), ('ServerState', 0.01647058823529412), ('.', 1.0), ('LEADING', 0.16417910447761194), (',', 0.18181818181818182), ('true', 0.5), (',', 0.28874734607218683), ('""', 0.248), ('notAnnotated', 0.003241841365895829), ('""', 1.0), (')', 1.0), ('@Delete', 0.0006348803250587265), ('public', 1.0), ('void', 1.0), ('process', 0.003559820461228912), ('(', 1.0), ('pageBuilder', 0.056074766355140186), ('.', 1.0), ('addPage', 1.0), ('(', 1.0), ('superPage', 0.0034934497816593887), (',', 1.0), ('""', 0.75), ('5', 0.0072401123838340175), ('""', 0.9764705882352941), (',', 0.1566265060240964), ('""', 0.38678420515809414), ('result2 data', 0.0004322455154527772), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('clientConfig', 7.731560228854182e-05), ('.', 0.8571428571428571), ('setProperty', 0.8571428571428571), ('(', 1.0), ('x509Util', 0.06302521008403361), ('.', 0.9032258064516129), ('getSslTruststoreLocationProperty', 0.06930693069306931), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('<', 0.21625951141369643), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('PageHistory', 0.000298217323112947), ('pageHistory', 0.6785714285714286), ('=', 1.0), ('testHistory', 0.041666666666666664), ('.', 1.0), ('readHistoryDirectory', 0.3333333333333333), ('(', 1.0), ('resultsDirectory', 0.8333333333333334), (')', 'Paren balancing'), (')', 'Paren balancing')]","public CommandRunningFitClient build ( ) ; boolean getRequestThrottleDropStale ( ) [ 0 ] = new Counts ( 1 , ServerState . LEADING , true , "" notAnnotated "" ) @Delete public void process ( pageBuilder . addPage ( superPage , "" 5 "" , "" result2 data "" ) ; clientConfig . setProperty ( x509Util . getSslTruststoreLocationProperty ( ) throws OperationTimeoutException ; < T > tc ) ; PageHistory pageHistory = testHistory . readHistoryDirectory ( resultsDirectory ) )"
10,"['public', 'InputStream']","[('getData', 0.09090909090909091), ('(', 1.0), (')', 0.9167616875712656), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('getRelativeName', 0.008424908424908424), ('(', 1.0), ('WikiPage', 0.6), ('page', 0.38839285714285715), ('=', 0.4436741767764298), ('pageData', 0.016891891891891893), ('.', 0.78125), (')', 'Paren balancing')]",public InputStream getData ( ) ; String getRelativeName ( WikiPage page = pageData . )
11,"['private', 'static']","[('boolean', 0.1078838174273859), ('isDigestEnabled', 0.010638297872340425), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('VersionInfo', 0.011891891891891892), ('addDirectory', 0.07857142857142857), ('(', 1.0), ('final', 0.7142857142857143), ('FileVersion', 0.012903225806451613), ('filePath', 0.7222222222222222), (')', 1.0), ('throws', 0.5272727272727272), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('<', 0.21625951141369643), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('originalName', 0.0011091393078970719), (',', 0.6666666666666666), ('renamedName', 0.2), (',', 1.0), ('true', 1.0), (',', 0.28874734607218683), ('versions', 0.012), ('.', 0.6666666666666666), ('size', 0.5151515151515151), ('(', 0.985838779956427), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('int', 0.20082774931020891), ('syncTimeout', 0.001606425702811245), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('char', 0.0018242230764219168), ('c', 0.40625), ('=', 0.4444444444444444), ('targetTypeForComponentFactory0', 0.009900990099009901), ('(', 1.0), ('type', 1.0), ('.', 0.1223021582733813), ('getDeclaredMethod', 0.15789473684210525), ('(', 1.0), ('""', 0.9808917197452229), ('${x}', 0.0003774653203736907), ('""', 1.0), (')', 0.29411764705882354), (';', 0.6090406958288362), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","private static boolean isDigestEnabled ( ) throws IOException ; VersionInfo addDirectory ( final FileVersion filePath ) throws OperationTimeoutException ; < T > tc , String originalName , renamedName , true , versions . size ( ) ; public int syncTimeout ( ) { char c = targetTypeForComponentFactory0 ( type . getDeclaredMethod ( "" ${x} "" ) ; Map < ) )"
12,"['@Test', 'public']","[('void', 1.0), ('testOutputChunk', 0.006732703915802507), ('(', 1.0), ('String', 0.6791044776119403), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('long', 0.21889338731443994), ('by', 0.2550628044091259), (')', 0.4462311557788945), (';', 0.7569158328428487), ('public', 0.04915063288343016), ('boolean', 0.047891210090658255), ('isTimedOutUnsent', 0.01201923076923077), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('CASValue', 0.031644260599793174), ('<', 1.0), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('>', 0.32798833819241985), ('asyncGets', 0.1209259823332318), ('(', 1.0), ('String', 0.9825870646766169), ('.', 0.06539211861100273), ('.', 0.7353474320241692), ('.', 0.5), ('keys', 0.3872791519434629), (')', 0.997270245677889), (';', 0.6894065446478093), ('assertEquals', 0.04091099869667985)]","@Test public void testOutputChunk ( String key , long by ) ; public boolean isTimedOutUnsent ( ) ; < T > CASValue < Object > > asyncGets ( String . . . keys ) ; assertEquals"
13,"['public', 'void']","[('shouldOptionallyIncludeChildField', 0.0002321622039931899), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('ResourceMethod', 0.004261363636363636), ('method', 0.8604651162790697), ('=', 0.6985294117647058), ('router', 0.22570532915360503), ('.', 1.0), ('parse', 0.5228758169934641), ('(', 1.0), ('Symbol', 0.011154489682097044), ('symbol', 0.1276595744680851), (')', 0.6724137931034483), (';', 0.21428571428571427), ('}', 0.17806887715655306), ('catch', 0.058698350771413374), ('(', 1.0), ('IOException', 0.1731266149870801), ('e', 0.7792207792207793), (')', 0.9841269841269841), (';', 0.34545454545454546), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('expected', 0.012477718360071301), (',', 0.4031413612565445), ('translateTo', 0.008849557522123894), ('(', 1.0), ('SourcePage', 0.24324324324324326), ('page', 0.8484848484848485), (')', 0.2857142857142857), (')', 0.30120481927710846), (';', 0.6920507070614618), ('Calendar', 0.00027612715103050655), ('date', 0.25925925925925924), ('=', 1.0), ('Clock', 0.029850746268656716), ('.', 1.0), ('currentDate', 0.45614035087719296), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('MockWikiImporter', 0.0033422459893048127), ('.', 1.0), ('mockContent', 1.0), (',', 1.0), ('pageOne', 0.26666666666666666), (')', 0.3333333333333333), (';', 0.625), ('html', 0.00296008305904703), ('.', 0.9710144927536232), ('html', 0.1276595744680851), ('(', 1.0), (')', 0.8951612903225806), (';', 0.4777126381547333), ('counts', 6.627051624732157e-05), ('.', 0.8333333333333334), ('wrong', 0.15178571428571427), (',', 0.14457831325301204), ('summary', 0.2222222222222222), ('.', 0.6046511627906976), ('getWrong', 0.09333333333333334), ('(', 1.0), (')', 1.0), ('-', 0.003075444497837578), ('1', 0.4232558139534884), (',', 0.13916500994035785), ('stat', 0.012941176470588235), ('.', 0.8), ('getDataLength', 0.06944444444444445), ('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('list', 0.0332244008714597), ('(', 0.9139784946236559), ('""', 0.528554070473876), ('href=', 0.001698593941681608), ('\\""', 0.7), ('?responder=purgeHistory&days=0', 0.057692307692307696), ('\\""', 1.0), ('onclick=', 1.0), ('\\""', 1.0), ('purgeConfirmation(event)', 0.9), ('\\""', 1.0), ('>Purge &gt; 90 days</a>', 0.1111111111111111), ('""', 1.0), (',', 1.0), ('replace', 0.0003642721841760163), ('(', 1.0), ('String', 0.8125), ('expected', 0.0011705033164260631), (')', 0.48148148148148145), ('{', 0.28823529411764703), ('mDb', 0.000325754120789628), ('.', 1.0), ('update', 0.04), ('(', 1.0), ('byte', 0.18181818181818182), (')', 0.3786407766990291), ('0x81', 0.07051282051282051), (',', 0.6363636363636364), ('0', 0.8571428571428571), (',', 0.5541706615532119), ('0', 0.285363859362224), (')', 0.3883029721955896), ('.', 0.10151691948658109), ('toString', 0.0404904840975859), ('(', 1.0), ('16', 0.006056018168054504), (')', 0.8181818181818182), ('^', 0.30952380952380953), ('g2', 0.008849557522123894), (';', 1.0), ('return', 1.0), ('null', 0.02018953440461475), (';', 1.0), ('try', 0.14727540500736377), ('{', 0.9706896551724138), ('MethodInfo', 0.0008771929824561404), ('info', 1.0), ('=', 1.0), ('mockery', 0.5185185185185185), ('.', 1.0), ('mock', 0.36538461538461536), ('(', 1.0), ('HttpServletResponse', 0.046486486486486484), ('.', 0.7534246575342466), ('SC_BAD_REQUEST', 0.04225352112676056), (',', 0.6666666666666666), ('message', 1.0), ('.', 0.15384615384615385), ('setBackground', 0.030303030303030304), ('(', 1.0), ('getToasterColor', 0.6666666666666666), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('contentType', 0.000445632798573975), (')', 0.625), (';', 0.5), ('List', 0.007079900152422188), ('<', 0.9456681350954479), ('ByteString', 0.0009615384615384616), (',', 0.6666666666666666), ('InMemorySubscriptionState', 0.5), ('>', 1.0), ('topicSubs', 0.5), ('=', 1.0), ('new', 1.0), ('TestResponse', 0.00011680878402055835), ('.', 1.0), ('Counts', 1.0), ('(', 1.0), ('1', 0.4074074074074074), (')', 0.5583468395461912), (';', 0.450187265917603), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('prepend', 0.0725), ('(', 1.0), ('long', 0.7355769230769231), ('cas', 0.1254390366281987), (',', 0.7270194986072424), ('String', 0.9157509157509157), ('path', 0.040372670807453416), (')', 0.21663442940038685), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void shouldOptionallyIncludeChildField ( ) throws Exception { ResourceMethod method = router . parse ( Symbol symbol ) ; } catch ( IOException e ) ; assertEquals ( expected , translateTo ( SourcePage page ) ) ; Calendar date = Clock . currentDate ( ) ; assertEquals ( MockWikiImporter . mockContent , pageOne ) ; html . html ( ) ; counts . wrong , summary . getWrong ( ) - 1 , stat . getDataLength ( ) , list ( "" href= \"" ?responder=purgeHistory&days=0 \"" onclick= \"" purgeConfirmation(event) \"" >Purge &gt; 90 days</a> "" , replace ( String expected ) { mDb . update ( byte ) 0x81 , 0 , 0 ) . toString ( 16 ) ^ g2 ; return null ; try { MethodInfo info = mockery . mock ( HttpServletResponse . SC_BAD_REQUEST , message . setBackground ( getToasterColor ( ) ; assertEquals ( contentType ) ; List < ByteString , InMemorySubscriptionState > topicSubs = new TestResponse . Counts ( 1 ) ; Future < Boolean > prepend ( long cas , String path ) ) ) ) )"
14,"['public', 'void']","[('testBindColumnToFieldSymbol', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('variables', 0.0005412092160197928), ('.', 1.0), ('replaceSymbolsInString', 0.015625), ('(', 1.0), ('line', 0.5), ('.', 0.40425531914893614), ('contains', 0.05714285714285714), ('(', 1.0), ('""', 0.4502923976608187), ('127.0.0.1', 0.00283098990280268), ('""', 1.0), (',', 0.875), ('false', 0.009471076788576425), (')', 0.5782312925170068), (';', 0.6931106471816284), ('m', 0.0003092624091541673), ('.', 0.9285714285714286), ('to', 0.00909090909090909), ('(', 0.96), ('String', 0.21153846153846154), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('T', 0.02456140350877193), ('>', 0.6264626462646264), ('type', 0.0076525336091003105), (',', 0.4226415094339623), ('input', 0.006802721088435374), (',', 0.40425531914893614), ('SymbolStream', 0.12751677852348994), ('symbols', 1.0), (',', 0.8636363636363636), ('int', 0.6129032258064516), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('will', 0.006627051624732157), ('(', 1.0), ('returnValue', 0.972176759410802), ('(', 0.9983193277310924), ('url', 0.006633499170812604), (')', 0.21296296296296297), (';', 0.7520661157024794), ('final', 0.007223486270958051), ('byte', 0.02732919254658385), ('[', 1.0), (']', 0.7630057803468208), ('{', 0.24677045379264656), ('""', 0.45100671140939597), ('pet', 0.0072992700729927005), ('""', 1.0), ('}', 1.0), (')', 0.6764044943820224), (';', 0.7686567164179104), ('firstProcessor', 0.00015463120457708364), ('=', 1.0), ('new', 0.8235294117647058), ('ArrayList', 0.041934353463380446), ('<', 0.9570405727923628), ('File', 0.07291666666666667), ('>', 0.9819819819819819), (')', 'Paren balancing')]","public void testBindColumnToFieldSymbol ( ) ; variables . replaceSymbolsInString ( line . contains ( "" 127.0.0.1 "" , false ) ; m . to ( String key , T > type , input , SymbolStream symbols , int by ) ; will ( returnValue ( url ) ; final byte [ ] { "" pet "" } ) ; firstProcessor = new ArrayList < File > )"
15,"['Operation', 'removeCurrentReadOp']","[('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('final', 0.014528633787217408), ('String', 0.1982142857142857), ('file', 0.0016764459346186086), ('=', 0.07142857142857142), ('new', 0.7083333333333334), ('MemoryFileSystem', 0.001985749328349492), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('String', 0.07275883838383838), ('testRunner', 0.008103727714748784), ('=', 0.18461538461538463), ('DEFAULT_COMMAND_PATTERN', 0.12), (';', 1.0), ('String', 1.0), ('ignore', 0.012454212454212455), ('(', 1.0), ('rest', 0.05172413793103448), (')', 0.6666666666666666), (';', 0.8333333333333334), ('File', 0.0021648368640791713), ('resultFile', 0.02643171806167401), ('=', 0.46153846153846156), ('new', 1.0), ('XmlFormatter', 0.0007008527041233501), ('(', 1.0), ('context', 0.875), (')', 0.1901840490797546), ('throws', 0.13128491620111732), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('public', 0.22486486486486487), ('String', 0.06996452502956248), ('genJavaWriteWrapper', 0.006787330316742082), ('(', 1.0), ('String', 0.875), ('fitnesseRoot', 0.00023410066328521264), (')', 1.0), (',', 0.5), ('""', 0.23656499636891795), ('super:D/InIHSb7yEEbrWz8b9l71RjZJU=', 0.0005403068943159715), ('""', 1.0), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","Operation removeCurrentReadOp ( ) { final String file = new MemoryFileSystem ( ) throws Exception { String testRunner = DEFAULT_COMMAND_PATTERN ; String ignore ( rest ) ; File resultFile = new XmlFormatter ( context ) throws IOException ; public String genJavaWriteWrapper ( String fitnesseRoot ) , "" super:D/InIHSb7yEEbrWz8b9l71RjZJU= "" ) )"
16,"['public', 'void']","[('testWithZeroPurgeInterval', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('int', 0.01989219996023769), ('addRow', 0.018821198613174838), ('(', 1.0), ('List', 0.85), ('<', 0.8803418803418803), ('TestPage', 0.017788461538461538), ('>', 1.0), ('fitList', 0.12962962962962962), ('=', 1.0), ('map', 0.5), ('.', 0.75), ('get', 0.3888888888888889), ('(', 1.0), ('3', 0.013169845594913715), (',', 0.5109170305676856), ('tickTime', 0.011583011583011582), (')', 0.11538461538461539), (';', 0.9625), ('PageData', 0.0035344275331904837), ('data', 0.6677018633540373), ('=', 0.6331877729257642), ('page', 0.3076923076923077), ('.', 0.9814814814814815), ('commit', 0.125), ('(', 1.0), ('data', 0.5738498789346247), ('.', 0.25475285171102663), ('getProperties', 0.1891385767790262), ('(', 1.0), (')', 0.9943181818181818), (')', 0.1723209995194618), ('.', 0.06104983753603954), ('getContextPath', 0.003065525609911866), ('(', 1.0), (')', 1.0), ('!', 0.001268620855358001), ('=', 1.0), ('null', 0.7410909090909091), (')', 0.5761475761475762), ('evaluationMessage', 0.0038054968287526427), ('=', 1.0), ('createEvaluationMessage', 0.12), ('(', 1.0), ('String', 0.7878787878787878), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('flags', 0.0009446693657219973), (',', 0.8888888888888888), ('this', 0.0125), (')', 'Paren balancing')]","public void testWithZeroPurgeInterval ( ) ; int addRow ( List < TestPage > fitList = map . get ( 3 , tickTime ) ; PageData data = page . commit ( data . getProperties ( ) ) . getContextPath ( ) ! = null ) evaluationMessage = createEvaluationMessage ( String key , flags , this )"
17,"['boolean', 'getRequestStaleLatencyCheck']","[('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('key', 0.09316770186335403), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('Object', 0.3482831114225648), ('>', 0.49548387096774194), ('gets', 0.07762390670553936), ('(', 1.0), ('String', 0.977924944812362), ('key', 0.5850175575497464), (')', 0.14608612895550796), (';', 0.710124826629681), ('return', 0.02244361483575957), ('new', 0.11330861145447053), ('DERSequence', 0.042923433874709975), ('(', 1.0), ('seqname', 0.023809523809523808), (')', 1.0)]","boolean getRequestStaleLatencyCheck ( ) ; < T > tc , String key , int exp , Object > gets ( String key ) ; return new DERSequence ( seqname )"
18,"['boolean', 'hasChildPage']","[('(', 1.0), ('""', 0.42028985507246375), ('Shutting down server 2', 0.00018873266018684534), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('jdeb', 9.436633009342267e-05), ('""', 1.0), (')', 0.75), (';', 0.6090406958288362), ('map', 0.0002319468068656255), ('.', 1.0), ('put', 0.48148148148148145), ('(', 1.0), ('id', 0.008057296329453895), ('(', 0.6701388888888888), ('n', 0.9742268041237113), ('+', 0.8957345971563981), ('+', 1.0), ('counter', 0.011099899091826439), (')', 0.8888888888888888), (';', 0.6981132075471698), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('setMaxClientCnxnsPerHost', 0.004798018882525925), ('(', 1.0), ('int', 1.0), ('col', 0.06921309592188397), (',', 0.9194139194139194), ('int', 0.8233333333333334), ('version', 0.0009779951100244498), (',', 0.5), ('Set', 0.10810810810810811), ('<', 0.9032258064516129), ('String', 0.5802997858672377), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('>', 0.49548387096774194), ('getBulk', 0.23615160349854228), ('(', 1.0), ('String', 0.22342064714946072), ('revision', 0.00015606710885680844), (',', 1.0), ('File', 1.0), ('value', 0.05309734513274336), (')', 1.0), (';', 0.5893958076448829), ('public', 0.04915063288343016), ('List', 0.005715411903823414), ('<', 0.9527027027027027), ('Method', 0.0033653846153846156), ('>', 1.0), ('methodsOfHouseClass', 0.625), ('=', 1.0), ('Arrays', 1.0), ('.', 1.0), ('asList', 0.8108108108108109), ('(', 1.0), ('""', 0.3560311284046693), ('itHasOneParam', 4.7183165046711336e-05), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('suite tear down', 0.002485411713853469), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('responder', 0.0021317016059555103), ('.', 0.5128205128205128), ('makeResponse', 0.6511111111111111), ('(', 1.0), ('FitNesseUtil', 0.1007905138339921), ('.', 1.0), ('makeTestContext', 0.7180451127819549), ('(', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","boolean hasChildPage ( "" Shutting down server 2 "" ) ; assertEquals ( "" jdeb "" ) ; map . put ( id ( n + + counter ) ; public void setMaxClientCnxnsPerHost ( int col , int version , Set < String , Object > getBulk ( String revision , File value ) ; public List < Method > methodsOfHouseClass = Arrays . asList ( "" itHasOneParam "" , "" suite tear down "" ) ; responder . makeResponse ( FitNesseUtil . makeTestContext ( ) ) ) )"
19,"['public', 'boolean']","[('isSSLEnabled', 0.002403846153846154), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('html', 0.00296008305904703), ('.', 0.9710144927536232), ('add', 0.061465721040189124), ('(', 0.995049504950495), ('request', 0.003076923076923077), (',', 0.18280871670702178), ('page', 0.05014749262536873), (',', 0.3287671232876712), ('TestSummary', 0.015050167224080268), (')', 'Paren balancing')]","public boolean isSSLEnabled ( ) ; html . add ( request , page , TestSummary )"
20,"['private', 'void']","[('initDecryptKey', 0.002253944402704733), ('(', 1.0), (')', 'Paren balancing')]",private void initDecryptKey ( )
21,"['public', 'void']","[('testWithOneTest', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('CountDownLatch', 0.0013475004970288718), ('broadcastOp', 0.9508196721311475), ('(', 1.0), ('final', 0.8863636363636364), ('BroadcastOpFactory', 0.08387096774193549), ('of', 1.0), (',', 0.5), ('Collection', 0.9672131147540983), ('<', 0.9178082191780822), ('String', 0.7289890377588307), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('>', 0.6264626462646264), ('tc', 0.32430196483971047), (')', 0.8272900763358778)]","public void testWithOneTest ( ) ; CountDownLatch broadcastOp ( final BroadcastOpFactory of , Collection < String , T > tc )"
22,"['void', 'set']","[('(', 1.0), ('""', 0.1971223021582734), ('slimResult2', 4.7183165046711336e-05), ('""', 1.0), (',', 0.5), ('""', 0.38678420515809414), ('SymbolList[Collapsible[SymbolList[Text], SymbolList[Path[SymbolList[Text]], Newline]]]', 0.0002161227577263886), ('""', 1.0), (')', 1.0), (',', 0.08405815503777538), ('recentChangesContent', 0.00018155410312273057)]","void set ( "" slimResult2 "" , "" SymbolList[Collapsible[SymbolList[Text], SymbolList[Path[SymbolList[Text]], Newline]]] "" ) , recentChangesContent"
23,"['public', 'void']","[('checkGlobalSession', 0.001238198421297013), ('(', 1.0), ('long', 1.0), ('timeout', 0.388861013547416), (',', 0.9872122762148338), ('TimeUnit', 0.9625468164794008), ('unit', 0.897196261682243), (')', 1.0), (';', 0.9728682170542635), ('void', 0.04505290596213744), ('setSessionClosing', 0.004713949003642597), ('(', 1.0), ('long', 1.0), ('timeout', 0.388861013547416), (',', 0.9872122762148338), ('TimeUnit', 0.9625468164794008), ('.', 0.10046728971962617), ('MILLISECONDS', 0.6521739130434783), (')', 0.9833333333333333), (',', 0.06779661016949153), ('""', 0.23656499636891795), ('a', 0.0015128593040847202), ('""', 1.0), (',', 0.527027027027027), ('""', 0.38678420515809414), ('0', 0.004106332396801383), ('""', 0.8059701492537313), (',', 0.41818181818181815), ('""', 0.38678420515809414), ('setNameDepartmentAndTitle', 0.0001080613788631943), ('""', 1.0), (',', 1.0), ('watcher', 0.0010199621156928456), (',', 0.4318181818181818), ('null', 0.11688311688311688), (',', 0.4018151815181518), ('ElemBinary', 0.009456264775413711)]","public void checkGlobalSession ( long timeout , TimeUnit unit ) ; void setSessionClosing ( long timeout , TimeUnit . MILLISECONDS ) , "" a "" , "" 0 "" , "" setNameDepartmentAndTitle "" , watcher , null , ElemBinary"
24,"['private', 'static']","[('native', 0.008298755186721992), ('byte', 1.0), ('[', 1.0), (']', 0.7630057803468208), ('{', 0.24677045379264656), ('}', 0.17181208053691274), ('public', 0.32308904649330183), ('void', 0.7639198218262806), ('readComplete', 0.00030954960532425323), ('(', 1.0), ('int', 1.0), ('i', 0.1341183228029868), ('=', 0.9117647058823529), ('new', 0.04331450094161959), ('SimpleDateFormat', 0.0035042635206167503), ('(', 1.0), ('format', 0.022222222222222223), ('!', 0.07692307692307693), ('=', 1.0), ('null', 0.7410909090909091), (')', 0.5761475761475762), ('{', 0.37463002114164906), ('return', 0.14763176754185942), ('null', 0.04410182861240588), (';', 1.0), ('l', 0.0014727540500736377), ('.', 0.9047619047619048), ('size', 0.020833333333333332), ('(', 0.985838779956427), (')', 1.0), (';', 0.4777126381547333), ('form', 0.0011265987762044667), ('.', 1.0), ('add', 0.822429906542056), ('(', 0.995049504950495), ('arguments', 0.0015384615384615385), (',', 0.30612244897959184), ('context', 0.3181818181818182), ('.', 0.5559006211180124), ('put', 0.05198019801980198), ('(', 1.0), ('b', 0.0035810205908683975), ('.', 0.08333333333333333), ('setProtocol', 0.03636363636363636), ('(', 1.0), ('Protocol', 1.0), ('.', 1.0), ('BINARY', 1.0), (')', 1.0), (';', 0.6666666666666666), ('public', 0.04915063288343016), ('abstract', 0.032124556562869534), ('PwDatabase', 0.01606425702811245), ('openDatabase', 1.0), ('(', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","private static native byte [ ] { } public void readComplete ( int i = new SimpleDateFormat ( format ! = null ) { return null ; l . size ( ) ; form . add ( arguments , context . put ( b . setProtocol ( Protocol . BINARY ) ; public abstract PwDatabase openDatabase ( ) ) ) ) )"
25,"['int', 'getMaxSessionTimeout']","[('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('void', 0.04505290596213744), ('exitCode', 0.00042854081851296334), ('(', 1.0), (')', 0.5238095238095238), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('delete', 0.17464285714285716), ('(', 1.0), ('String', 0.739568345323741), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('Object', 0.3482831114225648), ('>', 0.49548387096774194), ('gets', 0.07762390670553936), ('(', 1.0), ('String', 0.977924944812362), ('.', 0.06539211861100273), ('.', 0.7353474320241692), ('.', 0.5), ('keys', 0.3872791519434629), (')', 0.997270245677889), ('throws', 0.3000554631170272), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('public', 0.22486486486486487), ('long', 0.15648403626330312), ('getPacketsReceived', 0.054626532887402456), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('PageCrawler', 0.0031565656565656565), ('crawler', 0.4838709677419355), ('=', 0.9333333333333333), ('root', 0.728), ('.', 0.9424242424242424), ('makePage', 0.1340782122905028), ('(', 1.0), ('""', 0.47770700636942676), ('creating QuorumPeer 5 port', 9.436633009342267e-05), ('""', 1.0), ('+', 1.0), ('component', 0.0002487562189054726), ('.', 1.0), ('calls', 0.8571428571428571), (')', 0.6666666666666666), (')', 1.0), (';', 0.6920507070614618), ('}', 0.17806887715655306), ('Map', 0.0008866820358219542), ('<', 0.8), ('Descriptor', 0.0023138409760201937), (',', 0.8888888888888888), ('List', 0.6190476190476191), ('<', 0.875886524822695), ('WikiPage', 0.12451923076923077), ('>', 0.9846153846153847), ('getChildren', 0.136986301369863), ('(', 1.0), (')', 0.8526785714285714), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('testNumVBuckets', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('void', 0.04505290596213744), ('setName', 0.00771373473323334), ('(', 1.0), ('String', 0.8444444444444444), ('pageName', 0.005618415918845103), (',', 0.24719101123595505), ('html', 0.06796116504854369), (')', 0.9545454545454546), (';', 0.9570405727923628)]","int getMaxSessionTimeout ( ) ; void exitCode ( ) ; Future < Boolean > delete ( String key , int exp , Object > gets ( String . . . keys ) throws IOException ; public long getPacketsReceived ( ) throws Exception { PageCrawler crawler = root . makePage ( "" creating QuorumPeer 5 port "" + component . calls ) ) ; } Map < Descriptor , List < WikiPage > getChildren ( ) ; public void testNumVBuckets ( ) ; void setName ( String pageName , html ) ;"
26,"['public', 'void']","[('setConnectionDropIncrease', 0.003637207862559975), ('(', 1.0), ('double', 1.0), ('val', 0.8662613981762918), (')', 1.0), (';', 0.969309462915601), ('return', 0.02244361483575957), ('rv', 0.00865265760197775), (';', 0.9318181818181818), ('switch', 0.046511627906976744), ('(', 1.0), ('type', 0.189873417721519), (')', 0.5611510791366906), ('{', 0.33737864077669905), ('}', 0.05062219037070819), ('public', 0.32308904649330183), ('void', 0.7639198218262806), ('testSystemStarted', 0.004875406283856988), ('(', 1.0), ('testSystem', 0.08333333333333333), (',', 0.3333333333333333), ('ExecutionLog', 0.3090909090909091), ('executionLog', 1.0), ('=', 0.20454545454545456), ('new', 1.0), ('GsonJSONSerialization', 0.001635322976287817), ('(', 1.0), ('response', 1.0), (')', 0.6580882352941176), (';', 0.6324786324786325), ('Future', 0.03465947999734918), ('<', 1.0), ('CASValue', 0.10792580101180438), (')', 'Paren balancing')]","public void setConnectionDropIncrease ( double val ) ; return rv ; switch ( type ) { } public void testSystemStarted ( testSystem , ExecutionLog executionLog = new GsonJSONSerialization ( response ) ; Future < CASValue )"
27,"['public', 'void']","[('shouldReadProvidedProperties', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('getMaxWriteQueuePollTime', 0.02338530066815145), ('(', 1.0), (')', 1.0), (':', 0.0015761653051417587), ('readQueueFactory', 0.005235602094240838), ('.', 1.0), ('create', 1.0), ('(', 0.9378698224852071), ('""', 0.5300261096605744), ('files/something/that/aint/there', 9.436633009342267e-05), ('""', 1.0), (',', 0.5), ('simpleSlimDecisionTable', 0.002404196415561708), (')', 1.0), (';', 1.0), ('long', 0.030583843248138905)]","public void shouldReadProvidedProperties ( ) ; long getMaxWriteQueuePollTime ( ) : readQueueFactory . create ( "" files/something/that/aint/there "" , simpleSlimDecisionTable ) ; long"
28,"['protected', 'Object']","[('newInstance', 0.1), ('(', 1.0), (')', 0.5641025641025641), (';', 0.4777126381547333), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('>', 0.49548387096774194), ('asyncGet', 0.0652332361516035), ('(', 1.0), ('String', 0.9551820728291317), ('prefix', 0.02091299258681233), (')', 0.9315068493150684), (';', 0.9644128113879004), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('Transcoder', 0.0672740014015417), ('<', 1.0), ('T', 0.9695639449809774), (')', 'Paren balancing')]","protected Object newInstance ( ) ; Map < String , Object > asyncGet ( String prefix ) ; long incr ( String key , int exp , Transcoder < T )"
29,"['public', 'void']","[('validateWithValidation', 0.00030954960532425323), ('(', 1.0), ('ValidationErrors', 1.0), ('errors', 0.3333333333333333), (')', 1.0), ('{', 0.1774193548387097), ('super', 0.007948400547266922), ('.', 0.9223744292237442), ('setUp', 0.15035799522673032), ('(', 1.0), (')', 0.9781746031746031), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('if', 0.08051072885263344), ('(', 1.0), ('c', 0.007317583106836713), (')', 0.5190839694656488), (';', 0.4594594594594595), ('request', 0.007267666615122932), ('.', 0.8663663663663663), ('setResource', 0.2203921568627451), ('(', 1.0), ('""', 0.6028368794326241), ('htmlScriptTable_id_0', 0.0009436633009342266), ('""', 1.0), (',', 1.0), ('responderType', 0.00014570887367040654), (')', 1.0), (';', 1.0), ('scriptTag', 3.3135258123660786e-05), ('.', 1.0), ('html', 0.7692307692307693), ('(', 1.0), (')', 0.8951612903225806), (';', 0.4777126381547333), ('Method', 0.0008283814530915196), ('setter', 0.07407407407407407), ('=', 1.0), ('type', 1.0), ('.', 0.7222222222222222), ('isPrimitive', 0.09473684210526316), ('(', 1.0), (')', 0.9166666666666666), ('+', 0.008822681403171552), ('""', 0.7475592747559274), (""' is not supported (expected 'none', 'gzip', 'bzip2' or 'xz')"", 0.0003061849357011635), ('""', 1.0)]","public void validateWithValidation ( ValidationErrors errors ) { super . setUp ( ) ; } if ( c ) ; request . setResource ( "" htmlScriptTable_id_0 "" , responderType ) ; scriptTag . html ( ) ; Method setter = type . isPrimitive ( ) + "" ' is not supported (expected 'none', 'gzip', 'bzip2' or 'xz') """
30,"['public', 'void']","[('newTestStarted', 0.005494505494505495), ('(', 1.0), ('WikiPage', 0.211864406779661), ('context', 0.1056547619047619), (',', 0.8734177215189873), ('myCat', 0.018134715025906734), (',', 1.0), ('""', 1.0), ('loginWithUsernameAndPassword', 0.0007564296520423601), ('""', 1.0), (',', 1.0), ('passFail', 0.0005099810578464228), ('(', 1.0), ('summary', 0.875), ('.', 0.34615384615384615), ('getExceptions', 0.09333333333333334), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('keys', 0.42378467453996155), (')', 0.4397163120567376), ('throws', 0.3000554631170272), ('UnsupportedOperationException', 0.00021595162683558884), ('{', 1.0), ('throw', 0.6666666666666666), ('new', 0.9767932489451476), ('IllegalStateException', 0.05291005291005291), ('(', 1.0), ('""', 0.7272727272727273), ('${=X=}', 0.000141549495140134), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('.', 0.06539211861100273), ('.', 0.7353474320241692), ('keys', 0.3872791519434629), (')', 0.997270245677889), (';', 0.6894065446478093), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void newTestStarted ( WikiPage context , myCat , "" loginWithUsernameAndPassword "" , passFail ( summary . getExceptions ( ) ; long incr ( String key , int by ) ; Map < String > keys ) throws UnsupportedOperationException { throw new IllegalStateException ( "" ${=X=} "" ) ; long decr ( String . . keys ) ; ) )"
31,"['public', 'Object']","[('convert', 0.10344827586206896), ('(', 1.0), ('String', 0.32342007434944237), ('uri', 0.008427623878267655), (',', 0.34328358208955223), ('String', 0.12195121951219512), ('key', 0.09316770186335403), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('by', 0.2550628044091259), (')', 0.4462311557788945), (';', 0.7569158328428487), ('whereUsed', 0.00013254103249464314), ('.', 0.8333333333333334), ('search', 0.7368421052631579), ('(', 1.0), ('baseDirectory', 0.03333333333333333), (',', 1.0), ('""', 0.6666666666666666), ('27 Feb, 2002', 0.0003241841365895829), (')', 'Paren balancing')]","public Object convert ( String uri , String key , int by , long by ) ; whereUsed . search ( baseDirectory , "" 27 Feb, 2002 )"
32,"['public', 'Double']","[('convert', 0.7777777777777778), ('(', 1.0), ('""', 0.45724907063197023), ('a', 0.005756346135698783), ('""', 1.0), (',', 0.527027027027027), ('renderedText', 0.0004371266210112196), (')', 1.0), (';', 1.0), ('html', 0.00296008305904703), ('.', 0.9710144927536232), ('append', 0.04728132387706856), ('(', 0.9965635738831615), ('""', 0.43297380585516176), (',zero=', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (',', 0.08405815503777538), ('liBytes', 0.0007262164124909223), (',', 1.0), ('null', 1.0), (',', 0.4018151815181518), ('null', 0.36997635933806144), (',', 0.4018151815181518), ('""', 0.08392434988179669), ('4000', 0.0002161227577263886), ('""', 1.0), (',', 0.5), ('results', 0.013769488561853416), ('.', 0.06763285024154589), ('size', 0.07), ('(', 0.985838779956427), (')', 1.0), (';', 0.4777126381547333)]","public Double convert ( "" a "" , renderedText ) ; html . append ( "" ,zero= "" ) , liBytes , null , null , "" 4000 "" , results . size ( ) ;"
33,"['public', 'void']","[('testSetUpAndTearDown', 0.0002321622039931899), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('CASResponse', 0.03859846355630504), ('>', 1.0), ('asyncCAS', 0.9907834101382489), ('(', 1.0), ('String', 0.9772727272727273), ('prefix', 0.02091299258681233), (')', 0.9315068493150684), (';', 0.9644128113879004), ('statements', 0.0004970288718549118), ('.', 0.9111111111111111), ('add', 0.8941176470588236), ('(', 0.995049504950495), ('1', 0.0057692307692307696), (')', 0.5583468395461912), (',', 0.07865168539325842), ('getPath', 0.0009077705156136529), ('(', 1.0), (')', 0.926829268292683), (';', 0.4777126381547333), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('replace', 0.11428571428571428), ('(', 1.0), ('String', 0.8125), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('loadKey', 0.00032599837000814997), (',', 1.0), ('1', 0.5), (')', 0.49184149184149184), (';', 0.450187265917603), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('x', 0.004907049164857979), ('""', 1.0), (',', 0.8473282442748091), ('request', 0.006192627130992278), (')', 0.7686472819216182), (';', 0.5648218347232752), ('exp', 0.0005632993881022334), ('.', 1.0), ('put', 0.85), ('(', 1.0), ('2L', 0.006266786034019696), (')', 'Paren balancing')]","public void testSetUpAndTearDown ( ) ; Future < CASResponse > asyncCAS ( String prefix ) ; statements . add ( 1 ) , getPath ( ) ; Future < Boolean > replace ( String key , int loadKey , 1 ) ; assertSubString ( "" x "" , request ) ; exp . put ( 2L )"
34,"['private', 'void']","[('checkCacheStatus', 0.002253944402704733), ('(', 1.0), ('long', 1.0), ('timeout', 0.388861013547416), (',', 0.9872122762148338), ('TimeUnit', 0.9625468164794008), ('unit', 0.897196261682243), (')', 1.0), (';', 0.9728682170542635), ('void', 0.04505290596213744), ('setLargeRequestThreshold', 0.011999142918362973), ('(', 1.0), ('int', 1.0), ('initLimit', 0.00402067777139575), (')', 0.7368421052631579), (';', 1.0), ('final', 0.007223486270958051), ('AtomicInteger', 0.009937888198757764), ('count', 0.1), ('=', 1.0), ('3', 0.14285714285714285), (';', 0.8679245283018868), ('int', 0.1346153846153846), ('getRequestThrottleStallTime', 0.02823179791976226), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('<', 0.033080032693454685), ('T', 1.0)]","private void checkCacheStatus ( long timeout , TimeUnit unit ) ; void setLargeRequestThreshold ( int initLimit ) ; final AtomicInteger count = 3 ; int getRequestThrottleStallTime ( ) ; < T"
35,"['public', 'void']","[('testIncludesBody', 0.00030954960532425323), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('(', 0.045177482968806026), ('(', 0.13333333333333333), ('resource', 0.0011049723756906078), (')', 0.7811320754716982), (')', 0.1526479750778816), (';', 0.6920507070614618), ('testPage', 0.00037553292540148887), ('=', 0.5897435897435898), ('crawler', 0.17557251908396945), ('.', 1.0), ('addPage', 0.7028985507246377), ('(', 1.0), ('testPage', 0.0034934497816593887), (',', 0.3944954128440367), ('classPathElements', 0.008), (',', 1.0), ('Set', 0.6), ('<', 0.9032258064516129), ('SelectionKey', 0.01284796573875803), ('>', 1.0), ('(', 0.25), ('count', 0.025962399283795883), (')', 0.6101694915254238), (';', 0.7415730337078652), ('if', 0.01729660474055093), ('(', 1.0), ('zkServer', 0.0014635166213673428), ('.', 0.42105263157894735), ('getConf', 0.14285714285714285), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('html', 0.00296008305904703), ('.', 0.9710144927536232), ('startsWith', 0.02127659574468085), ('(', 1.0), ('""', 0.7096774193548387), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void testIncludesBody ( ) { return ( ( resource ) ) ; testPage = crawler . addPage ( testPage , classPathElements , Set < SelectionKey > ( count ) ; if ( zkServer . getConf ( ) ; html . startsWith ( "" ) ) ) )"
36,"['Object', 'next']","[('(', 1.0), (')', 'Paren balancing')]",Object next ( )
37,"['public', 'static']","[('void', 0.32053941908713696), ('main', 0.16009852216748768), ('(', 1.0), (')', 'Paren balancing')]",public static void main ( )
38,"['public', 'void']","[('testDoesntRegardNonAnnotatedTypesAsResources', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('will', 0.006627051624732157), ('(', 1.0), ('returnValue', 0.972176759410802), ('(', 0.9983193277310924), ('dispatcher', 0.026533996683250415), (')', 0.975), (')', 0.41025641025641024), (';', 0.6920507070614618), ('assertTrue', 0.013176787647175772), ('(', 1.0), ('""', 0.20545212765957446), ('stat', 0.0016514107766348967), ('""', 1.0), (',', 0.868421052631579), ('proxifier', 0.00014570887367040654), (',', 0.6666666666666666), ('null', 0.10204081632653061), (')', 0.5957095709570958), ('.', 0.01437632135306554), ('produce', 0.0012773023374632775), ('(', 1.0), ('final', 0.5641025641025641), ('List', 0.01003584229390681), ('<', 0.9807692307692307), ('Route', 0.01826923076923077), ('>', 0.9649122807017544), ('rulesFor', 0.03636363636363636), ('(', 1.0), ('new', 0.3793103448275862), ('WatchedEvent', 0.003436426116838488), ('(', 1.0), ('Watcher', 0.47058823529411764), ('.', 0.2708333333333333), ('Event', 1.0), ('.', 0.9791666666666666), ('EventType', 0.6071428571428571), ('type', 0.20588235294117646), (',', 0.7435897435897436), ('String', 0.061224489795918366), ('hp', 0.0008873114463176575), (',', 0.21212121212121213), ('ClientBase', 0.36), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void testDoesntRegardNonAnnotatedTypesAsResources ( ) ; will ( returnValue ( dispatcher ) ) ; assertTrue ( "" stat "" , proxifier , null ) . produce ( final List < Route > rulesFor ( new WatchedEvent ( Watcher . Event . EventType type , String hp , ClientBase ) ) )"
39,"['public', 'void']","[('testTestSummary', 0.0006190992106485065), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('scan', 0.0007891414141414141), ('.', 0.16666666666666666), ('moveNext', 1.0), ('(', 1.0), ('1', 0.2647058823529412), (')', 0.5583468395461912), (';', 0.450187265917603), ('assertNotNull', 0.0024299189290684572), ('(', 1.0), ('page', 0.04878048780487805), (',', 0.31853496115427304), ('String', 0.16555183946488294), ('key', 0.09316770186335403), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('def', 0.48320943347859524), (',', 0.4470338983050847), ('int', 0.9791183294663574), ('xid', 0.0008149959250203749), (')', 1.0), ('{', 0.375), ('return', 0.14763176754185942), ('null', 0.04410182861240588), (';', 1.0), ('}', 0.41384388807069217), ('else', 0.0523142401134953), ('{', 0.7423312883435583), ('LOG', 0.07630522088353414), ('.', 1.0), ('info', 0.5220994475138122), ('(', 0.9577777777777777), ('""', 0.9205298013245033), ('classes', 0.00023591582523355665), ('""', 1.0), (')', 0.5555555555555556), (',', 0.08405815503777538), ('new', 0.10003631082062454), ('NoDocsCallback', 0.00047709923664122136), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('thenReturn', 0.0818750798313961), ('(', 1.0), ('""', 0.2792511700468019), ('1, 2, 3', 4.7183165046711336e-05), ('""', 1.0), (',', 1.0), ('WatcherType', 0.0005828354946816261), ('.', 0.6428571428571429), ('Any', 0.2631578947368421), (',', 0.8), ('false', 1.0), (')', 0.5782312925170068), ('.', 0.022964509394572025), ('setVirtualCoupling', 0.00012773023374632777), ('(', 1.0), ('coupling', 1.0), (')', 1.0), (';', 1.0), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 0.47809377401998465), ('throws', 0.23660977045320777), ('PluginException', 0.010365678088108263), (';', 0.5555555555555556), ('void', 0.425), ('setTickTime', 0.00385686736661667), ('(', 1.0), ('int', 0.9367088607594937), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void testTestSummary ( ) throws Exception { scan . moveNext ( 1 ) ; assertNotNull ( page , String key , int by , long def , int xid ) { return null ; } else { LOG . info ( "" classes "" ) , new NoDocsCallback ( ) . thenReturn ( "" 1, 2, 3 "" , WatcherType . Any , false ) . setVirtualCoupling ( coupling ) ; long decr ( String key , int by ) throws PluginException ; void setTickTime ( int ) ) )"
40,"['public', 'void']","[('setUp', 0.02832378888716917), ('(', 1.0), (')', 0.9781746031746031), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('int', 0.20082774931020891), ('getTickTime', 0.04176706827309237), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('isType', 0.0032269630692004303), ('(', 1.0), ('SymbolType', 0.40384615384615385), ('.', 0.6778523489932886), ('CloseBrace', 0.019417475728155338), ('}', 0.625), (')', 1.0), (';', 0.7686567164179104), ('int', 0.01989219996023769), ('columnCount', 0.0009905894006934125), ('=', 1.0), ('table', 1.0), ('.', 1.0), ('appendCellToRow', 0.021660649819494584), ('(', 1.0), ('row', 0.125), ('!', 0.006134969325153374), ('=', 1.0), ('null', 0.7410909090909091), (';', 0.19305019305019305), ('for', 0.017673048600883652), ('(', 1.0), ('PubSubException', 0.0007855459544383347), ('exception', 0.3333333333333333), (')', 0.9166666666666666), ('+', 0.012658227848101266), ('""', 0.7475592747559274), ('Key3: Value3', 0.0009185548071034905), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('""', 0.3485074626865672), ('|!-var-!|!-func?-!|', 0.0003061849357011635), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('""', 0.3485074626865672), ('?refactor', 0.0003061849357011635), ('\\""', 1.0), ('accesskey=', 1.0), ('\\""', 1.0), ('p', 0.10344827586206896), ('\\""', 1.0), ('>Properties</a>', 1.0), ('""', 1.0), ('+', 0.3333333333333333), ('Long', 0.01990049751243781), ('.', 1.0), ('valueOf', 0.1483050847457627), ('(', 1.0), ('2', 0.06285714285714286), (',', 0.4410480349344978), ('lines', 0.004728132387706856), ('.', 0.8888888888888888), ('add', 0.1276595744680851), ('(', 0.995049504950495), ('ParametersInstantiatorInterceptor', 0.005384615384615384), ('.', 1.0), ('FLASH_PARAMETERS', 0.15217391304347827), (')', 0.8571428571428571), (',', 0.3333333333333333), ('true', 0.005628177196804648), (')', 0.7048832271762208), (')', 0.20113314447592068), (';', 0.6920507070614618), ('long', 0.030583843248138905), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('flush', 0.2646428571428571), ('(', 1.0), (')', 0.5180288461538461), (')', 0.1723209995194618), (';', 0.6920507070614618), ('order', 0.00022090172082440523), ('.', 1.0), ('verify', 1.0), ('(', 1.0), ('""', 0.3241106719367589), ('hel||lo', 4.7183165046711336e-05), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('value', 0.0027015344715798574), ('""', 1.0), (')', 0.6944444444444444), (';', 0.6090406958288362), ('if', 0.01729660474055093), ('(', 1.0), ('!', 0.1421701860756847), ('parser', 0.006648936170212766), ('.', 1.0), ('parseToWithSymbols', 0.016666666666666666), ('(', 1.0), ('SymbolType', 0.8571428571428571), ('.', 0.6778523489932886), ('Empty', 0.05339805825242718), (')', 1.0), ('return', 0.7272727272727273), ('true', 0.08296296296296296), (';', 1.0), ('boolean', 0.006818181818181818), ('canHandle', 0.004737295434969853), ('(', 1.0), ('""', 0.4953271028037383), ('2.10.', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('void', 0.04505290596213744), ('fixupOps', 0.011784872509106493), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('0', 0.07330659536541889), (')', 0.5217086834733894), (',', 0.06942823803967328), ('hdr', 0.0007262164124909223), ('.', 0.46153846153846156), ('getZxid', 0.42857142857142855), ('(', 1.0), (')', 0.7755102040816326), ('{', 0.09111004324843826), ('try', 0.02619063131148609), ('{', 0.9737302977232924), ('TrieNode', 0.0008771929824561404), ('parent', 1.0), ('=', 1.0), ('reader', 0.05172413793103448), ('.', 1.0), ('read', 0.30434782608695654), ('(', 1.0), ('1', 0.02531645569620253), (',', 0.4359805510534846), ('""', 0.02823529411764706), ('Mon, 20 Aug 2007 15:25:57 +0200', 0.0007564296520423601), ('""', 1.0), (')', 1.0), (')', 0.23592152879182274), (';', 0.6920507070614618), ('}', 0.17806887715655306), (';', 0.0030147189217946445), ('instruction', 0.00398406374501992), ('=', 0.25), ('ensure', 0.04), ('(', 1.0), ('row', 0.8), ('(', 0.09815950920245399), ('""', 1.0), ('suiteExecutionReport', 0.00070774747570067), ('""', 1.0), (',', 0.8), ('false', 0.009471076788576425), (')', 0.5782312925170068), (';', 0.6931106471816284), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void setUp ( ) ; public int getTickTime ( ) { return isType ( SymbolType . CloseBrace } ) ; int columnCount = table . appendCellToRow ( row ! = null ; for ( PubSubException exception ) + "" Key3: Value3 \ n "" + "" |!-var-!|!-func?-!| \ n "" + "" ?refactor \"" accesskey= \"" p \"" >Properties</a> "" + Long . valueOf ( 2 , lines . add ( ParametersInstantiatorInterceptor . FLASH_PARAMETERS ) , true ) ) ; long incr ( String key , Transcoder < T > Future < Boolean > flush ( ) ) ; order . verify ( "" hel||lo "" , "" value "" ) ; if ( ! parser . parseToWithSymbols ( SymbolType . Empty ) return true ; boolean canHandle ( "" 2.10. "" ) ; void fixupOps ( ) ; assertEquals ( 0 ) , hdr . getZxid ( ) { try { TrieNode parent = reader . read ( 1 , "" Mon, 20 Aug 2007 15:25:57 +0200 "" ) ) ; } ; instruction = ensure ( row ( "" suiteExecutionReport "" , false ) ; ) )"
41,"['public', 'void']","[('testOptionParser_whenOptionWithoutValue_expectOneKeyAndNullValue', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('final', 0.014528633787217408), ('Resource', 0.03571428571428571), ('resource', 0.9565217391304348), ('=', 0.6052631578947368), ('(', 0.00558659217877095), ('Type', 0.0009285051067780873), ('generic', 0.1111111111111111), (')', 1.0), (';', 0.6), ('cell', 0.0001656762906183039), ('.', 0.7647058823529411), ('text', 0.14035087719298245), ('(', 0.8857142857142857), (')', 0.8709677419354839), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('}', 'Bracket balancing')]",public void testOptionParser_whenOptionWithoutValue_expectOneKeyAndNullValue ( ) { final Resource resource = ( Type generic ) ; cell . text ( ) ; assertEquals )
42,"['void', 'testOutputChunk']","[('(', 1.0), ('String', 0.6791044776119403), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (')', 0.44536817102137766), ('throws', 0.24010554089709762), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('getResultsForPageContents', 0.005366161616161616), ('(', 1.0), ('""', 1.0), ('10.00', 0.00023591582523355665), ('""', 1.0), (',', 0.4), ('mainHtml', 0.0010199621156928456), (')', 1.0), (';', 1.0), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('Future', 0.17011375387797312), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('touch', 0.09), ('(', 1.0), ('final', 0.9064748201438849), ('int', 0.09175627240143369), ('startPosition', 0.002364066193853428), ('=', 0.5), ('step', 0.5), ('.', 1.0), ('token', 0.5555555555555556), (')', 0.6), (';', 0.75), ('int', 0.01989219996023769), ('getLastClientResponseSize', 0.04011887072808321), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('if', 0.01729660474055093), ('(', 1.0), ('f', 0.0035542546518921177), (')', 0.20253164556962025), ('{', 0.175), ('subHandlers', 6.515082415792559e-05), ('.', 1.0), ('add', 0.2), ('(', 0.995049504950495), ('Op', 0.005384615384615384), ('.', 0.972972972972973), ('create', 0.5), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","void testOutputChunk ( String key , int exp ) throws Exception { getResultsForPageContents ( "" 10.00 "" , mainHtml ) ; < T > Future < Boolean > touch ( final int startPosition = step . token ) ; int getLastClientResponseSize ( ) ; if ( f ) { subHandlers . add ( Op . create ) ) )"
43,"['WikiPage', 'addChildPage']","[('(', 1.0), ('""', 0.5909090909090909), ('|a|', 0.000849296970840804), ('""', 0.07142857142857142), (',', 1.0), ('""', 0.38678420515809414), ('host', 0.0002161227577263886), ('""', 1.0), (',', 0.6666666666666666), ('""', 0.38678420515809414), ('2message:<<Bad things>>', 0.0001080613788631943), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('public', 0.04915063288343016), ('int', 0.20082774931020891), ('getMinSessionTimeout', 0.0570281124497992), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertFalse', 0.005390001988115487), ('(', 1.0), ('pathParentIterator', 0.017605633802816902), ('.', 1.0), ('atParentPath', 0.2894736842105263), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('long', 0.15648403626330312), ('getTxnLogElapsedSyncTime', 0.11036789297658862), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('parsedObject', 3.3135258123660786e-05), ('=', 1.0), ('DataType', 1.0), ('.', 1.0), ('STRING', 0.16666666666666666), (',', 0.5), ('DataType', 1.0), ('.', 1.0), ('STRING', 0.16666666666666666), ('.', 0.5), ('parse', 1.0), ('(', 1.0), ('pageTwoName', 0.0011154489682097045), (')', 0.2857142857142857), (';', 1.0), ('final', 0.007223486270958051), ('ResourceMethod', 0.018633540372670808), ('expected', 0.3050847457627119), ('=', 1.0), ('{', 0.05084745762711865), ('""', 0.4782608695652174), ('arg1', 0.009732360097323601), ('""', 1.0), (',', 0.9166666666666666), ('""', 0.38678420515809414), ('test3', 0.0008644910309055544), ('""', 1.0), (')', 1.0), (',', 0.08405815503777538), ('""', 0.23656499636891795), ('9', 0.0015128593040847202), ('""', 1.0), (',', 0.15789473684210525), ('w', 0.001384234299868862), ('.', 1.0), ('toString', 0.027777777777777776), ('(', 1.0), (')', 0.8720666161998486), (';', 0.4777126381547333), ('xmlChecker', 0.0002319468068656255), ('.', 1.0), ('assertXmlReportOfSlimScenarioTableIsCorrect', 0.047619047619047616), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('writeSize', 0.0007968127490039841), ('(', 1.0), ('count', 0.5714285714285714), (')', 0.6101694915254238), (';', 0.7415730337078652), ('exp', 0.0005632993881022334), ('.', 1.0), ('put', 0.85), ('(', 1.0), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","WikiPage addChildPage ( "" |a| "" , "" host "" , "" 2message:<<Bad things>> "" ) ; public int getMinSessionTimeout ( ) ; assertFalse ( pathParentIterator . atParentPath ( ) ; public long getTxnLogElapsedSyncTime ( ) ; parsedObject = DataType . STRING , DataType . STRING . parse ( pageTwoName ) ; final ResourceMethod expected = { "" arg1 "" , "" test3 "" ) , "" 9 "" , w . toString ( ) ; xmlChecker . assertXmlReportOfSlimScenarioTableIsCorrect ( ) throws IOException { writeSize ( count ) ; exp . put ( ) ) )"
44,"['private', 'String']","[('createLongPath', 0.002638522427440633), ('(', 1.0), ('numDirectories', 0.5), (',', 1.0), ('nameLength', 0.5), (')', 1.0), (';', 0.5), ('provider', 0.00038657801144270914), ('=', 0.2894736842105263), ('new', 0.5), ('RequestContextListener', 0.0007008527041233501), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('ServletException', 0.004678951914771091), (',', 0.6153846153846154), ('IOException', 1.0), ('{', 0.6968085106382979), ('Locale', 0.002390438247011952), ('.', 1.0), ('GERMANY', 0.06349206349206349), (',', 0.5), ('locale', 1.0), ('}', 'Bracket balancing')]","private String createLongPath ( numDirectories , nameLength ) ; provider = new RequestContextListener ( ) throws ServletException , IOException { Locale . GERMANY , locale )"
45,"['public', 'synchronized']","[('void', 0.6790123456790124), ('reconfigFlagSet', 0.020833333333333332), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('formatter', 0.003678013651726347), ('.', 0.9641791044776119), ('announceNumberTestsToRun', 0.08390022675736962), ('(', 1.0), ('int', 0.3125), ('delay', 0.10913268236645605), (')', 0.9637305699481865), (';', 0.9894894894894894), ('one', 0.005169100267291082), ('(', 1.0), ('request', 0.20549927641099855), (',', 0.18280871670702178), ('response', 0.25663716814159293), ('.', 0.7636363636363637), ('getContent', 0.294478527607362), ('(', 1.0), (')', 0.9714795008912656), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('doSimpleRun', 0.001893939393939394), ('(', 1.0), ('crashFixtureTable', 0.05128205128205128), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('<', 0.21625951141369643), ('T', 1.0), ('>', 0.9951795613400819), ('BulkFuture', 0.051913133402275075), ('<', 1.0), ('Map', 1.0), ('<', 0.9933283914010378), ('String', 0.7833403449726546), ('>', 0.39886867451460023), ('>', 0.17165613842351002), ('getStats', 0.17270788912579957), ('(', 1.0), (')', 0.5538461538461539), (';', 0.4777126381547333), ('v', 0.0008946519693388412), ('.', 1.0), ('add', 0.8012820512820513), ('(', 0.995049504950495), ('watchers', 0.003076923076923077), ('=', 0.5), ('=', 0.47619047619047616), ('null', 0.518327605956472), (')', 0.5761475761475762), ('{', 0.37463002114164906), ('return', 0.14763176754185942), (';', 0.03728935102187164), ('}', 0.9016393442622951), ('synchronized', 0.0033693917361234263), ('(', 0.9545454545454546), ('qa', 0.033783783783783786), ('.', 0.4), ('ops', 0.3181818181818182), ('.', 1.0), ('remove', 0.05555555555555555), ('(', 1.0), ('path', 0.11219512195121951), ('.', 0.08980582524271845), ('addName', 0.07964601769911504), ('(', 1.0), ('""', 0.8), ('linkName', 0.0008021138057940927), ('""', 1.0), (')', 0.05555555555555555), (';', 0.6090406958288362), ('}', 0.17806887715655306), ('assertHasRegexp', 0.0003546728143287817), ('(', 1.0), ('""', 0.9006410256410257), ('<t></t><t></t></t>', 4.7183165046711336e-05), ('""', 1.0), (',', 1.0), ('throttler', 0.00014570887367040654), ('.', 1.0), ('checkLimit', 0.2857142857142857), ('(', 1.0), ('1', 1.0), (')', 0.5583468395461912), ('.', 0.08164794007490636), ('containsKey', 0.0010218418699706221), ('(', 1.0), ('descriptor', 0.046875), ('.', 0.2971014492753623), ('set', 0.08695652173913043), ('(', 0.9844559585492227), ('String', 0.4244604316546763), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('def', 0.48320943347859524), (',', 0.4470338983050847), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","public synchronized void reconfigFlagSet ( ) ; formatter . announceNumberTestsToRun ( int delay ) ; one ( request , response . getContent ( ) throws Exception { doSimpleRun ( crashFixtureTable ( ) throws OperationTimeoutException ; < T > BulkFuture < Map < String > > getStats ( ) ; v . add ( watchers = = null ) { return ; } synchronized ( qa . ops . remove ( path . addName ( "" linkName "" ) ; } assertHasRegexp ( "" <t></t><t></t></t> "" , throttler . checkLimit ( 1 ) . containsKey ( descriptor . set ( String key , int by , long def , ) ) ) ) ) ) )"
46,"['public', 'void']","[('testIncludesHeading', 0.0004643244079863798), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('Integer', 0.005570409982174688), ('.', 0.7777777777777778), ('MAX_VALUE', 0.03741496598639456), (')', 0.6666666666666666), (';', 0.3), ('System', 0.0053347765579093865), ('.', 1.0), ('out', 0.2277542372881356), ('.', 0.9348837209302325), ('println', 0.6353383458646616), ('(', 1.0), ('""', 0.7150997150997151), ('Suite', 0.001981692931961876), ('""', 1.0), (')', 0.8823529411764706), (';', 0.6090406958288362), ('assertHasRegexp', 0.0033245708984072984), ('(', 1.0), ('""', 0.9006410256410257), ('includePaths', 0.00033028215532697935), ('""', 1.0), (',', 0.8571428571428571), ('versions', 0.0005099810578464228), ('.', 0.6666666666666666), ('add', 0.06060606060606061), ('(', 0.995049504950495), ('route', 0.004230769230769231), (')', 0.5774647887323944), ('.', 0.4909090909090909), ('set', 0.004215097713628816), ('(', 0.9844559585492227), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void testIncludesHeading ( ) ; assertEquals ( Integer . MAX_VALUE ) ; System . out . println ( "" Suite "" ) ; assertHasRegexp ( "" includePaths "" , versions . add ( route ) . set ( ) )"
47,"['public', 'void']","[('sendError', 0.0002321622039931899), ('(', 1.0), ('0', 0.14285714285714285), (',', 0.4376750700280112), ('""', 0.022894521668029435), (')', 0.008104603414739573), (';', 0.6090406958288362), ('SignatureVisitor', 0.000254036978948066), ('visitSuperclass', 0.08695652173913043), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('return', 0.032512626262626264), ('serializer', 0.0017927572606669057), ('.', 0.4), ('from', 0.65), ('(', 0.98), ('T', 0.1925925925925926), (')', 0.10734463276836158), ('new', 0.15789473684210525), ('URL', 0.023255813953488372), ('[', 0.5833333333333334), (']', 0.8888888888888888), ('bytes', 0.017555481947664788), ('=', 0.5849056603773585), ('new', 0.3888888888888889), ('DefaultResourceMethod', 0.007709379745356851), ('(', 1.0), ('new', 0.11267605633802817), ('LocalDate', 0.0006872852233676976), ('(', 1.0), ('2010', 1.0), (',', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void sendError ( 0 , "" ) ; SignatureVisitor visitSuperclass ( ) throws Exception { return serializer . from ( T ) new URL [ ] bytes = new DefaultResourceMethod ( new LocalDate ( 2010 , ) ) )"
48,"['public', 'static']","[('TypeAdapter', 0.008298755186721992), ('on', 0.875), ('(', 1.0), ('f', 0.23404255319148937), (')', 0.20253164556962025), ('throws', 0.35), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (',', 0.5207532667179093), ('long', 0.9741735537190083), ('by', 0.2550628044091259), (',', 0.5537688442211055), ('long', 0.9741735537190083), ('by', 0.2550628044091259), (',', 0.5537688442211055), ('long', 0.9741735537190083), ('casId', 0.143809279671879), (',', 0.998220640569395), ('T', 0.2992957746478873), ('>', 0.6264626462646264), (')', 'Paren balancing')]","public static TypeAdapter on ( f ) throws OperationTimeoutException ; long decr ( String key , int by , long by , long by , long casId , T > )"
49,"['private', 'void']","[('restartServer', 0.002253944402704733), ('(', 1.0), ('Map', 1.0), ('<', 0.6428571428571429), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('>', 0.49548387096774194), ('>', 0.32798833819241985), ('getStats', 0.17270788912579957), ('(', 1.0), ('String', 0.4444444444444444), ('json', 7.803355442840422e-05), (')', 0.2), (';', 0.75), ('content', 0.0002650820649892863), ('=', 0.6896551724137931), ('(', 0.057692307692307696), ('s', 0.0009285051067780873), ('!', 0.03347280334728033), ('=', 1.0), ('o', 0.008), (')', 0.6444444444444445), ('{', 0.17298937784522003), ('return', 0.14763176754185942), ('scanner', 0.0007171029042667623), ('.', 1.0), ('substring', 0.01935483870967742), ('(', 1.0), ('1', 0.22340425531914893), (',', 0.4359805510534846), ('page', 0.00823529411764706), (',', 0.3287671232876712), ('slimClient', 0.011705685618729096), (',', 0.5294117647058824), ('testSystemListener', 0.5714285714285714), (')', 0.5714285714285714), ('{', 0.07692307692307693), ('return', 0.14763176754185942), ('parseIgnoreFirst', 0.0007171029042667623), ('(', 1.0), ('Scanner', 0.3), ('scanner', 0.7857142857142857), (')', 0.547945205479452), (';', 0.3902439024390244), ('MockResponseSender', 0.0006737502485144359), ('sender', 1.0), ('=', 1.0), ('new', 0.9146341463414634), ('byte', 0.016002803410816495), ('[', 1.0), (']', 0.7630057803468208), ('data', 0.07817157999337529), (',', 0.6822033898305084), ('OperationCallback', 0.503968253968254), ('cb', 0.9263157894736842), (')', 0.9915966386554622), (';', 0.9366812227074236), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('orig', 0.004456327985739751), ('[', 0.5263157894736842), ('i', 0.08333333333333333), (']', 0.9539295392953929), (';', 0.13764044943820225), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","private void restartServer ( Map < String , Object > > getStats ( String json ) ; content = ( s ! = o ) { return scanner . substring ( 1 , page , slimClient , testSystemListener ) { return parseIgnoreFirst ( Scanner scanner ) ; MockResponseSender sender = new byte [ ] data , OperationCallback cb ) ; assertEquals ( orig [ i ] ; ) ) )"
50,"['public', 'void']","[('setConnectionFreezeTime', 0.0032502708559046588), ('(', 1.0), ('int', 1.0), ('col', 0.06921309592188397), (',', 0.9194139194139194), ('int', 0.8233333333333334), ('by', 0.4236348818255909), (')', 0.47809377401998465), ('throws', 0.23660977045320777), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('finalErrorCount', 0.0015936254980079682), ('=', 1.0), ('0', 0.3333333333333333), (';', 0.6786355475763016), ('i', 0.47447073474470736), ('<', 0.4816933638443936), ('zk', 0.004415011037527594), ('.', 1.0), ('close', 0.14285714285714285), ('(', 0.9977220956719818), (')', 0.9647266313932981), ('throws', 0.13210956271023547), ('InterruptedException', 0.014036855744313273), ('{', 0.558974358974359), ('testCommand', 0.039603960396039604), ('(', 1.0), ('cmdName', 0.15), (',', 0.625), ('new', 0.3333333333333333), ('WikiPagePath', 0.0014312977099236641), ('(', 1.0), (')', 0.4090909090909091), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('WikiPagePath', 0.00615530303030303), ('pathOfWikiWord', 0.05263157894736842), ('=', 1.0), ('=', 0.25), ('ZooDefs', 0.000572737686139748), ('.', 1.0), ('OpCode', 0.39805825242718446), ('.', 1.0), ('ping', 0.045454545454545456), (')', 1.0), (';', 0.6666666666666666), ('}', 0.17806887715655306), ('public', 0.0813974108884554), ('void', 0.7639198218262806), ('processResult', 0.00959603776505185), ('(', 1.0), ('int', 0.9527027027027027), ('delay', 0.10913268236645605), (')', 0.9637305699481865), (';', 0.9894894894894894), ('}', 0.17806887715655306), ('catch', 0.058698350771413374), ('(', 1.0), ('ExecutionException', 0.0103359173126615), ('e', 1.0), (')', 1.0), ('throws', 0.033566433566433566), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('}', 'Bracket balancing')]","public void setConnectionFreezeTime ( int col , int by ) throws IOException { finalErrorCount = 0 ; i < zk . close ( ) throws InterruptedException { testCommand ( cmdName , new WikiPagePath ( ) throws Exception { WikiPagePath pathOfWikiWord = = ZooDefs . OpCode . ping ) ; } public void processResult ( int delay ) ; } catch ( ExecutionException e ) throws IOException ; )"
51,"['public', 'void']","[('run', 0.014935768456895218), ('(', 1.0), (')', 0.8265682656826568), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('gotData', 0.002321622039931899), ('(', 1.0), ('key', 0.18181818181818182), (',', 0.4709480122324159), ('final', 0.056950067476383266), ('int', 0.3832468495181616), ('i', 0.0035460992907801418), ('=', 0.9117647058823529), ('0', 0.7551789077212806), (';', 0.6786355475763016), ('return', 0.0037359900373599006), ('response', 0.04903172641120725), (';', 0.9774436090225563), ('while', 0.007692307692307693), ('(', 1.0), ('(', 0.1), ('WikiTestPage', 0.02983425414364641), ('testPage', 0.10185185185185185), (')', 0.4117647058823529), (')', 0.18243243243243243), ('[', 0.0007322319344652419), ('0', 0.6388888888888888), (']', 1.0), ('=', 0.05970149253731343), ('new', 0.32266666666666666), ('Properties', 0.006658100689171826), ('(', 1.0), (')', 0.9322033898305084), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('assertRenders', 0.0003156565656565657), ('(', 1.0), ('""', 0.6666666666666666), ('action', 0.000566197980560536), ('""', 1.0), (',', 0.8461538461538461), ('expectation', 0.0008013988051872359), ('.', 0.9166666666666666), ('getCol', 0.08823529411764706), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('int', 0.01989219996023769), ('getMinClientResponseSize', 0.04061416542842992), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('commitProcessor', 0.0002319468068656255), ('.', 0.42857142857142855), ('commit', 0.29411764705882354), ('(', 1.0), ('PageData', 0.22518159806295399), ('.', 0.4517133956386293), ('PropertySUITES', 0.3803680981595092), (',', 0.5483870967741935), ('""', 0.9142857142857143), ('abc', 0.0012967365463583316), ('""', 1.0), (',', 0.3114754098360656), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void run ( ) ; public void gotData ( key , final int i = 0 ; return response ; while ( ( WikiTestPage testPage ) ) [ 0 ] = new Properties ( ) throws Exception { assertRenders ( "" action "" , expectation . getCol ( ) ; int getMinClientResponseSize ( ) ; commitProcessor . commit ( PageData . PropertySUITES , "" abc "" , ) ) ) )"
52,"['public', 'void']","[('setConnectionTokenFillCount', 0.0031728834545735954), ('(', 1.0), ('int', 1.0), ('clientPort', 0.0005743825387708214), ('=', 0.6666666666666666), ('PortAssignment', 0.5), ('.', 1.0), ('unique', 0.9925373134328358), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), (')', 'Paren balancing')]",public void setConnectionTokenFillCount ( int clientPort = PortAssignment . unique ( ) ; )
53,"['private', 'HtmlPage']","[('makeHtml', 0.9090909090909091), ('(', 1.0), ('FitNesseContext', 0.38461538461538464), ('context', 0.8857142857142857), (',', 0.5346534653465347), ('Request', 0.17746113989637305), ('request', 1.0), (')', 0.7859778597785978), ('.', 0.1865049279757392), ('getData', 0.004853748882360454), ('(', 0.9850374064837906), (')', 0.9167616875712656), ('+', 0.008822681403171552), ('""', 0.7475592747559274), ('end of line comment. */ /* Comment belong to new field */', 0.000612369871402327), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('ignores', 0.0009950248756218905), ('+', 1.0), ('=', 0.5), ('expectedResult', 0.024291497975708502), (';', 1.0), ('expectedResult', 0.75), ('=', 0.42857142857142855), ('""', 1.0), ('size', 0.0017064846416382253), ('""', 1.0), (',', 0.35714285714285715), ('e', 0.006119772694157075), (',', 0.007194244604316547), ('""', 0.16666666666666666), ('method', 0.0020531661984006916), ('""', 1.0), (',', 0.5217391304347826), ('""', 0.38678420515809414), ('NO', 0.0001080613788631943), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('""', 0.06040631078452561), (',', 0.34516928158546656), ('content', 0.02564476176599155), (',', 0.007211538461538462), ('not', 0.03389830508474576), ('(', 1.0), ('containsString', 0.4827586206896552), ('(', 1.0), ('""', 0.9459459459459459), ('new stuff', 0.0007549306407473814), ('""', 1.0), (')', 0.875), (';', 0.6090406958288362), ('mockery', 0.007444387991782456), ('.', 0.9985380116959064), ('checking', 0.1893028846153846), ('(', 1.0), ('new', 0.9824046920821115), ('DigestCalculator', 0.0003436426116838488), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertTrue', 0.013176787647175772), ('(', 1.0), ('sender', 0.0006648936170212766), (')', 0.8), (';', 0.5), ('testResults', 7.731560228854182e-05), ('=', 0.8571428571428571), ('pageData', 0.6), (';', 0.21875), ('String', 0.125), ('content', 0.04798534798534799), ('=', 0.5749128919860628), ('getResponseContentUsingSearchString', 0.057692307692307696), ('(', 1.0), ('""', 0.875), ('classes', 0.00023591582523355665), ('""', 1.0), (',', 0.4444444444444444), ('999', 0.00014570887367040654), ('D', 0.5), ('/', 1.0), ('2', 1.0), (')', 0.21052631578947367), (',', 0.08208955223880597), ('new', 0.10003631082062454), ('byte', 0.06631679389312978), ('[', 1.0), (']', 0.7630057803468208), ('{', 0.24677045379264656), ('""', 0.45100671140939597), ('Page', 0.019464720194647202), ('""', 1.0), (',', 0.9166666666666666), ('expectedEntity', 0.0002185633105056098), (')', 1.0), (';', 0.8181818181818182), ('app', 1.104508604122026e-05), ('.', 1.0), ('call', 1.0), ('(', 1.0), ('String', 0.1774193548387097), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('row', 0.04482477587612062), (',', 0.6459854014598541), ('SlimExpectation', 0.0049504950495049506), ('expectation', 1.0), (')', 1.0), (';', 0.5454545454545454), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('flush', 0.2646428571428571), ('(', 1.0), (')', 0.5180288461538461), (';', 0.4777126381547333), ('ZooKeeperServer', 0.00035344275331904834), ('zks', 0.7428571428571429), ('=', 0.967741935483871), ('new', 0.8780487804878049), ('ZipOutputStream', 0.00011680878402055835), ('(', 1.0), ('new', 1.0), ('Expectations', 0.10893470790378007), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Transcoder', 0.0008394265391327399), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('gets', 0.02171664943123061), ('(', 1.0), ('String', 0.977924944812362), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('int', 0.01989219996023769), ('createModeFlag', 0.0004952947003467063), ('=', 1.0), ('6789', 1.0), (';', 1.0), ('List', 1.0), ('<', 0.9456681350954479), ('Object', 0.1110576923076923), ('>', 0.9740680713128039), ('getDefaultTranscoder', 0.021137026239067054), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), (')', 0.0006074797322671143), ('{', 0.8135593220338984), ('}', 0.05062219037070819), ('@Path', 0.07092198581560284), ('(', 1.0), ('""', 0.8969072164948454), ('./somepath/content.txt', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (')', 0.23592152879182274), ('{', 0.07189602306530593), ('try', 0.02619063131148609), ('{', 0.9737302977232924), ('final', 0.015789473684210527), ('ResourceMethod', 0.07857142857142857), ('method', 0.6440677966101694), (',', 0.20955882352941177), ('MutableRequest', 0.03880070546737213), ('request', 1.0), (',', 0.058823529411764705), ('HttpServletResponse', 0.04129793510324484), ('.', 0.5), ('class', 0.7605633802816901), (',', 0.31704361873990305), ('""', 0.12532133676092544), ('""', 0.06040631078452561), ('.', 0.023121387283236993), ('""', 0.30612244897959184), (',', 0.16083916083916083), ('EditResponder', 0.0005828354946816261), ('.', 1.0), ('HELP_TEXT', 0.11538461538461539), ('+', 0.75), ('""', 1.0), ('~', 0.001837109614206981), ('""', 1.0), ('+', 0.5), ('name', 0.013930348258706468), (';', 0.046875), ('outerMethodDesc', 0.125), ('=', 1.0), ('desc', 1.0), ('.', 0.6666666666666666), ('charAt', 0.25), ('(', 1.0), ('i', 0.18493150684931506), (')', 0.5278810408921933), (';', 0.4370629370629371), ('if', 0.01729660474055093), ('(', 1.0), ('enabled', 0.000418147606104955), (')', 1.0), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","private HtmlPage makeHtml ( FitNesseContext context , Request request ) . getData ( ) + "" end of line comment. */ /* Comment belong to new field */ \ n "" + ignores + = expectedResult ; expectedResult = "" size "" , e , "" method "" , "" NO "" , "" "" , content , not ( containsString ( "" new stuff "" ) ; mockery . checking ( new DigestCalculator ( ) ; assertTrue ( sender ) ; testResults = pageData ; String content = getResponseContentUsingSearchString ( "" classes "" , 999 D / 2 ) , new byte [ ] { "" Page "" , expectedEntity ) ; app . call ( String key , int row , SlimExpectation expectation ) ; Future < Boolean > flush ( ) ; ZooKeeperServer zks = new ZipOutputStream ( new Expectations ( ) ; Transcoder < T > gets ( String key , int by ) ; int createModeFlag = 6789 ; List < Object > getDefaultTranscoder ( ) ; ) { } @Path ( "" ./somepath/content.txt "" ) ) { try { final ResourceMethod method , MutableRequest request , HttpServletResponse . class , "" "" . "" , EditResponder . HELP_TEXT + "" ~ "" + name ; outerMethodDesc = desc . charAt ( i ) ; if ( enabled ) ) ) )"
54,"['public', 'void']","[('setConnectionDecreaseRatio', 0.004101532270546355), ('(', 1.0), ('double', 1.0), ('val', 0.8662613981762918), (')', 1.0), (';', 0.969309462915601), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('content', 0.019520851818988466), (',', 0.04529616724738676), ('currentPage', 0.05084745762711865), (',', 0.6666666666666666), ('scanner', 0.1951219512195122), (',', 0.6896551724137931), ('provider', 0.1111111111111111), (',', 0.6216216216216216)]","public void setConnectionDecreaseRatio ( double val ) ; < T > tc , String content , currentPage , scanner , provider ,"
55,"['public', 'void']","[('terminateSession', 0.0002321622039931899), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('canFindMethod', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('LearnerHandler', 7.731560228854182e-05), ('observer', 0.42857142857142855), ('=', 1.0), ('new', 0.5833333333333334), ('IncludeWidget', 0.0010512790561850252), ('(', 1.0), ('widgetRoot', 0.4444444444444444), (',', 1.0), (')', 'Paren balancing')]","public void terminateSession ( ) ; public void canFindMethod ( ) ; LearnerHandler observer = new IncludeWidget ( widgetRoot , )"
56,"['protected', 'String']","[('buildCommand', 0.050724637681159424), ('(', 1.0), (')', 0.3333333333333333), (';', 0.4777126381547333), ('will', 0.006627051624732157), ('(', 1.0), ('returnValue', 0.972176759410802), ('(', 0.9983193277310924), ('new', 0.1077943615257048), ('ScanMatch', 0.005498281786941581), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('PageData', 0.0035344275331904837), ('data', 0.6677018633540373), ('=', 0.6331877729257642), ('wikiPage', 0.005128205128205128), (')', 'Paren balancing')]",protected String buildCommand ( ) ; will ( returnValue ( new ScanMatch ( ) ) ; PageData data = wikiPage )
57,"['public', 'void']","[('shouldGuarenteeThatBothResultFilesAreTheSameLength', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('}', 0.05062219037070819), ('public', 0.32308904649330183), ('void', 0.7639198218262806), ('searchEntries', 7.738740133106331e-05), ('(', 1.0), ('SearchParameters', 1.0), ('sp', 1.0), (',', 1.0), ('listStorage', 0.5), (')', 1.0), (';', 0.5), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('contents', 0.015527950310559006), ('(', 0.011111111111111112), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('CASValue', 0.05246295554665599), ('<', 1.0)]","public void shouldGuarenteeThatBothResultFilesAreTheSameLength ( ) { } public void searchEntries ( SearchParameters sp , listStorage ) ; < T > tc , String contents ( ) throws OperationTimeoutException ; CASValue <"
58,"['public', 'Collection']","[('values', 0.047619047619047616), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('if', 0.09225356700762265), ('(', 1.0), ('executionLog', 0.0037633284549445953), ('.', 1.0), ('hasCapturedOutput', 0.4), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('}', 0.17806887715655306), ('found', 0.0008866820358219542), ('.', 0.4), ('getClass', 0.1875), ('(', 1.0), (')', 0.992831541218638), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('true', 0.020795984223736106), (';', 1.0), ('}', 0.5431818181818182), ('if', 0.08051072885263344), ('(', 1.0), ('iterations', 0.0006272214091574326), ('-', 0.75), ('-', 1.0), (';', 0.42857142857142855), ('newCount', 0.06666666666666667), ('=', 1.0), ('snapsInProgress', 0.5), (';', 1.0), ('snapCountSyncObject', 1.0), ('.', 1.0), ('notify', 1.0), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('getDataDirSize', 0.021714922048997772), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('System', 0.0053347765579093865), (')', 'Paren balancing')]","public Collection values ( ) { if ( executionLog . hasCapturedOutput ( ) ) ; } found . getClass ( ) { return true ; } if ( iterations - - ; newCount = snapsInProgress ; snapCountSyncObject . notify ( ) throws OperationTimeoutException ; long getDataDirSize ( ) throws OperationTimeoutException ; long incr ( String key , int by ) ; System )"
59,"['void', 'movedPermanentlyTo']","[('(', 1.0), ('String', 0.43820224719101125), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('Transcoder', 0.10701754385964912), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), ('throws', 0.19533639143730888), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('return', 0.07808764940239044), ('super', 0.006453926138400861), ('.', 1.0), ('acceptResults', 0.007159904534606206), ('(', 1.0), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","void movedPermanentlyTo ( String key , Transcoder < T > tc ) throws IOException { return super . acceptResults ( ) )"
60,"['protected', 'void']","[('writeResults', 0.027642276422764227), ('(', 1.0), ('writerFactory', 0.16), ('!', 0.5555555555555556), ('=', 1.0), ('null', 0.7410909090909091), (')', 0.5761475761475762), ('{', 0.37463002114164906), ('}', 'Bracket balancing')]",protected void writeResults ( writerFactory ! = null ) { )
61,"['public', 'String']","[('getStartTime', 0.016968325791855202), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('BulkFuture', 0.0036227882215202458), ('<', 1.0), ('Map', 1.0), ('<', 0.9933283914010378), ('SocketAddress', 0.18384518300378627), (',', 0.9722530521642619), ('String', 0.3515981735159817), ('>', 0.22870452528837623), ('keys', 0.42378467453996155), (',', 0.5499677627337202), ('Transcoder', 0.76), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('[', 0.01064773735581189), (']', 0.9407114624505929), ('=', 0.03146737330241802), ('hostPort', 0.005333333333333333), (';', 0.46153846153846156), ('hostPort', 0.5), ('=', 1.0), ('host', 0.2), ('!', 0.4), ('=', 1.0), ('null', 0.7410909090909091)]","public String getStartTime ( ) ; BulkFuture < Map < SocketAddress , String > keys , Transcoder < T > tc , String [ ] = hostPort ; hostPort = host ! = null"
62,"['public', 'void']","[('setMaxBatchSize', 0.004798018882525925), ('(', 1.0), ('int', 1.0), ('col', 0.06921309592188397), (',', 0.9194139194139194), ('row', 0.13333333333333333), (',', 0.14666666666666667), ('TestResult', 0.06435643564356436), ('testResult', 0.9801980198019802), (')', 0.9339622641509434), (';', 0.6), ('PageData', 0.0035344275331904837), ('data', 0.6677018633540373), ('=', 0.6331877729257642), ('new', 0.14871794871794872), ('WidgetRoot', 0.007942997313397968), ('(', 1.0), ('""', 0.24468085106382978), ('some content', 0.000849296970840804), ('""', 1.0), (')', 0.875), (',', 0.08405815503777538), ('null', 0.015432098765432098), (',', 0.4018151815181518), ('null', 0.36997635933806144), (',', 0.4018151815181518), ('cb', 0.004728132387706856), (',', 0.5952380952380952), ('Object', 0.4262295081967213), ('o', 0.14516129032258066), (':', 0.0056179775280898875), ('list', 0.5)]","public void setMaxBatchSize ( int col , row , TestResult testResult ) ; PageData data = new WidgetRoot ( "" some content "" ) , null , null , cb , Object o : list"
63,"['boolean', 'resolve']",[],boolean resolve
64,"['public', 'void']","[('processResult', 0.00959603776505185), ('(', 1.0), ('int', 0.9527027027027027), ('i', 0.1341183228029868), ('=', 0.9117647058823529), ('0', 0.7551789077212806), (';', 0.6786355475763016), ('j', 0.0161892901618929), (')', 'Paren balancing')]",public void processResult ( int i = 0 ; j )
65,"['protected', 'void']","[('doSending', 0.01951219512195122), ('(', 1.0), ('response', 0.7777777777777778), (',', 0.10661764705882353), ('defaults', 0.014084507042253521), (')', 1.0), (';', 0.5), ('when', 0.005964346462258941), ('(', 1.0), ('provider', 0.06512301013024602), (')', 0.19166666666666668), ('.', 0.2631578947368421), ('loadAll', 0.00025546046749265553), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('}', 0.05062219037070819), (')', 0.09535066981875492), (';', 0.7686567164179104), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('flush', 0.2646428571428571), ('(', 1.0), ('int', 0.4567307692307692), ('bytes', 0.015508328546812177), (')', 0.9642857142857143), (';', 0.7610619469026548), ('String', 0.026430890896640084), ('getName', 0.01282051282051282), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('""', 0.3830213903743315), ('statusCode1', 0.000141549495140134), ('""', 1.0), (')', 0.3333333333333333), (';', 0.6090406958288362), ('Future', 0.03465947999734918), ('<', 1.0), ('Boolean', 0.5025295109612141), ('>', 1.0), ('set', 0.10392857142857143), ('(', 0.97), ('(', 0.0014388489208633094), ('Boolean', 0.015469613259668509), ('hostnameVerification', 0.029411764705882353), (',', 0.75), ('paramIndex', 0.5714285714285714), (')', 0.9393939393939394), (';', 0.5), ('void', 0.04505290596213744), ('setRequestThrottleStallTime', 0.012427683736875937), ('(', 1.0), ('int', 1.0), ('tickTime', 0.02125215393452039), ('=', 0.1348314606741573), ('config', 0.19047619047619047), ('.', 0.96875), ('getClientPortAddress', 0.045454545454545456), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), ('return', 0.017985446890302504), ('false', 0.19111111111111112), (';', 1.0), ('if', 0.11066398390342053), ('(', 1.0), ('!', 0.1421701860756847), ('readOnlyConnected', 0.0026595744680851063), (')', 0.5), ('{', 1.0), ('if', 0.09225356700762265), ('(', 1.0), ('firstProcessor', 0.0006272214091574326), ('=', 1.0), ('new', 0.8235294117647058), ('ArrayList', 0.041934353463380446), ('<', 0.9570405727923628), ('Message', 0.027083333333333334), ('>', 1.0), ('(', 0.16455696202531644), ('tableTypeArrays', 0.0008952551477170994), (')', 1.0), (')', 1.0), (';', 0.6920507070614618), ('public', 0.04915063288343016), ('long', 0.15648403626330312), ('getMinRequestLatency', 0.024526198439241916), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('hashCode', 0.0020436837399412443), ('(', 0.9552238805970149), (')', 0.95), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('catch', 0.058698350771413374), ('(', 1.0), ('Exception', 0.2532299741602067), ('e', 0.9435483870967742), (')', 0.9926470588235294), ('{', 0.5944055944055944), ('int', 0.01570134862206007), ('value', 0.008174386920980926), (')', 0.8), (';', 0.5893958076448829), ('}', 0.17806887715655306), ('stream', 0.0007093456286575634), ('.', 1.0), ('print', 0.6111111111111112), ('(', 1.0), ('""', 0.686046511627907), ('some.packages', 9.436633009342267e-05), ('""', 1.0), (')', 0.4), (';', 0.6090406958288362), ('alternative', 1.104508604122026e-05), ('.', 1.0), ('getSocketAddress', 1.0), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('long', 0.2879455346415699), ('incr', 0.34660356347438753), ('(', 1.0), ('String', 0.995279307631786), ('.', 0.06539211861100273), ('format', 0.14682779456193354), ('(', 0.9970238095238095), ('""', 0.6512968299711815), ('PageOne', 0.011654241766537699), ('""', 1.0), (')', 0.7220447284345048), (',', 0.08405815503777538), ('""', 0.23656499636891795), ('NOT FOUND', 0.0001080613788631943), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('public', 0.04915063288343016), ('double', 0.029365392195506504), ('getConnectionDropDecrease', 0.30434782608695654), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('List', 0.013099747474747474), ('<', 0.9626168224299065), ('T', 0.008653846153846154), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('path', 0.040372670807453416), (',', 0.5996131528046421), ('stat', 0.009852216748768473), ('.', 0.8), ('getPzxid', 0.06018518518518518), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('if', 0.08051072885263344), ('(', 1.0), ('c', 0.007317583106836713), (')', 0.5190839694656488), ('{', 0.23423423423423423), ('ParserTest', 0.0043651052185810155), ('.', 1.0), ('assertScans', 0.12830188679245283), ('(', 1.0), ('""', 0.9574468085106383), ('xyzzy', 0.00018873266018684534), ('""', 1.0), (')', 0.25), (',', 0.08405815503777538), ('}', 'Bracket balancing')]","protected void doSending ( response , defaults ) ; when ( provider ) . loadAll ( ) { } ) ; Future < Boolean > flush ( int bytes ) ; String getName ( ) ; assertEquals ( "" statusCode1 "" ) ; Future < Boolean > set ( ( Boolean hostnameVerification , paramIndex ) ; void setRequestThrottleStallTime ( int tickTime = config . getClientPortAddress ( ) ) return false ; if ( ! readOnlyConnected ) { if ( firstProcessor = new ArrayList < Message > ( tableTypeArrays ) ) ; public long getMinRequestLatency ( ) . hashCode ( ) ; } catch ( Exception e ) { int value ) ; } stream . print ( "" some.packages "" ) ; alternative . getSocketAddress ( ) throws OperationTimeoutException ; long incr ( String . format ( "" PageOne "" ) , "" NOT FOUND "" ) ; public double getConnectionDropDecrease ( ) throws Exception { List < T > tc , String path , stat . getPzxid ( ) ; } if ( c ) { ParserTest . assertScans ( "" xyzzy "" ) , )"
66,"['public', 'void']","[('exceptionCaught', 0.0002321622039931899), ('(', 1.0), ('ChannelHandlerContext', 1.0), ('context', 0.17647058823529413), (')', 0.3333333333333333), ('throws', 0.13128491620111732), ('OperationTimeoutException', 0.1804635761589404), (';', 0.9960111687275628), ('<', 0.21625951141369643), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (',', 0.17239185750636132), ('String', 0.9926605504587156), ('keyfile', 0.0048802129547471165), (',', 0.6363636363636364), ('status', 0.3), (',', 0.30434782608695654), ('roundsFix', 0.045454545454545456)]","public void exceptionCaught ( ChannelHandlerContext context ) throws OperationTimeoutException ; < T > tc , String keyfile , status , roundsFix"
67,"['private', 'void']","[('sendSaslPacket', 0.0007513148009015778), ('(', 1.0), ('byte', 1.0), ('[', 0.529126213592233), ('4', 0.017341040462427744), (']', 1.0), (';', 0.38095238095238093), ('if', 0.0509433962264151), ('(', 1.0), ('sslParameterClassName', 0.0002090738030524775), (')', 0.5), ('.', 0.08333333333333333), ('makeResponse', 0.008557925661003959), ('(', 1.0), ('context', 0.4743083003952569), (',', 0.5644171779141104), ('List', 0.0012953367875647669), ('<', 0.875886524822695), ('String', 0.20192307692307693), (',', 0.6009784436630484), ('String', 0.18341388959552277), ('>', 0.22870452528837623), ('>', 0.17165613842351002), ('val', 0.0006091989034419738), ('=', 0.5), ('null', 0.19047619047619047), (')', 0.5761475761475762), (';', 0.3289640591966173), ('public', 0.04915063288343016), ('int', 0.20082774931020891), (')', 'Paren balancing')]","private void sendSaslPacket ( byte [ 4 ] ; if ( sslParameterClassName ) . makeResponse ( context , List < String , String > > val = null ) ; public int )"
68,"['public', 'void']","[('testVersionsExpire', 0.0002321622039931899), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('<input type=', 0.0037746532037369065), ('\\""', 1.0), ('checkbox', 0.5375), ('\\""', 1.0), ('name=', 0.6304347826086957), ('\\""', 1.0), ('PageType', 0.20437956204379562), ('\\""', 1.0), ('value=', 1.0), ('\\""', 1.0), ('Search Titles!', 0.01694915254237288), ('\\""', 1.0), ('""', 1.0), (',', 0.5793103448275863), ('KeyStoreFileType', 0.0004371266210112196), ('.', 1.0), ('fromFilename', 0.12857142857142856), ('(', 1.0), ('""', 0.8888888888888888), ('|no param|', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('assertEquals', 0.04091099869667985), ('(', 1.0), ('1', 0.06305704099821748), (')', 0.5583468395461912), (';', 0.450187265917603), ('void', 0.04505290596213744), ('addTestSystemListener', 0.0032140561388472252), ('(', 1.0), ('TestSystemListener', 0.3076923076923077), ('listener', 0.7941176470588235), (')', 0.7419354838709677), ('.', 0.11688311688311688), ('verifyMulti', 0.00012773023374632777), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('crawler', 0.0023415582407386956), ('=', 0.37155963302752293), ('pageToBeMoved', 0.008), ('.', 1.0), ('getName', 0.5), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('byte', 0.0012480947226578894), ('[', 0.8169014084507042), ('0', 0.10074318744838975), (']', 1.0), ('=', 0.05970149253731343), ('(', 0.17066666666666666), ('String', 0.10584958217270195), ('output', 0.012095200936402654), (')', 0.8333333333333334), ('{', 0.22082018927444794), ('LOG', 0.017134666753534433), ('.', 1.0), ('info', 0.5220994475138122), ('(', 0.9577777777777777), ('""', 0.9205298013245033), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void testVersionsExpire ( ) ; assertSubString ( "" <input type= \"" checkbox \"" name= \"" PageType \"" value= \"" Search Titles! \"" "" , KeyStoreFileType . fromFilename ( "" |no param| "" ) ; assertEquals ( 1 ) ; void addTestSystemListener ( TestSystemListener listener ) . verifyMulti ( ) ; crawler = pageToBeMoved . getName ( ) ; byte [ 0 ] = ( String output ) { LOG . info ( "" ) ) )"
69,"['WikiPage', 'getSiblingPage']","[('(', 1.0), ('WikiPage', 0.7073170731707317), ('page', 0.38839285714285715), (')', 0.3379549393414211), ('throws', 0.15261044176706828), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('List', 0.009561752988047808), ('<', 0.9626168224299065), ('String', 0.20192307692307693), (',', 0.6009784436630484), ('String', 0.18341388959552277), ('password', 0.01574977817213842), (',', 0.38961038961038963), ('keyfile', 0.2698412698412698), (',', 0.8823529411764706), ('new', 0.2), ('Object', 0.14217557251908397), ('[', 0.8880597014925373), (']', 0.9389830508474576), ('trims', 0.0003312355084465055), ('(', 1.0), ('String', 1.0), ('[', 0.014670308232539992), (']', 0.9407114624505929), ('ipv6HostAndPort', 0.0003312355084465055), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","WikiPage getSiblingPage ( WikiPage page ) throws IOException { List < String , String password , keyfile , new Object [ ] trims ( String [ ] ipv6HostAndPort ) )"
70,"['public', 'void']","[('simpleNameWithUnnamedArguments', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('""', 0.23656499636891795), ('test', 0.0034579641236222175), ('""', 0.9716981132075472), (',', 0.42718446601941745), ('""', 0.38678420515809414), ('imok', 0.0011886751674951373), ('""', 1.0)]","public void simpleNameWithUnnamedArguments ( ) , "" test "" , "" imok """
71,"['private', 'String']","[('getParentFileSystemPath', 0.002638522427440633), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('root', 0.001137643862245687), ('.', 0.5785123966942148), ('getPageCrawler', 0.34823091247672255), ('(', 1.0), (')', 0.9908256880733946), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('getPage', 0.0007171029042667623), ('(', 1.0), ('root', 0.16818181818181818), (',', 0.7288888888888889), ('PathParser', 0.6455357142857143), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), ('""', 0.6748466257668712), ('V', 0.0009436633009342266), ('""', 1.0), (',', 0.9), ('""', 0.38678420515809414), ('#', 0.0006483682731791658), ('\\', 0.3333333333333333), ('n a', 0.3333333333333333), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('(', 0.010696517412935324), ('PortAssignment', 0.14457831325301204), ('.', 1.0), ('unique', 0.9925373134328358), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('if', 0.01729660474055093), ('(', 1.0), ('!', 0.1421701860756847), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","private String getParentFileSystemPath ( ) ; root . getPageCrawler ( ) { return getPage ( root , PathParser . parse ( "" V "" , "" # \ n a \ n "" + ( PortAssignment . unique ( ) ; if ( ! ) ) ) ) )"
72,"['public', 'void']","[('testMultiGetChildrenMixedAuthenticationCorrectFirst', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('if', 0.01729660474055093), ('(', 1.0), ('event', 0.0014635166213673428), ('=', 0.25), ('events', 0.45454545454545453), ('.', 1.0), ('size', 0.4090909090909091), ('(', 0.985838779956427), (')', 1.0), (';', 0.4777126381547333), ('CASOperation', 0.000463893613731251), ('cas', 0.9761904761904762), ('(', 1.0), ('String', 0.8793650793650793), ('name', 0.03573936792820913), (',', 0.32647462277091904), ('long', 0.023474178403755867), ('by', 0.2550628044091259), (')', 0.4462311557788945), (';', 0.7569158328428487), ('assertDoesNotContain', 5.522543020610131e-05), ('(', 1.0), ('""', 0.7142857142857143), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void testMultiGetChildrenMixedAuthenticationCorrectFirst ( ) ; if ( event = events . size ( ) ; CASOperation cas ( String name , long by ) ; assertDoesNotContain ( "" ) )"
73,"['public', 'void']","[('remove', 0.0016251354279523294), ('(', 1.0), ('path', 0.11219512195121951), (')', 0.35194174757281554), (';', 0.5525672371638142), ('return', 0.02244361483575957), ('output', 0.003296250515039143), (';', 0.7222222222222222)]",public void remove ( path ) ; return output ;
74,"['public', 'void']","[('allTestingCompleteShouldSetTotalRunTimeOnReport', 0.00030954960532425323), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('main', 0.0005301641299785726), ('.', 0.9795918367346939), ('confFile', 0.036036036036036036), ('.', 1.0), ('toString', 1.0), ('(', 1.0), (')', 0.8720666161998486), (',', 0.04123017779913503), ('is', 0.08623819898329703), ('(', 0.9956663055254604), ('""', 0.07964601769911504), ('No History', 9.436633009342267e-05), ('""', 1.0), (',', 1.0), ('1', 0.004006994025936179), (')', 'Paren balancing')]","public void allTestingCompleteShouldSetTotalRunTimeOnReport ( ) ; main . confFile . toString ( ) , is ( "" No History "" , 1 )"
75,"['public', 'void']","[('nameProviderWillIgnoreTheCaseForTheFirstLetter', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('ServerSocket', 0.006374501992031873), ('socket', 0.5), (';', 1.0), ('try', 0.14285714285714285), ('{', 0.9706896551724138), ('if', 0.05526315789473684), ('(', 1.0), ('!', 0.1421701860756847), ('(', 0.09707446808510638), ('res', 0.0891089108910891), ('instanceof', 0.9), ('HttpServletResponse', 1.0), (')', 1.0), (')', 0.45), (';', 0.6920507070614618), ('}', 0.17806887715655306), ('lastProposedZxid', 0.0003546728143287817), ('=', 1.0), ('pkt', 1.0), ('.', 1.0), ('getZxid', 1.0), ('(', 1.0), (')', 0.7755102040816326), ('{', 0.09111004324843826), ('Converters', 0.00026060329663170237), ('converters', 1.0), ('=', 0.8), ('mockery', 0.5), ('.', 1.0), ('mock', 0.36538461538461536), ('(', 1.0), ('Status', 0.003243243243243243), ('.', 0.9090909090909091), ('NOT_FOUND', 0.05555555555555555), (')', 0.5), ('{', 0.5), ('for', 0.01687406345690273), ('(', 1.0), ('int', 0.4218381775333857), ('i', 0.1341183228029868), ('=', 0.9117647058823529), ('1', 0.07344632768361582), (')', 0.2057142857142857), (';', 0.450187265917603), ('zk', 0.0025514148755218804), ('.', 0.896551724137931), ('create', 0.31797235023041476), ('(', 0.9378698224852071), ('""', 0.5300261096605744), ('TestResult_secondFakeFile', 0.000141549495140134), ('""', 1.0), (',', 1.0), ('1', 0.004006994025936179), (',', 0.5058275058275058), ('clientPortQp1', 0.0058823529411764705), (')', 0.16666666666666666), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void nameProviderWillIgnoreTheCaseForTheFirstLetter ( ) throws IOException { ServerSocket socket ; try { if ( ! ( res instanceof HttpServletResponse ) ) ; } lastProposedZxid = pkt . getZxid ( ) { Converters converters = mockery . mock ( Status . NOT_FOUND ) { for ( int i = 1 ) ; zk . create ( "" TestResult_secondFakeFile "" , 1 , clientPortQp1 ) ) ) )"
76,"['private', 'Map']","[('<', 0.9642857142857143), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('Collection', 0.0005087763927753752), ('<', 0.9178082191780822), ('Operation', 0.03532277710109622), ('>', 1.0), ('ops', 0.06666666666666667), ('=', 0.5416666666666666), ('Arrays', 0.26666666666666666), ('.', 1.0), ('asList', 0.8108108108108109), ('(', 1.0), ('Op', 0.042801556420233464), ('.', 0.972972972972973), ('create', 0.5), ('(', 0.9378698224852071), ('forTestSystem', 0.015665796344647518), ('(', 1.0), ('""', 1.0), ('test2', 0.0009436633009342266), ('""', 0.9666666666666667), (')', 0.4827586206896552), (';', 0.6090406958288362), ('Table', 0.000762110936844198), ('t', 0.4605263157894737), ('=', 0.9743589743589743), ('(', 0.0547945205479452), ('byte', 0.06963788300835655), (')', 0.3786407766990291), (""'0'"", 0.019230769230769232), (')', 1.0), (')', 0.375), (';', 0.6920507070614618), ('when', 0.005964346462258941), ('(', 1.0), ('result', 0.02894356005788712), (',', 0.3363914373088685), ('""', 0.3712121212121212), ('.', 0.002917657229306246), ('concat', 0.0022675736961451248), ('(', 1.0), ('value', 0.2), ('=', 0.21513002364066194), ('entry', 0.004), ('.', 0.8571428571428571), ('getValue', 0.0847457627118644), ('(', 1.0), (')', 0.7755102040816326), (';', 0.4777126381547333), ('t', 0.00024299189290684576), ('.', 0.4230769230769231), ('image', 0.05172413793103448), ('.', 0.2), ('addAttribute', 0.9230769230769231), ('(', 1.0), ('""', 0.9691629955947136), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]","private Map < String , Collection < Operation > ops = Arrays . asList ( Op . create ( forTestSystem ( "" test2 "" ) ; Table t = ( byte ) '0' ) ) ; when ( result , "" . concat ( value = entry . getValue ( ) ; t . image . addAttribute ( "" ) ) )"
77,"['public', 'static']","[('void', 0.32053941908713696), ('deleteDirectory', 0.0049261083743842365), ('(', 1.0), ('Path', 0.5), ('dir', 0.2), (',', 1.0), ('File', 0.02857142857142857), ('outputDir', 0.02654867256637168), (',', 0.8), ('classpathElements', 0.125), (',', 1.0), ('boolean', 0.2222222222222222), ('throwFailure', 0.018867924528301886), (')', 1.0), ('throws', 1.0), ('Exception', 0.5000719838756119), (';', 0.07471926288511374), ('WikiPagePath', 0.015810276679841896), ('path', 0.17412935323383086), ('=', 0.5046728971962616), ('PathParser', 0.2894736842105263), ('.', 1.0), ('parse', 0.9156272927366104)]","public static void deleteDirectory ( Path dir , File outputDir , classpathElements , boolean throwFailure ) throws Exception ; WikiPagePath path = PathParser . parse"
78,"['public', 'void']","[('allTestingComplete', 0.002089459835938709), ('(', 1.0), ('TimeMeasurement', 0.18478260869565216), ('.', 0.37037037037037035), ('class', 1.0), (',', 0.31704361873990305), ('PageResult', 0.005141388174807198), ('.', 0.9), ('class', 0.9230769230769231), (')', 0.5668416801292407), (';', 0.683291770573566), ('MultiTransactionRecord', 3.3135258123660786e-05), ('decodedRequest', 1.0), ('=', 1.0), ('codeDecode', 0.8), ('(', 1.0), ('request', 0.5714285714285714), (')', 0.5072639225181598), (';', 0.5648218347232752), ('to', 0.00018776646270074444), ('.', 1.0), ('setEphemeralOwner', 0.1), ('(', 1.0), ('from', 0.3333333333333333), ('.', 0.6666666666666666), ('getCtime', 0.125), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('File', 0.01672979797979798), ('dir', 0.043689320388349516), ('=', 0.45714285714285713), ('new', 0.32), ('TestResponder', 0.001284896624226142), ('(', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","public void allTestingComplete ( TimeMeasurement . class , PageResult . class ) ; MultiTransactionRecord decodedRequest = codeDecode ( request ) ; to . setEphemeralOwner ( from . getCtime ( ) throws Exception { File dir = new TestResponder ( ) ) )"
79,"['public', 'void']","[('shouldNotGetAPageMoreThanOnce', 0.00015477480266212662), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('assertSubString', 0.01266871368927964), ('(', 1.0), ('""', 0.9659185369908562), ('tag', 0.0007549306407473814), ('""', 1.0), (',', 1.0), ('pageOne', 0.0005828354946816261), ('.', 0.6190476190476191), ('commit', 0.20238095238095238), ('(', 1.0), ('data', 0.5738498789346247), (')', 0.6501901140684411), (';', 0.6805970149253732), ('invokeResponderAndCheckSuccessStatus', 0.000254036978948066), ('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('scriptResults', 0.00018155410312273057), (')', 1.0), (';', 1.0), ('map', 0.0002319468068656255)]","public void shouldNotGetAPageMoreThanOnce ( ) ; assertSubString ( "" tag "" , pageOne . commit ( data ) ; invokeResponderAndCheckSuccessStatus ( ) , scriptResults ) ; map"
80,"['private', 'SimpleFixture']",[],private SimpleFixture
81,"['public', 'void']","[('testParsingProgress', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('SocketAddress', 0.18384518300378627), (',', 0.9722530521642619), ('String', 0.3515981735159817), ('reason', 0.0013309671694764862), (',', 1.0), ('Object', 0.3333333333333333), ('o', 0.14516129032258066), ('=', 0.013108614232209739), ('=', 0.6578947368421053), ('null', 0.518327605956472), (';', 0.19305019305019305), ('try', 0.14727540500736377), ('{', 0.9706896551724138), ('tc', 0.0008771929824561404), ('.', 1.0), ('decode', 0.5178571428571429), ('(', 1.0), ('request', 0.01282051282051282), (')', 0.5072639225181598), ('.', 0.1865049279757392), ('toString', 0.0404904840975859), ('(', 1.0), ('expectedNames', 0.005299015897047691), (')', 0.6428571428571429), ('{', 0.23809523809523808), ('super', 0.007948400547266922), ('.', 0.9223744292237442), ('tearDown', 0.04295942720763723), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('this', 0.022672486806958107), ('.', 0.9914893617021276), ('exportJvmInfo', 0.0005347593582887701), ('=', 1.0), ('Boolean', 1.0), ('.', 1.0), ('TRUE', 0.12244897959183673), (';', 0.16666666666666666), ('}', 0.5), ('}', 0.2383401312289413), (';', 0.0696969696969697), ('checkAvailabilityFor', 0.03187250996015936), ('(', 1.0), ('false', 0.43243243243243246), (',', 0.3197969543147208), ('1', 0.029508196721311476), (',', 0.5058275058275058), ('00', 0.011764705882352941), (',', 0.9230769230769231), ('02', 0.08333333333333333), (',', 0.6666666666666666), ('01', 1.0), (')', 0.7142857142857143), ('.', 1.0), ('getTime', 0.0037041767786435047), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('singleInterfaceRegister', 0.0005743444741434536), ('(', 1.0), ('DefaultMethodInfo', 0.05172413793103448), ('.', 1.0), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('boolean', 0.02482935342066315), ('shutdown', 0.16020671834625322), ('(', 1.0), ('long', 0.36135265700483093), ('value', 0.0015052684395383843), (')', 0.8461538461538461), (';', 0.5893958076448829), ('this', 0.009366232962954782), ('.', 1.0), ('rc', 0.0016042780748663102), (',', 0.14285714285714285), ('LedgerHandle', 0.17167381974248927), ('lh', 0.8780487804878049), (',', 0.975609756097561), ('long', 0.1836734693877551), ('cas', 0.02794155344783389), (',', 0.7270194986072424), ('String', 0.9157509157509157), ('keyStoreTypeProp', 0.0006654835847382431), ('}', 'Bracket balancing')]","public void testParsingProgress ( ) ; Map < SocketAddress , String reason , Object o = = null ; try { tc . decode ( request ) . toString ( expectedNames ) { super . tearDown ( ) { this . exportJvmInfo = Boolean . TRUE ; } } ; checkAvailabilityFor ( false , 1 , 00 , 02 , 01 ) . getTime ( ) ; singleInterfaceRegister ( DefaultMethodInfo . class ) ; boolean shutdown ( long value ) ; this . rc , LedgerHandle lh , long cas , String keyStoreTypeProp )"
82,"['public', 'Index']","[('startMap', 0.5882352941176471), ('(', 1.0), ('TreeMap', 0.74), ('<', 0.5833333333333334), ('?', 0.9545454545454546), ('extends', 0.28720083246618106), ('Responder', 0.010067114093959731), ('>', 1.0), ('>', 0.3333333333333333), ('pagesByTestSystem', 0.004568991775814804), (')', 0.6), ('{', 0.5263157894736842), ('throw', 0.02931787087106652), ('new', 0.9767932489451476), ('FileNotFoundException', 0.012345679012345678), ('(', 1.0), ('""', 1.0), ('3.1.2', 0.000141549495140134), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('if', 0.01729660474055093), ('(', 1.0), ('!', 0.1421701860756847), ('scanner', 0.006648936170212766), ('.', 1.0), ('isEnd', 0.25806451612903225), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('Map', 0.013497095142371159), ('<', 0.9966386554621849), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('String', 0.18341388959552277), ('createMode', 0.00022182786157941438), (',', 1.0), ('new', 0.05555555555555555), ('Object', 0.14217557251908397), ('[', 0.8880597014925373), (']', 0.9389830508474576), ('args', 0.07088439880755217), (',', 0.3411214953271028), ('SuperMethod', 0.41904761904761906), ('superMethod', 1.0), (')', 1.0), ('{', 1.0), ('assert', 0.003974200273633461), ('context', 0.014285714285714285), ('=', 1.0), ('new', 0.16129032258064516), ('Object', 0.004088307440719542), ('[', 0.8880597014925373), (']', 0.9389830508474576), ('data', 0.07817157999337529), (',', 0.6822033898305084), ('StoreOperation', 0.011904761904761904), ('.', 1.0), ('Callback', 0.3333333333333333), ('callback', 0.3), ('=', 0.023255813953488372), ('new', 0.6666666666666666), ('SlimClientBuilder', 0.0031538371685550753), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public Index startMap ( TreeMap < ? extends Responder > > pagesByTestSystem ) { throw new FileNotFoundException ( "" 3.1.2 "" ) ; if ( ! scanner . isEnd ( ) ; Map < String , String createMode , new Object [ ] args , SuperMethod superMethod ) { assert context = new Object [ ] data , StoreOperation . Callback callback = new SlimClientBuilder ) )"
83,"['@Test', 'public']","[('void', 1.0), ('parsesIncludeNonWikiWordPages', 0.00015477480266212662), ('(', 1.0), (')', 1.0), ('+', 0.008822681403171552), ('""', 0.7475592747559274), ('|7|9|', 0.001837109614206981), ('\\', 1.0), ('n', 1.0), ('""', 0.959409594095941), ('+', 0.44176196526895384), ('event', 0.0057213930348258705), ('.', 0.8260869565217391), ('getType', 0.32432432432432434), ('(', 1.0), (')', 0.9925925925925926), (';', 0.4777126381547333), ('one', 0.005169100267291082), ('(', 1.0), ('context', 0.06512301013024602), (')', 'Paren balancing')]","@Test public void parsesIncludeNonWikiWordPages ( ) + "" |7|9| \ n "" + event . getType ( ) ; one ( context )"
84,"['private', 'Request']","[('createReadRequest', 0.06666666666666667), ('(', 1.0), ('1L', 0.5), (',', 0.5901639344262295), ('FLETestUtils', 0.0851063829787234), ('.', 1.0), ('createMsg', 1.0), ('(', 1.0), ('ServerState', 0.8666666666666667), ('.', 0.75), ('LOOKING', 0.5373134328358209), (')', 0.5), (')', 0.9444444444444444), (';', 0.6920507070614618), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('gets', 0.02171664943123061), ('(', 1.0), ('String', 0.977924944812362), ('path', 0.01779165040967616), (',', 0.5996131528046421), ('false', 0.026272577996715927), (',', 0.41156462585034015), ('getClassPath', 0.08196721311475409), (')', 'Paren balancing')]","private Request createReadRequest ( 1L , FLETestUtils . createMsg ( ServerState . LOOKING ) ) ; < T > gets ( String path , false , getClassPath )"
85,"['void', 'addExpectation']","[('(', 1.0), ('new', 0.48), ('StringConverter', 0.003092783505154639), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('HttpResult', 0.00027612715103050655), ('body', 0.32), ('(', 1.0), ('in', 0.0625), (',', 0.2545454545454545), ('int', 0.5), ('exp', 0.34360228198859005), (')', 0.44536817102137766), (';', 0.7537379067722075), ('return', 0.02244361483575957), (')', 'Paren balancing')]","void addExpectation ( new StringConverter ( ) ; HttpResult body ( in , int exp ) ; return )"
86,"['public', 'SortedSet']",[],public SortedSet
87,"['public', 'ParseSpecification']","[('end', 0.25), ('(', 1.0), (')', 0.625), (';', 0.4777126381547333), ('makeZipVersion', 1.104508604122026e-05), ('(', 1.0), ('page', 0.8), (',', 0.31853496115427304), ('Function', 0.013377926421404682), ('<', 0.8181818181818182), ('String', 0.625), (',', 0.6009784436630484), ('T', 0.35385398117527345), ('>', 0.6264626462646264), ('tc', 0.32430196483971047), (')', 'Paren balancing')]","public ParseSpecification end ( ) ; makeZipVersion ( page , Function < String , T > tc )"
88,"['public', 'void']","[('testExceptionOccurred', 0.005494505494505495), ('(', 1.0), ('Assertion', 0.9468085106382979), ('assertion', 0.9704142011834319), (',', 0.9939393939393939), ('ExceptionResult', 0.5028248587570622), ('exceptionResult', 1.0), (')', 0.9902912621359223), (';', 0.48760330578512395), ('boolean', 0.02482935342066315), ('addObserver', 0.1227390180878553), ('(', 1.0), ('ConnectionObserver', 0.9829931972789115), ('obs', 0.9982788296041308), (')', 'Paren balancing')]","public void testExceptionOccurred ( Assertion assertion , ExceptionResult exceptionResult ) ; boolean addObserver ( ConnectionObserver obs )"
89,"['long', 'createSession']","[('(', 1.0), ('int', 0.72), ('i', 0.1341183228029868), (',', 0.0392156862745098), ('PortAssignment', 0.011363636363636364), ('.', 1.0), ('unique', 0.9925373134328358), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), (';', 0.6920507070614618), ('long', 0.030583843248138905), ('getMaxReconnectDelay', 0.013919821826280624), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('deserializers', 0.0012626262626262627), ('.', 1.0), ('deserializerFor', 0.5263157894736842), ('(', 1.0), ('""', 1.0), ('-f', 0.000141549495140134), ('""', 1.0), (',', 1.0), ('LocalDate', 0.0002185633105056098), ('.', 1.0), ('class', 0.8333333333333334), ('.', 0.10480613893376414), ('getName', 0.21001926782273603), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('MapBasedListPartitioner', 2.209017208244052e-05), ('<', 1.0), ('String', 0.4), ('>', 0.39886867451460023), ('>', 0.17165613842351002), ('asyncGetBulk', 0.4069448674992385), ('(', 0.999251497005988), ('Transcoder', 0.19225037257824143), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('Fixture', 4.418034416488104e-05), ('fixture', 0.4), (')', 0.29411764705882354), ('{', 0.6), ('if', 0.09225356700762265), ('(', 1.0), ('msg', 0.0002090738030524775), (')', 0.631578947368421), (';', 0.5), ('void', 0.04505290596213744), ('resetLatency', 0.015641739875723162), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('return', 0.1317609505231424), ('instructions', 0.006615214994487321), (';', 0.9333333333333333), ('}', 0.8333333333333334), ('interface', 0.009576165986877105), ('MultiCallback', 0.1111111111111111), ('extends', 1.0), ('AsyncCallback', 1.0), ('{', 1.0), ('public', 0.8059701492537313), ('void', 0.6027397260273972), ('processRequest', 0.0019346850332765827), ('(', 1.0), ('any', 0.06666666666666667), ('(', 1.0), ('String', 0.32432432432432434), ('query', 0.00023410066328521264), (')', 1.0), (';', 0.6176470588235294), ('ParserTestHelper', 0.0018113941107601229), ('.', 1.0), ('assertTranslatesTo', 0.5441696113074205), ('(', 1.0), ('""', 0.7580071174377224), ('\\', 0.009483816174388978), ('nX', 0.004140786749482402), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('}', 0.17806887715655306), ('throw', 0.0039014009576165986), ('new', 1.0), ('UnexpectedConditionException', 0.001763668430335097), ('(', 1.0), ('msg', 0.5), (')', 0.631578947368421), ('{', 0.23529411764705882), ('sb', 0.00429995439442309), ('.', 1.0), ('append', 0.7374301675977654), ('(', 0.9965635738831615), ('""', 0.43297380585516176), ('yes', 4.7183165046711336e-05), ('""', 1.0), (',', 0.29411764705882354), ('context', 0.003278449657584147), (',', 0.21428571428571427), ('page', 0.08808290155440414), (')', 0.25), (';', 0.3467202141900937), ('help', 1.104508604122026e-05), ('.', 1.0), ('printHelp', 1.0), ('(', 1.0), ('120', 1.0), (',', 1.0), ('""', 1.0), ('MyTest', 0.0007564296520423601), ('""', 1.0), (',', 0.8571428571428571), ('results', 0.013769488561853416), (')', 0.9323671497584541), (';', 0.8942731277533039), ('Thread', 0.0010824184320395857), ('[', 0.009174311926605505), ('thCount', 0.3333333333333333), (']', 1.0), (';', 1.0), ('while', 0.013207547169811321), ('(', 1.0), ('offset', 0.015151515151515152), (')', 0.375), ('{', 0.41237113402061853), ('}', 0.05062219037070819), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","long createSession ( int i , PortAssignment . unique ( ) ) ; long getMaxReconnectDelay ( ) throws Exception { deserializers . deserializerFor ( "" -f "" , LocalDate . class . getName ( ) ; MapBasedListPartitioner < String > > asyncGetBulk ( Transcoder < T > tc ) ; Fixture fixture ) { if ( msg ) ; void resetLatency ( ) ; } return instructions ; } interface MultiCallback extends AsyncCallback { public void processRequest ( any ( String query ) ; ParserTestHelper . assertTranslatesTo ( "" \ nX "" ) ; } throw new UnexpectedConditionException ( msg ) { sb . append ( "" yes "" , context , page ) ; help . printHelp ( 120 , "" MyTest "" , results ) ; Thread [ thCount ] ; while ( offset ) { } ) )"
90,"['public', 'void']","[('testSimpleTermSigned', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('format', 0.005875590752331077), ('(', 0.9970238095238095), ('json', 0.002881844380403458), ('.', 0.2727272727272727), ('getBytes', 0.2857142857142857), ('(', 1.0), ('UTF_8', 0.023728813559322035), (')', 1.0), (';', 0.4444444444444444), ('page', 0.0045837107071064085), ('=', 0.32867132867132864), ('root', 0.07432432432432433), ('.', 0.9424242424242424), ('commit', 0.048417132216014895), ('(', 1.0), ('commitProcessor', 0.002421307506053269), ('.', 0.6666666666666666), ('commit', 0.29411764705882354), ('(', 1.0), (')', 0.07263922518159806), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('void', 0.42702702702702705), ('setMaxWriteQueuePollTime', 0.018212984786800942), ('(', 1.0), (')', 'Paren balancing'), (')', 'Paren balancing'), (')', 'Paren balancing')]",public void testSimpleTermSigned ( ) . format ( json . getBytes ( UTF_8 ) ; page = root . commit ( commitProcessor . commit ( ) throws IOException ; void setMaxWriteQueuePollTime ( ) ) )
91,"['private', 'Map']","[('<', 0.9642857142857143), ('String', 0.7833403449726546), (',', 0.6009784436630484), ('Object', 0.38667005850928515), ('>', 0.49548387096774194), ('(', 0.028425655976676383), (')', 0.7018800358102059), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('serverSideSocket', 0.010358565737051793), ('.', 1.0), ('getSoTimeout', 0.07894736842105263), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('Locale', 0.0005320092214931725), ('locale', 1.0), ('=', 0.9090909090909091), ('jstlWrapper', 0.3125), ('.', 1.0), ('findLocale', 0.8333333333333334), ('(', 1.0), ('request', 0.5), ('!', 0.0036319612590799033), ('=', 1.0), ('null', 0.7410909090909091), ('&', 0.07550407550407551), ('&', 1.0), ('threadId', 0.0015220700152207), ('!', 1.0), ('=', 1.0), ('null', 0.7410909090909091), (')', 0.5761475761475762), ('|', 0.007610993657505285), ('|', 0.8791666666666667), ('isLowerCaseLetter', 0.001996007984031936), ('(', 1.0), ('candidate', 0.6666666666666666), ('.', 0.19047619047619047), ('startsWith', 0.045454545454545456), ('(', 1.0), ('""', 0.7096774193548387), ('TearDown', 0.002406341417382278), ('""', 1.0), (')', 0.7058823529411765), (';', 0.6090406958288362), ('requestListener', 8.836068832976209e-05), ('.', 1.0), ('requestInitialized', 0.5555555555555556), ('(', 1.0), ('new', 1.0), ('MethodExtractorRule', 0.0027491408934707906), (')', 'Paren balancing'), (')', 'Paren balancing')]","private Map < String , Object > ( ) throws IOException { serverSideSocket . getSoTimeout ( ) ; } Locale locale = jstlWrapper . findLocale ( request ! = null & & threadId ! = null ) | | isLowerCaseLetter ( candidate . startsWith ( "" TearDown "" ) ; requestListener . requestInitialized ( new MethodExtractorRule ) )"
92,"['public', 'void']","[('process', 0.003559820461228912), ('(', 1.0), ('WatcherEvent', 0.06542056074766354), ('event', 1.0), (')', 0.875), ('{', 0.6041666666666666), ('runPages', 6.515082415792559e-05), ('(', 1.0), ('List', 0.8333333333333334), ('<', 0.8803418803418803), ('Class', 0.008653846153846154), (',', 0.14705882352941177), ('Class', 1.0), ('[', 0.013333333333333334), (']', 1.0), ('convertedArgs', 0.001987413050679033), ('=', 1.0), ('new', 0.6666666666666666), ('RequestInfo', 0.004555542576801776), ('(', 1.0), ('context', 0.6511627906976745), (',', 0.5644171779141104), ('Request', 0.17746113989637305), ('request', 1.0), (',', 0.13653136531365315), ('response', 0.25663716814159293), ('.', 0.7636363636363637), ('getStatus', 0.14355828220858896), ('(', 1.0), (')', 0.9723756906077348), (')', 0.1723209995194618), (';', 0.6920507070614618), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('parenFormatHtml', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (')', 0.1723209995194618), ('return', 0.017985446890302504), ('false', 0.19111111111111112), (';', 1.0), ('}', 0.5553319919517102), ('long', 0.005674765029260507), ('createSession', 0.42424242424242425), ('(', 1.0), ('int', 0.72), ('i', 0.1341183228029868), ('=', 0.9117647058823529), ('0', 0.7551789077212806), (';', 0.6786355475763016), ('i', 0.47447073474470736), ('+', 0.4702517162471396), ('+', 0.8926315789473684), ('zxid', 0.0010090817356205853), (',', 1.0), ('long', 0.15789473684210525), ('def', 0.48320943347859524), (',', 0.4470338983050847), ('OperationCallback', 0.002320185614849188), ('cb', 0.9263157894736842), (')', 0.9915966386554622), (';', 0.9366812227074236), ('pageOne', 0.0004307583556075902), ('=', 0.6136363636363636), ('root', 0.3114754098360656), ('.', 0.9424242424242424), ('getChildren', 0.0186219739292365), ('(', 1.0), (')', 'Paren balancing')]","public void process ( WatcherEvent event ) { runPages ( List < Class , Class [ ] convertedArgs = new RequestInfo ( context , Request request , response . getStatus ( ) ) ; public void parenFormatHtml ( ) ) return false ; } long createSession ( int i = 0 ; i + + zxid , long def , OperationCallback cb ) ; pageOne = root . getChildren ( )"
93,"['public', 'void']","[('testEmailRegularExpression', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('append', 0.049687060927321496), ('(', 0.9965635738831615), ('c', 0.011556240369799691), (')', 0.5190839694656488), ('.', 0.09009009009009009), ('is', 0.004598288414867799), ('(', 1.0), ('equalTo', 0.3667649950835792), ('(', 1.0), ('""', 0.24162679425837322), ('testSlim', 0.0011795791261677833), ('""', 1.0), (',', 1.0), ('""', 0.38678420515809414), ('RooT', 0.0028095958504430517), ('""', 1.0), (')', 0.8995215311004785), (';', 0.6090406958288362), ('Future', 0.03465947999734918), ('<', 1.0), ('CASValue', 0.10792580101180438), ('<', 0.993127147766323), ('Object', 0.49916943521594687), ('>', 0.9740680713128039), ('getDefaultTranscoder', 0.021137026239067054), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('long', 0.030583843248138905), ('decr', 0.3516146993318486), ('(', 1.0), ('String', 0.9961180124223602), ('key', 0.5850175575497464), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('by', 0.4236348818255909), (')', 0.47809377401998465), (';', 0.7569158328428487), ('getChildPage', 4.418034416488104e-05), ('(', 1.0), ('ErrorLogName', 0.022099447513812154), (')', 1.0), (';', 0.7142857142857143), ('String', 0.026430890896640084), ('pathname', 0.002197802197802198), ('=', 1.0), ('context', 1.0), ('.', 0.9058823529411765), ('getRootPage', 0.06683168316831684), ('(', 1.0), (')', 0.9137931034482759), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('(', 0.045177482968806026), ('""', 0.02857142857142857), ('v', 0.0004718316504671133), ('""', 1.0), (')', 0.3333333333333333), (')', 0.23592152879182274), (';', 0.6920507070614618), ('LOG', 0.002286332810532594), ('.', 1.0), ('isDebugEnabled', 0.029005524861878452), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('PageHistory', 0.0003156565656565657), ('.', 0.5), ('TestResultRecord', 0.4444444444444444), ('record', 0.125), ('=', 0.8), ('buildTestResultRecord', 0.14285714285714285), ('(', 1.0), ('File', 0.4), ('file', 0.3687315634218289), (':', 0.09), ('files', 0.3888888888888889), (')', 0.8181818181818182), (';', 0.5740740740740741), ('String', 0.026430890896640084), ('getSecureClientAddress', 0.029304029304029304), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('request', 0.007267666615122932), ('.', 0.8663663663663663), ('setResource', 0.2203921568627451), ('(', 1.0), ('""', 0.6028368794326241), ('PageOne.PageTwo', 0.000566197980560536), ('""', 1.0), (')', 0.8333333333333334), (';', 0.6090406958288362), ('checkWord', 0.0002650820649892863), ('(', 1.0), ('true', 0.7777777777777778), (')', 0.76875), (';', 0.7053824362606232), ('}', 0.17806887715655306), ('src', 0.00017733640716439085), ('.', 1.0), ('getName', 0.13043478260869565), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('is', 0.004598288414867799), ('(', 1.0), ('equalTo', 0.3667649950835792), ('(', 1.0), ('""', 0.24162679425837322), ('/resource/method', 4.7183165046711336e-05), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('this', 0.009366232962954782), ('.', 1.0), ('root', 0.021925133689839574), (',', 0.34355828220858897), ('PathParser', 0.6455357142857143), ('.', 1.0), ('parse', 0.9156272927366104), ('(', 1.0), (')', 0.02788622420524261), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('variables', 0.0010756543564001434), ('.', 0.8), ('put', 0.828125), ('(', 1.0), ('""', 0.5487914055505819), ('BlahBlah', 0.00018873266018684534), ('""', 1.0), (')', 1.0), (';', 0.6090406958288362), ('boolean', 0.02482935342066315), ('shutdown', 0.16020671834625322), ('(', 1.0), ('long', 0.36135265700483093), ('timeout', 0.388861013547416), (',', 0.9872122762148338), ('TimeUnit', 0.9625468164794008), ('unit', 0.897196261682243), (')', 1.0), (';', 0.9728682170542635), ('public', 0.04915063288343016), ('void', 0.38510051241623966), ('convertView', 7.738740133106331e-05), ('(', 1.0), ('PwEntry', 0.5), ('entry', 0.7307692307692307), (')', 0.7727272727272727), ('{', 0.3150684931506849), ('final', 0.014528633787217408), ('String', 0.1982142857142857), ('key', 0.38055322715842416), (')', 0.14608612895550796), ('throws', 0.21220527045769763), ('IOException', 0.1847106248200403), (';', 0.3589243959469992), ('void', 0.42702702702702705), ('rename', 0.004713949003642597), ('(', 1.0), (')', 'Paren balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing'), ('}', 'Bracket balancing')]","public void testEmailRegularExpression ( ) . append ( c ) . is ( equalTo ( "" testSlim "" , "" RooT "" ) ; Future < CASValue < Object > getDefaultTranscoder ( ) ; long decr ( String key , int by ) ; getChildPage ( ErrorLogName ) ; String pathname = context . getRootPage ( ) { return ( "" v "" ) ) ; LOG . isDebugEnabled ( ) throws Exception { PageHistory . TestResultRecord record = buildTestResultRecord ( File file : files ) ; String getSecureClientAddress ( ) ; request . setResource ( "" PageOne.PageTwo "" ) ; checkWord ( true ) ; } src . getName ( ) . is ( equalTo ( "" /resource/method "" ) ; this . root , PathParser . parse ( ) { return variables . put ( "" BlahBlah "" ) ; boolean shutdown ( long timeout , TimeUnit unit ) ; public void convertView ( PwEntry entry ) { final String key ) throws IOException ; void rename ( ) ) ) )"
94,"['public', 'Object']","[('methodInvoke', 0.019704433497536946), ('(', 1.0), ('getI', 0.125), (',', 1.0), ('o', 0.5), (',', 0.5263157894736842), ('Transcoder', 0.967816091954023), ('<', 1.0), ('T', 0.9695639449809774), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (';', 0.7985474006116208), ('public', 0.04915063288343016), ('String', 0.06996452502956248), ('getSecureClientPort', 0.12330316742081449), ('(', 1.0), (')', 1.0), ('{', 0.09111004324843826), ('handshakeCompleted', 6.515082415792559e-05), ('=', 1.0), ('}', 'Bracket balancing')]","public Object methodInvoke ( getI , o , Transcoder < T > tc ) ; public String getSecureClientPort ( ) { handshakeCompleted = )"
95,"['public', 'void']","[('add', 0.004952793685188052), ('(', 1.0), ('long', 0.002307692307692308), ('delay', 0.14701455092824886), (')', 0.9898648648648649), (';', 0.9894894894894894), ('String', 0.026430890896640084), ('value', 0.007692307692307693), ('=', 0.16819571865443425), ('=', 0.372), ('null', 0.518327605956472), ('&', 0.07550407550407551), ('&', 1.0), ('!', 0.1765601217656012), ('(', 0.034482758620689655), ('contains', 0.009900990099009901), ('(', 1.0), ('final', 0.0029239766081871343), ('String', 0.4845878136200717), ('key', 0.38055322715842416), (',', 0.8474898881751131), ('int', 0.5105263157894737), ('exp', 0.34360228198859005), (',', 0.5522565320665083), ('final', 0.14996496145760335), ('Label', 0.04744255003706449), ('end', 0.15384615384615385), (',', 0.8947368421052632), ('final', 0.5833333333333334), ('int', 0.3832468495181616), ('CLIENT_PORT', 0.031914893617021274), ('=', 1.0), ('PortAssignment', 0.8571428571428571), ('.', 1.0), ('unique', 0.9925373134328358), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('String', 0.026430890896640084), ('css', 0.0029304029304029304), (';', 0.8888888888888888), ('StringBuffer', 0.6666666666666666), ('sb', 0.475), (';', 0.13636363636363635), ('int', 0.8571428571428571), ('getRequestThrottleLimit', 0.02773650321941555), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('for', 0.006207338355165787), ('(', 1.0), ('final', 0.007069913589945012), ('String', 0.4845878136200717), ('versionName', 0.0016764459346186086), (')', 0.9642857142857143), (';', 0.6548672566371682), ('CachedData', 4.418034416488104e-05), ('cd', 1.0), ('=', 1.0), ('new', 0.4666666666666667), ('ScenarioTable', 0.003621072304637309), ('(', 1.0), ('ts', 0.7096774193548387), ('.', 1.0), ('getTable', 0.8440366972477065), ('(', 1.0), (')', 0.5482456140350878), (';', 0.4777126381547333), ('one', 0.005169100267291082), ('(', 1.0), ('context', 0.06512301013024602), (',', 0.5644171779141104), ('String', 0.042746113989637305), ('filename', 0.006211180124223602), (')', 0.15492957746478872), (';', 0.6071428571428571), ('MultipleAddresses', 8.836068832976209e-05), ('multipleAddresses', 1.0), ('=', 1.0), ('new', 1.0), ('HtmlTag', 0.015301950706693143), ('(', 0.9879518072289156), ('""', 0.9878048780487805), ('SomePage', 0.004907049164857979), ('""', 1.0), (',', 0.16964285714285715), ('true', 0.011511001019962115), (',', 0.28874734607218683), ('1', 0.024), (')', 0.49184149184149184), (';', 0.450187265917603), ('op3', 3.3135258123660786e-05), ('.', 1.0), ('setPath', 0.3333333333333333), ('(', 1.0), ('serverPath', 0.375), (')', 0.5), (';', 1.0), ('<', 0.033080032693454685), ('T', 1.0), ('>', 0.9951795613400819), ('tc', 0.32430196483971047), (')', 0.8272900763358778), (')', 'Paren balancing'), (')', 'Paren balancing')]","public void add ( long delay ) ; String value = = null & & ! ( contains ( final String key , int exp , final Label end , final int CLIENT_PORT = PortAssignment . unique ( ) ; String css ; StringBuffer sb ; int getRequestThrottleLimit ( ) ; for ( final String versionName ) ; CachedData cd = new ScenarioTable ( ts . getTable ( ) ; one ( context , String filename ) ; MultipleAddresses multipleAddresses = new HtmlTag ( "" SomePage "" , true , 1 ) ; op3 . setPath ( serverPath ) ; < T > tc ) ) )"
96,"['public', 'void']","[('produce', 0.0018572976319455193), ('(', 1.0), ('pReceiver', 0.23076923076923078), (')', 0.9), (';', 0.3333333333333333), ('Object', 0.0023526033267799156), ('get', 0.6), ('(', 1.0), ('String', 0.22434150772025432), ('tag', 0.007257120561841592), (')', 0.9582366589327146), ('throws', 0.806060606060606), ('Exception', 0.5000719838756119), ('{', 0.9247048661099914), ('String', 0.07275883838383838), ('text', 0.014586709886547812), ('=', 0.4126984126984127), ('""', 0.4358974358974359), ('library', 0.006825938566552901), ('""', 1.0), ('+', 0.8888888888888888), ('hostName', 0.0012437810945273632), ('+', 1.0), ('""', 0.75), ('collapsibleClosed.png', 0.0009185548071034905), ('""', 1.0), (',', 1.0), ('entry1', 0.0002914177473408131), ('.', 1.0), ('getUserName', 0.3333333333333333), ('(', 1.0), (')', 1.0), (',', 0.04123017779913503), ('asList', 0.010348583877995643), ('(', 1.0), ('""', 0.3560311284046693), ('PageHeader', 0.000566197980560536), ('""', 1.0), (')', 0.5), (';', 0.6090406958288362), ('historyPurger', 4.418034416488104e-05), ('.', 0.75), ('deleteTestHistoryOlderThanDays', 0.4), ('(', 1.0), ('File', 0.42857142857142855), ('file', 0.3687315634218289), (')', 0.375), (';', 0.5056179775280899), ('}', 0.17806887715655306), ('String', 0.00620677425075368), ('quorumCfgSection', 0.13513513513513514), ('=', 0.9583333333333334), ('String', 0.08333333333333333), ('.', 1.0), ('.', 0.7353474320241692), ('.', 0.5), ('initargs', 0.0007067137809187279)]","public void produce ( pReceiver ) ; Object get ( String tag ) throws Exception { String text = "" library "" + hostName + "" collapsibleClosed.png "" , entry1 . getUserName ( ) , asList ( "" PageHeader "" ) ; historyPurger . deleteTestHistoryOlderThanDays ( File file ) ; } String quorumCfgSection = String . . . initargs"
97,"['public', 'static']","[('class', 0.021784232365145227), ('InterceptorB', 0.017241379310344827), ('implements', 1.0), ('Interceptor', 1.0), ('{', 1.0), ('public', 1.0), ('void', 0.6027397260273972), ('testNormalRun', 7.738740133106331e-05), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('ZooKeeper', 0.000927787227462502), ('zk', 0.6391752577319587), ('=', 0.7777777777777778), ('mock', 0.014705882352941176), ('(', 1.0), ('Router', 0.011891891891891892), ('.', 0.875), ('class', 1.0), (')', 0.5668416801292407), (';', 0.683291770573566), ('}', 0.17806887715655306), ('public', 0.0813974108884554), ('void', 0.7639198218262806), ('reset', 0.0021668472372697724), ('(', 1.0), (')', 0.9880952380952381), ('{', 0.09111004324843826), ('return', 0.14763176754185942), ('listeners', 0.0007171029042667623), (';', 1.0), ('}', 1.0), ('return', 0.1317609505231424), ('i', 0.004410143329658214), (';', 0.3333333333333333), ('return', 0.08333333333333333), ('String', 0.003708281829419036), ('.', 1.0), ('.', 0.7353474320241692)]",public static class InterceptorB implements Interceptor { public void testNormalRun ( ) ; ZooKeeper zk = mock ( Router . class ) ; } public void reset ( ) { return listeners ; } return i ; return String . .
98,"['public', 'TargetResult']",[],public TargetResult
99,"['private', 'String']","[('nextSymbol', 0.002638522427440633), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('return', 0.02244361483575957), ('(', 0.027194066749072928), ('type', 0.004761904761904762), (')', 0.5611510791366906), (';', 0.4223300970873786), ('BulkFuture', 0.0036227882215202458), ('<', 1.0), ('Map', 1.0), ('<', 0.9933283914010378), ('SocketAddress', 0.18384518300378627), (',', 0.9722530521642619), ('String', 0.3515981735159817), ('.', 0.15150842945874002), ('format', 0.14682779456193354), ('(', 0.9970238095238095), ('theValue', 0.008645533141210375), (')', 1.0), (';', 0.5), ('String', 0.026430890896640084), ('relativeName', 0.002564102564102564), (',', 0.42857142857142855), ('counts', 0.05555555555555555), ('.', 0.8615384615384616), ('getWrong', 0.08035714285714286), ('(', 1.0), (')', 1.0), ('.', 0.0554925516578568), ('getIgnores', 0.00395963724613616), ('(', 1.0), (')', 1.0), ('throws', 0.13210956271023547), ('IOException', 0.1847106248200403), ('{', 0.46141855027279816), ('if', 0.10597609561752988), ('(', 1.0), ('springListenerAlreadyCalled', 0.0002090738030524775), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('void', 0.04505290596213744), ('resetStatistics', 0.01542746946646668), ('(', 1.0), (')', 1.0), (';', 0.4777126381547333), ('}', 0.17806887715655306), ('container', 0.0008866820358219542), ('.', 1.0), ('register', 0.46863468634686345), ('(', 1.0), ('Class', 0.0518018018018018), ('<', 0.919921875), ('T', 0.30843373493975906), (')', 'Paren balancing'), (')', 'Paren balancing')]","private String nextSymbol ( ) ; return ( type ) ; BulkFuture < Map < SocketAddress , String . format ( theValue ) ; String relativeName , counts . getWrong ( ) . getIgnores ( ) throws IOException { if ( springListenerAlreadyCalled ( ) ; void resetStatistics ( ) ; } container . register ( Class < T ) )"
100,"['void', 'add']","[('(', 1.0), ('ExecuteMethodInterceptor', 0.005), ('.', 1.0), ('class', 1.0), (',', 0.31704361873990305), ('bundle', 0.06298200514138817), (')', 1.0), ('{', 0.3244444444444444), ('return', 0.14763176754185942), ('String', 0.010756543564001434), ('.', 1.0), ('.', 0.7353474320241692), ('keys', 0.3872791519434629), ('(', 0.0018198362147406734), (')', 1.0), (';', 0.4777126381547333), ('validator', 0.0001435861185358634), ('.', 0.8888888888888888), ('checking', 0.375), ('(', 1.0), ('new', 0.9824046920821115), ('Byte', 0.004467353951890034), (')', 'Paren balancing'), ('}', 'Bracket balancing')]","void add ( ExecuteMethodInterceptor . class , bundle ) { return String . . keys ( ) ; validator . checking ( new Byte ) )"
